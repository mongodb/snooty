{"index":{"_id":"guides/andrew/master/index","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"target","position":{"start":{"line":0}},"ids":["guides"],"children":[]},{"type":"section","position":{"start":{"line":4}},"children":[{"type":"heading","position":{"start":{"line":4}},"id":"id1","children":[{"type":"text","position":{"start":{"line":4}},"value":"Guides"}]},{"type":"directive","position":{"start":{"line":6}},"name":"default-domain","argument":[{"type":"text","position":{"start":{"line":6}},"value":"mongodb"}],"children":[]},{"type":"directive","position":{"start":{"line":1}},"name":"guide-index","argument":[],"children":[{"type":"directive","position":{"start":{"line":4}},"name":"card","argument":[{"type":"text","position":{"start":{"line":4}},"value":"server/introduction"}],"children":[]},{"type":"directive","position":{"start":{"line":6}},"name":"card","argument":[{"type":"text","position":{"start":{"line":6}},"value":"server/install"}],"children":[]},{"type":"directive","position":{"start":{"line":8}},"name":"card","argument":[{"type":"text","position":{"start":{"line":8}},"value":"server/auth"}],"children":[]},{"type":"directive","position":{"start":{"line":10}},"name":"multi-card","argument":[{"type":"text","position":{"start":{"line":10}},"value":"MongoDB in the Cloud"}],"children":[{"type":"list","position":{"start":{"line":12}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":12}},"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"cloud/atlas"}]}]},{"type":"listItem","position":{"start":{"line":12}},"children":[{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"cloud/connectionstring"}]}]}]}]},{"type":"directive","position":{"start":{"line":16}},"name":"multi-card","argument":[{"type":"text","position":{"start":{"line":16}},"value":"Migrate to MongoDB Atlas"}],"children":[{"type":"list","position":{"start":{"line":18}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":18}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"cloud/migrate-from-aws-to-atlas"}]}]},{"type":"listItem","position":{"start":{"line":18}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"cloud/migrate-from-compose"}]}]}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"card","argument":[{"type":"text","position":{"start":{"line":22}},"value":"server/import"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"card","argument":[{"type":"text","position":{"start":{"line":24}},"value":"server/drivers"}],"children":[]},{"type":"directive","position":{"start":{"line":26}},"name":"multi-card","argument":[{"type":"text","position":{"start":{"line":26}},"value":"CRUD Guides: Create, Read, Update, and Delete Data"}],"children":[{"type":"list","position":{"start":{"line":28}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"server/insert"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"server/read"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"server/read_queries"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"text","position":{"start":{"line":31}},"value":"server/read_operators"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":32}},"children":[{"type":"text","position":{"start":{"line":32}},"value":"server/update"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"server/delete"}]}]}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"card","argument":[{"type":"text","position":{"start":{"line":36}},"value":"stitch/react_googleauth"}],"children":[]}]}]}],"position":{"start":{"line":0}}},"source":".. _guides:\n\n======\nGuides\n======\n\n.. default-domain:: mongodb\n\n   \n.. guide-index::\n\n   server/introduction\n   server/install\n   server/auth\n   MongoDB in the Cloud\n     cloud/atlas\n     cloud/connectionstring \n   Migrate to MongoDB Atlas\n     cloud/migrate-from-aws-to-atlas\n     cloud/migrate-from-compose\n   server/import\n   server/drivers\n   CRUD Guides: Create, Read, Update, and Delete Data\n     server/insert\n     server/read\n     server/read_queries\n     server/read_operators\n     server/update\n     server/delete\n   stitch/react_googleauth\n","static_assets":[]},"JSON is formatted as name/value pairs. In JSON documents, fieldnames\nand values are separated by a colon, fieldname and value pairs are\nseparated by commas, and sets of fields are encapsulated in \"curly\nbraces\" ({}).":{},"Next you will decide which fields require multiple values. These\nfields will be candidates for embedded documents or lists/arrays of\nembedded documents within the document.":{},"includes/steps/intro_server":{"_id":"guides/andrew/master/includes/steps/intro_server","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Define Your Data Set"}],"id":"define-your-data-set"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"When setting up a data store, your first task is to answer the\nquestion: \"What data would I like to store and how do the fields\nrelate to each other?\"."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"This guide uses a hypothetical inventory database to track items and\ntheir quantities, sizes, tags, and ratings."}]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Here is an example of the types of fields you might wish to capture:"}]},{"type":"directive","position":{"start":{"line":9}},"name":"list-table","argument":[],"options":{"header-rows":1,"widths":"auto","class":"guide-tablenate"},"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"name"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"quantity"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"size"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"status"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"tags"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"rating"}]}]}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":21}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"journal"}]}]},{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"25"}]}]},{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"14x21,cm"}]}]},{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"A"}]}]},{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":25}},"children":[{"type":"text","position":{"start":{"line":25}},"value":"brown, lined"}]}]},{"type":"listItem","position":{"start":{"line":21}},"children":[{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"9"}]}]}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":28}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"notebook"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"50"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"8.5x11,in"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"text","position":{"start":{"line":31}},"value":"A"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":32}},"children":[{"type":"text","position":{"start":{"line":32}},"value":"college-ruled,perforated"}]}]},{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"8"}]}]}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":35}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":35}},"children":[{"type":"text","position":{"start":{"line":35}},"value":"paper"}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"100"}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"8.5x11,in"}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"D"}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":39}},"children":[{"type":"text","position":{"start":{"line":39}},"value":"watercolor"}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"10"}]}]}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":42}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":42}},"children":[{"type":"text","position":{"start":{"line":42}},"value":"planner"}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":43}},"children":[{"type":"text","position":{"start":{"line":43}},"value":"75"}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"22.85x30,cm"}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":45}},"children":[{"type":"text","position":{"start":{"line":45}},"value":"D"}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"2019"}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"10"}]}]}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"list","position":{"start":{"line":49}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":49}},"children":[{"type":"text","position":{"start":{"line":49}},"value":"postcard"}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":50}},"children":[{"type":"text","position":{"start":{"line":50}},"value":"45"}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"text","position":{"start":{"line":51}},"value":"10x,cm"}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":52}},"children":[{"type":"text","position":{"start":{"line":52}},"value":"D"}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":53}},"children":[{"type":"text","position":{"start":{"line":53}},"value":"double-sided,white"}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"2"}]}]}]}]}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Start Thinking in JSON"}],"id":"start-thinking-in-json"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"While a table might seem like a good place to store data, as you can\nsee from the example above, there are fields in this data set that\nrequire multiple values and would not be easy to search or display if\nmodeled in a single column (for example -- "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" and "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"tags"}]},{"type":"text","position":{"start":{"line":0}},"value":")."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"In a SQL database you might solve this problem by creating a\nrelational table."}]},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"In MongoDB, data is stored as documents. These documents are stored in\nMongoDB in "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"JSON"}]},{"type":"text","position":{"start":{"line":8}},"value":" (JavaScript Object Notation) format. JSON documents support\nembedded fields, so related data and lists of data can be stored with\nthe document instead of an external table."}]},{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"JSON is formatted as name/value pairs. In JSON documents, fieldnames\nand values are separated by a colon, fieldname and value pairs are\nseparated by commas, and sets of fields are encapsulated in \"curly\nbraces\" ({})."}]},{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"If you wanted to begin to model one of the rows above, for example\nthis one:"}]},{"type":"directive","position":{"start":{"line":21}},"name":"list-table","argument":[],"options":{"header-rows":1,"widths":"auto","class":"guide-tablenate-odd"},"children":[{"type":"list","position":{"start":{"line":26}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"list","position":{"start":{"line":26}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"name"}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":27}},"children":[{"type":"text","position":{"start":{"line":27}},"value":"quantity"}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"size"}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"status"}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"tags"}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"text","position":{"start":{"line":31}},"value":"rating"}]}]}]}]},{"type":"listItem","position":{"start":{"line":26}},"children":[{"type":"list","position":{"start":{"line":33}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"notebook"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":34}},"children":[{"type":"text","position":{"start":{"line":34}},"value":"50"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":35}},"children":[{"type":"text","position":{"start":{"line":35}},"value":"8.5x11,in"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"A"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"college-ruled,perforated"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"8"}]}]}]}]}]}]},{"type":"paragraph","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"You might start with the "},{"type":"literal","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"name"}]},{"type":"text","position":{"start":{"line":40}},"value":" and "},{"type":"literal","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"quantity"}]},{"type":"text","position":{"start":{"line":40}},"value":" fields. In JSON\nthese fields would look like:"}]},{"type":"code","position":{"start":{"line":43}},"lang":"javascript","copyable":true,"value":"{\"name\": \"notebook\", \"qty\": 50}"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Identify Candidates for Embedded Data and Model Your Data"}],"id":"identify-candidates-for-embedded-data-and-model-your-data"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Next you will decide which fields require multiple values. These\nfields will be candidates for embedded documents or lists/arrays of\nembedded documents within the document."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"For example, in the data above, "},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"size"}]},{"type":"text","position":{"start":{"line":4}},"value":" might consist of three\nfields:"}]},{"type":"code","position":{"start":{"line":7}},"lang":"javascript","copyable":true,"value":"{ \"h\": 11, \"w\": 8.5, \"uom\": \"in\" }"},{"type":"paragraph","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"And some items have multiple ratings, so "},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"ratings"}]},{"type":"text","position":{"start":{"line":11}},"value":" might be\nrepresented as a list of documents containing the field "},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"scores"}]},{"type":"text","position":{"start":{"line":11}},"value":":"}]},{"type":"code","position":{"start":{"line":14}},"lang":"javascript","copyable":true,"value":"[ { \"score\": 8 }, { \"score\": 9 } ]"},{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"And you might need to handle multiple tags per item. So you might\nstore them in a list too."}]},{"type":"code","position":{"start":{"line":21}},"lang":"javascript","copyable":true,"value":"[ \"college-ruled\", \"perforated\" ]"},{"type":"paragraph","position":{"start":{"line":25}},"children":[{"type":"text","position":{"start":{"line":25}},"value":"Finally, a JSON document that stores an inventory item might look like this:"}]},{"type":"code","position":{"start":{"line":27}},"lang":"javascript","copyable":true,"value":"{\n \"name\": \"notebook\",\n \"qty\": 50,\n \"rating\": [ { \"score\": 8 }, { \"score\": 9 } ],\n \"size\": { \"height\": 11, \"width\": 8.5, \"unit\": \"in\" },\n \"status\": \"A\",\n \"tags\": [ \"college-ruled\", \"perforated\"]\n}"},{"type":"paragraph","position":{"start":{"line":39}},"children":[{"type":"text","position":{"start":{"line":39}},"value":"This looks very different from the tabular data  structure you started\nwith in Step 1."}]},{"type":"directive","position":{"start":{"line":42}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"It's a JSON standard to quote field names."}]}]}]}]}]},"source":"title: Define Your Data Set\nref: define_ds\nlevel: 4\nstepnum: 1\ncontent: |\n  \n  When setting up a data store, your first task is to answer the\n  question: \"What data would I like to store and how do the fields\n  relate to each other?\".         \n\n  This guide uses a hypothetical inventory database to track items and\n  their quantities, sizes, tags, and ratings.\n  \n  Here is an example of the types of fields you might wish to capture:\n  \n  .. list-table::\n     :header-rows: 1\n     :widths: auto\n     :class: guide-tablenate\n\n     * - name\n       - quantity\n       - size\n       - status\n       - tags\n       - rating\n\n     * - journal\n       - 25\n       - 14x21,cm\n       - A\n       - brown, lined\n       - 9\n       \n     * - notebook\n       - 50\n       - 8.5x11,in\n       - A\n       - college-ruled,perforated\n       - 8\n       \n     * - paper\n       - 100\n       - 8.5x11,in\n       - D\n       - watercolor\n       - 10\n\n     * - planner\n       - 75\n       - 22.85x30,cm\n       - D\n       - 2019\n       - 10\n       \n     * - postcard\n       - 45\n       - 10x,cm\n       - D\n       - double-sided,white   \n       - 2\n\n---\n       \ntitle: Start Thinking in JSON\nref: id_message\nlevel: 4\nstepnum: 2\ncontent: |\n  \n  While a table might seem like a good place to store data, as you can\n  see from the example above, there are fields in this data set that\n  require multiple values and would not be easy to search or display if\n  modeled in a single column (for example -- ``size`` and ``tags``).\n  \n  In a SQL database you might solve this problem by creating a\n  relational table.\n\n  In MongoDB, data is stored as documents. These documents are stored in\n  MongoDB in ``JSON`` (JavaScript Object Notation) format. JSON documents support\n  embedded fields, so related data and lists of data can be stored with\n  the document instead of an external table.\n\n  JSON is formatted as name/value pairs. In JSON documents, fieldnames\n  and values are separated by a colon, fieldname and value pairs are\n  separated by commas, and sets of fields are encapsulated in \"curly\n  braces\" ({}).\n\n  If you wanted to begin to model one of the rows above, for example\n  this one:\n\n  .. list-table::\n     :header-rows: 1\n     :widths: auto\n     :class: guide-tablenate-odd\n\n     * - name\n       - quantity\n       - size\n       - status\n       - tags\n       - rating\n       \n     * - notebook\n       - 50\n       - 8.5x11,in\n       - A\n       - college-ruled,perforated\n       - 8\n\n  You might start with the ``name`` and ``quantity`` fields. In JSON\n  these fields would look like:\n\n  .. code-block:: javascript\n\n     {\"name\": \"notebook\", \"qty\": 50}\n\n---      \ntitle: Identify Candidates for Embedded Data and Model Your Data\nref: json_implement\nlevel: 4\nstepnum: 3\ncontent: |\n\n  Next you will decide which fields require multiple values. These\n  fields will be candidates for embedded documents or lists/arrays of\n  embedded documents within the document.\n  \n  For example, in the data above, ``size`` might consist of three\n  fields:\n  \n  .. code-block:: javascript\n  \n     { \"h\": 11, \"w\": 8.5, \"uom\": \"in\" }\n     \n  And some items have multiple ratings, so ``ratings`` might be\n  represented as a list of documents containing the field ``scores``:\n\n  .. code-block:: javascript\n  \n     [ { \"score\": 8 }, { \"score\": 9 } ]\n  \n  And you might need to handle multiple tags per item. So you might\n  store them in a list too.\n  \n  .. code-block:: javascript\n  \n     [ \"college-ruled\", \"perforated\" ]\n  \n  Finally, a JSON document that stores an inventory item might look like this:\n  \n  .. code-block:: javascript\n  \n    \n     {\n      \"name\": \"notebook\",\n      \"qty\": 50,\n      \"rating\": [ { \"score\": 8 }, { \"score\": 9 } ],\n      \"size\": { \"height\": 11, \"width\": 8.5, \"unit\": \"in\" },\n      \"status\": \"A\",\n      \"tags\": [ \"college-ruled\", \"perforated\"]\n     }\n\n  This looks very different from the tabular data  structure you started\n  with in Step 1.\n\n  .. note:: \n     \n     It's a JSON standard to quote field names.\n  \n  \n     \n  \n  \n  \n","static_assets":[]},"includes/beginner_note":{"_id":"guides/andrew/master/includes/beginner_note","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[{"type":"text","position":{"start":{"line":0}},"value":"This guide is intended for new learners of MongoDB. For more in-depth information, see "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/manual/introduction","children":[{"type":"text","position":{"start":{"line":0}},"value":"The MongoDB Server Manual"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}],"children":[]}],"position":{"start":{"line":0}}},"source":".. note::\n     This guide is intended for new learners of MongoDB. For more in-depth information, see :manual:`The MongoDB Server Manual </manual/introduction>`.","static_assets":[]},"server/introduction":{"_id":"guides/andrew/master/server/introduction","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"structure-your-data-for-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Structure your Data for MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"Welcome to the Getting Started guides. This guide will show you how to structure data for MongoDB."}]}]},{"type":"directive","position":{"start":{"line":20}},"name":"time","argument":[{"type":"text","position":{"start":{"line":20}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":22}},"name":"prerequisites","argument":[],"children":[{"type":"list","position":{"start":{"line":24}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":24}},"children":[{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"An idea of what data you'd like to store"}]}]}]}]},{"type":"directive","position":{"start":{"line":26}},"name":"check_your_environment","argument":[],"children":[{"type":"list","position":{"start":{"line":28}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":28}},"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"There are no technical requirements for this guide."}]}]}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":32}},"name":"include","argument":[{"type":"text","position":{"start":{"line":32}},"value":"/includes/steps/intro_server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":32}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":34}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"Congratulations. You now have an idea of how to structure your data using a JSON document."}]}]},{"type":"directive","position":{"start":{"line":38}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"Next you'll set up a MongoDB instance. Choose one of the following options:"}]},{"type":"list","position":{"start":{"line":42}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":42}},"children":[{"type":"role","position":{"start":{"line":42}},"name":"doc","label":{"type":"text","value":"Install MongoDB locally","position":{"start":{"line":39}}},"target":"/server/install","children":[]}]}]},{"type":"listItem","position":{"start":{"line":42}},"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"role","position":{"start":{"line":44}},"name":"doc","label":{"type":"text","value":"Create an Atlas Account and Cluster","position":{"start":{"line":41}}},"target":"/cloud/atlas","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":46}},"name":"seealso","argument":[],"children":[{"type":"list","position":{"start":{"line":48}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":48}},"children":[{"type":"paragraph","position":{"start":{"line":48}},"children":[{"type":"reference","position":{"start":{"line":48}},"refuri":"https://docs.mongodb.com/manual/core/document","children":[{"type":"text","position":{"start":{"line":48}},"value":"The MongoDB manual on Documents"}]}]}]},{"type":"listItem","position":{"start":{"line":48}},"children":[{"type":"paragraph","position":{"start":{"line":49}},"children":[{"type":"reference","position":{"start":{"line":49}},"refuri":"https://docs.mongodb.com/manual/core/data-modeling-introduction","children":[{"type":"text","position":{"start":{"line":49}},"value":"The MongoDB manual on Data Modeling"}]}]}]},{"type":"listItem","position":{"start":{"line":48}},"children":[{"type":"paragraph","position":{"start":{"line":50}},"children":[{"type":"text","position":{"start":{"line":50}},"value":"You can define the structure of your data for MongoDB using a JSON schema. See "},{"type":"reference","position":{"start":{"line":50}},"refuri":"https://docs.mongodb.com/manual/core/schema-validation","children":[{"type":"text","position":{"start":{"line":50}},"value":"Schema Validation"}]},{"type":"text","position":{"start":{"line":50}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":48}},"children":[{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"text","position":{"start":{"line":51}},"value":"Read more about what MongoDB can do, see "},{"type":"reference","position":{"start":{"line":51}},"refuri":"https://docs.mongodb.com/manual/introduction","children":[{"type":"text","position":{"start":{"line":51}},"value":"Introduction to MongoDB"}]}]}]}]},{"type":"directive","position":{"start":{"line":53}},"name":"include","argument":[{"type":"text","position":{"start":{"line":53}},"value":"/includes/beginner_note.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":53}},"children":[]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Structure your Data for MongoDB\n   author: MongoDB Documentation Team \n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   result_description:\n     Welcome to the Getting Started guides. This guide will show you how to structure data for MongoDB.\n   time: 15\n   prerequisites:\n     - An idea of what data you'd like to store\n   check_your_environment:\n     - There are no technical requirements for this guide.\n   procedure:\n     .. include:: /includes/steps/intro_server.rst\n   summary:\n     Congratulations. You now have an idea of how to structure your data using a JSON document. \n   whats_next:\n\n     Next you'll set up a MongoDB instance. Choose one of the following options:\n\n     - :doc:`Install MongoDB locally </server/install>`\n\n     - :doc:`Create an Atlas Account and Cluster </cloud/atlas>`\n\n\n   seealso:\n     - :manual:`The MongoDB manual on Documents </core/document>`\n     - :manual:`The MongoDB manual on Data Modeling </core/data-modeling-introduction>` \n     - You can define the structure of your data for MongoDB using a JSON schema. See :manual:`Schema Validation </core/schema-validation>`.\n     - Read more about what MongoDB can do, see :manual:`Introduction to MongoDB </introduction>`\n\n     .. include:: /includes/beginner_note.rst\n\n     \n","static_assets":[]},"Open Windows Explorer/File Explorer.":{},"includes/fact-install-windows":{"_id":"guides/andrew/master/includes/fact-install-windows","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"list","position":{"start":{"line":0}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Open Windows Explorer/File Explorer."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Change the directory path to where you downloaded the MongoDB\n"},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":".msi"}]},{"type":"text","position":{"start":{"line":2}},"value":" file. By default, this is "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"%HOMEPATH%\\Downloads"}]},{"type":"text","position":{"start":{"line":2}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Double-click the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":".msi"}]},{"type":"text","position":{"start":{"line":5}},"value":" file."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"The Windows Installer guides you through the installation process."}]},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"If you choose the "},{"type":"role","position":{"start":{"line":9}},"name":"guilabel","label":{"type":"text","value":"Custom","position":{"start":{"line":10}}},"children":[]},{"type":"text","position":{"start":{"line":9}},"value":" installation option, you may\nspecify an installation directory."}]},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"MongoDB does not have any other system dependencies. You can install and run MongoDB from any folder you choose."}]},{"type":"directive","position":{"start":{"line":14}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"This tutorial assumes that you installed MongoDB\nin "},{"type":"literal","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"C:\\Program Files\\MongoDB\\Server\\4.0\\"}]},{"type":"text","position":{"start":{"line":16}},"value":"."}]}]}]}]}],"position":{"start":{"line":0}}},"source":"1. Open Windows Explorer/File Explorer.\n\n2. Change the directory path to where you downloaded the MongoDB \n   ``.msi`` file. By default, this is ``%HOMEPATH%\\Downloads``.  \n\n3. Double-click the ``.msi`` file. \n\n4. The Windows Installer guides you through the installation process.\n\n   If you choose the :guilabel:`Custom` installation option, you may \n   specify an installation directory.\n\n   MongoDB does not have any other system dependencies. You can install and run MongoDB from any folder you choose.\n\n   .. note::\n\n      This tutorial assumes that you installed MongoDB\n      in ``C:\\Program Files\\MongoDB\\Server\\4.0\\``.\n\n\n","static_assets":[]},"includes/release/untar-release-osx-x86_64":{"_id":"guides/andrew/master/includes/release/untar-release-osx-x86_64","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"release_specification","position":{"start":{"line":0}},"children":[{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":0}},"value":"tar -zxvf mongodb-macos-x86_64-4.0.tgz\n"}]},"source":"ref: untar-release-osx-x86_64\nsource:\n  file: release-base.yaml\n  ref: _untar-release\nreplacement:\n  platform: 'macos'\n  builder: 'x86_64'\n---\nref: untar-release-ent-osx-x86_64\nsource:\n  file: release-base.yaml\n  ref: _untar-release-ent\nreplacement:\n  platform: 'macos'\n  builder: 'x86_64'\n---\nref: install-windows-default\nsource:\n  file: release-base.yaml\n  ref: _install-windows\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n  addlocal: 'all'\n---\nref: install-windows-service\nsource:\n  file: release-base.yaml\n  ref: _install-windows-service\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n---\nref: install-windows-nocompass\nsource:\n  file: release-base.yaml\n  ref: _install-windows-nocompass\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n  addlocal: 'all'\n---\nref: install-windows-addlocal\nsource:\n  file: release-base.yaml\n  ref: _install-windows-specify-local\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n  addlocal: 'MonitoringTools,ImportExportTools,MiscellaneousTools'\n---\nref: install-windows-addlocation\nsource:\n  file: release-base.yaml\n  ref: _install-windows-custom-location\nreplacement:\n  location: 'C:\\MongoDB\\Server\\4.0\\'\n---\nref: install-windows-add-location-no-compass\nsource:\n   file: release-base.yaml\n   ref: _install-windows-custom-location-nocompass\nreplacement:\n  location: 'C:\\MongoDB\\Server\\4.0\\'   \n---\nref: install-ent-windows-default\nsource:\n  file: release-base.yaml\n  ref: _install-windows-ent\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n  addlocal: 'all'\n---\nref: install-ent-windows-service\nsource:\n  file: release-base.yaml\n  ref: _install-windows-ent-service\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n---\nref: install-ent-windows-addlocal\nsource:\n  file: release-base.yaml\n  ref: _install-windows-ent-specify-local\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n  addlocal: 'MonitoringTools,ImportExportTools,MiscellaneousTools'\n---\nref: install-ent-windows-addlocation\nsource:\n  file: release-base.yaml\n  ref: _install-windows-ent-custom-location\nreplacement:\n  location: 'C:\\MongoDB\\Server\\4.0\\'\n---\nref: install-ent-windows-add-location-no-compass\nsource:\n   file: release-base.yaml\n   ref: _install-windows-ent-custom-location-nocompass\nreplacement:\n  location: 'C:\\MongoDB\\Server\\4.0\\'\n---\nref: install-ent-windows-nocompass\nsource:\n  file: release-base.yaml\n  ref: _install-windows-ent-nocompass\nreplacement:\n  location: 'C:\\Program Files\\MongoDB\\Server\\4.0\\'\n...\n","static_assets":[]},"bin/":{},"~/.bashrc":{},"export PATH=<mongodb-install-directory>/bin:$PATH\n":{},"includes/steps/install-mongodb-on-macOS":{"_id":"guides/andrew/master/includes/steps/install-mongodb-on-macOS","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the binary files for the desired release of MongoDB."}],"id":"download-the-binary-files-for-the-desired-release-of-mongodb"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the binaries from the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#production","children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB Download Center"}]},{"type":"target","position":{"start":{"line":0}},"ids":["mongodb-download-center"],"refuri":"https://www.mongodb.com/download-center#production","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Extract the files from the downloaded archive."}],"id":"extract-the-files-from-the-downloaded-archive"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"For example, from a system shell, you can extract through the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"tar"}]},{"type":"text","position":{"start":{"line":0}},"value":" command:"}]},{"type":"directive","position":{"start":{"line":13}},"name":"include","argument":[{"type":"text","position":{"start":{"line":13}},"value":"/includes/release/untar-release-osx-x86_64.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":13}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the extracted archive to the target directory."}],"id":"copy-the-extracted-archive-to-the-target-directory"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the extracted folder to the location from which MongoDB will run."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Ensure the location of the binaries is in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":" variable."}],"id":"ensure-the-location-of-the-binaries-is-in-the-path-variable"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The MongoDB binaries are in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"bin/"}]},{"type":"text","position":{"start":{"line":0}},"value":" directory of the archive. To\nensure that the binaries are in your "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":", you can modify your\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"For example, you can add the following line to your shell's\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"rc"}]},{"type":"text","position":{"start":{"line":0}},"value":" file (e.g. "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"~/.bashrc"}]},{"type":"text","position":{"start":{"line":0}},"value":"):"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":0}},"value":"export PATH=<mongodb-install-directory>/bin:$PATH\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Replace "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"<mongodb-install-directory>"}]},{"type":"text","position":{"start":{"line":0}},"value":" with the path to the extracted\nMongoDB archive."}]}]}]}]},"source":"stepnum: 1\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: download\n---\nstepnum: 2\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: extract\n# The content of the following include is autogenerated:\naction:\n  pre: |\n    .. include:: /includes/release/untar-release-osx-x86_64.rst\n---\nstepnum: 3\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: copy-archive\n---\nstepnum: 4\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: ensure-binaries-in-path\n...\n","static_assets":[]},"includes/steps/install-mongodb-on-linux-64":{"_id":"guides/andrew/master/includes/steps/install-mongodb-on-linux-64","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the binary files for the desired release of MongoDB."}],"id":"download-the-binary-files-for-the-desired-release-of-mongodb"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the binaries from the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#production","children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB Download Center"}]},{"type":"target","position":{"start":{"line":0}},"ids":["mongodb-download-center"],"refuri":"https://www.mongodb.com/download-center#production","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Extract the files from the downloaded archive."}],"id":"extract-the-files-from-the-downloaded-archive"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Extract the archive by double-clicking on the tar file or using\nthe "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"tar"}]},{"type":"text","position":{"start":{"line":0}},"value":" command from the command line, as in the following:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"tar -xvzf <tgz file>"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the extracted archive to the target directory."}],"id":"copy-the-extracted-archive-to-the-target-directory"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the extracted folder to the location from which MongoDB will run."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Ensure the location of the binaries is in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":" variable."}],"id":"ensure-the-location-of-the-binaries-is-in-the-path-variable"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The MongoDB binaries are in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"bin/"}]},{"type":"text","position":{"start":{"line":0}},"value":" directory of the archive. To\nensure that the binaries are in your "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":", you can modify your\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"For example, you can add the following line to your shell's\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"rc"}]},{"type":"text","position":{"start":{"line":0}},"value":" file (e.g. "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"~/.bashrc"}]},{"type":"text","position":{"start":{"line":0}},"value":"):"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":0}},"value":"export PATH=<mongodb-install-directory>/bin:$PATH\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Replace "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"<mongodb-install-directory>"}]},{"type":"text","position":{"start":{"line":0}},"value":" with the path to the extracted\nMongoDB archive."}]}]}]}]},"source":"stepnum: 1\nlevel: 4\ntitle: Download the binary files for the desired release of MongoDB.\nref: download-linux\ncontent: |\n  Download the binaries from the `MongoDB Download Center\n  <https://www.mongodb.com/download-center#production>`_.\n---\nstepnum: 2\nlevel: 4\nref: extract\ntitle: Extract the files from the downloaded archive.\ncontent: |\n  Extract the archive by double-clicking on the tar file or using\n  the ``tar`` command from the command line, as in the following:\n\n  .. code-block:: sh\n\n     tar -xvzf <tgz file>\n---\nstepnum: 3\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: copy-archive\n---\nstepnum: 4\nlevel: 4\nsource:\n  file: steps-install-mongodb-on-linux.yaml\n  ref: ensure-binaries-in-path\n...","static_assets":[]},"includes/install-server":{"_id":"guides/andrew/master/includes/install-server","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"windows"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the binaries from the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#production","children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB Download Center"}]},{"type":"target","position":{"start":{"line":0}},"ids":["mongodb-download-center"],"refuri":"https://www.mongodb.com/download-center#production","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/fact-install-windows.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"macos"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"admonition","argument":[{"type":"text","position":{"start":{"line":0}},"value":"Platform Support"}],"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"MongoDB only supports macOS versions 10.11 and later on Intel x86-64."}]}]},{"type":"directive","position":{"start":{"line":4}},"name":"include","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/includes/steps/install-mongodb-on-macOS.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":4}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":20}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":20}},"value":"linux"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"These instructions are for installing MongoDB directly from\nan archive file. If you would rather use your linux\ndistribution's package manager, refer to the\n"},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/installation","children":[{"type":"text","position":{"start":{"line":0}},"value":"installation instructions"}]},{"type":"text","position":{"start":{"line":0}},"value":" for your\ndistribution in the MongoDB Manual."}]}]},{"type":"directive","position":{"start":{"line":7}},"name":"include","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/includes/steps/install-mongodb-on-linux-64.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":7}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-platforms::\n\n   tabs:\n     - id: windows\n       content: |\n\n\n         Download the binaries from the `MongoDB Download Center\n         <https://www.mongodb.com/download-center#production>`_.\n\n         .. include:: /includes/fact-install-windows.rst\n\n     - id: macos\n       content: |\n\n         .. admonition:: Platform Support\n\n            MongoDB only supports macOS versions 10.11 and later on Intel x86-64.\n       \n         .. include:: /includes/steps/install-mongodb-on-macOS.rst\n\n     - id: linux\n       content: |\n         .. note::\n            These instructions are for installing MongoDB directly from\n            an archive file. If you would rather use your linux\n            distribution's package manager, refer to the\n            :manual:`installation instructions </installation>` for your\n            distribution in the MongoDB Manual.\n\n         .. include:: /includes/steps/install-mongodb-on-linux-64.rst\n","static_assets":[]},"includes/steps/run-mongodb-on-windows":{"_id":"guides/andrew/master/includes/steps/run-mongodb-on-windows","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Set up the MongoDB environment."}],"id":"set-up-the-mongodb-environment"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"MongoDB requires a "},{"type":"role","position":{"start":{"line":6}},"name":"term","label":{"type":"text","value":"data directory","position":{"start":{"line":7}}},"target":"dbpath","children":[]},{"type":"text","position":{"start":{"line":6}},"value":" to store all\ndata. MongoDB's default data directory path is the absolute path\n"},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"\\data\\db"}]},{"type":"text","position":{"start":{"line":6}},"value":" on the drive from which you start MongoDB. Create\nthis folder by running the following command in a\n"},{"type":"role","position":{"start":{"line":6}},"name":"guilabel","label":{"type":"text","value":"Command Prompt","position":{"start":{"line":7}}},"children":[]},{"type":"text","position":{"start":{"line":6}},"value":":"}]},{"type":"code","lang":"powershell","copyable":true,"position":{"start":{"line":6}},"value":"md \\data\\db\n"},{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"You can specify an alternate path for data files using the\n"},{"type":"role","position":{"start":{"line":16}},"name":"option","label":{"type":"text","value":"--dbpath","position":{"start":{"line":17}}},"target":"mongod.--dbpath","children":[]},{"type":"text","position":{"start":{"line":16}},"value":" option to\n"},{"type":"role","position":{"start":{"line":16}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":16}},"value":", for example:"}]},{"type":"code","lang":"powershell","copyable":true,"position":{"start":{"line":16}},"value":"\"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath d:\\test\\mongodb\\data\n"},{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"If your path includes spaces, enclose the entire path in double\nquotes, for example:"}]},{"type":"code","lang":"powershell","copyable":true,"position":{"start":{"line":24}},"value":"\"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath \"d:\\test\\mongo db data\"\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You may also specify the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"dbpath"}]},{"type":"text","position":{"start":{"line":0}},"value":" in a "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/reference/configuration-options","children":[{"type":"text","position":{"start":{"line":0}},"value":"configuration file"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Start MongoDB."}],"id":"start-mongodb"},{"type":"paragraph","position":{"start":{"line":39}},"children":[{"type":"text","position":{"start":{"line":39}},"value":"To start MongoDB, run "},{"type":"role","position":{"start":{"line":39}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":39}},"value":". For example, from the\n"},{"type":"role","position":{"start":{"line":39}},"name":"guilabel","label":{"type":"text","value":"Command Prompt","position":{"start":{"line":40}}},"children":[]},{"type":"text","position":{"start":{"line":39}},"value":":"}]},{"type":"code","lang":"powershell","copyable":true,"position":{"start":{"line":39}},"value":"\"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\"\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"This starts the main MongoDB database process. The "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"waiting for\nconnections"}]},{"type":"text","position":{"start":{"line":0}},"value":" message in the console output indicates that the\n"},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process is running successfully."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"Depending on the security level of your system, Windows may pop up a\n"},{"type":"role","position":{"start":{"line":4}},"name":"guilabel","label":{"type":"text","value":"Security Alert","position":{"start":{"line":5}}},"children":[]},{"type":"text","position":{"start":{"line":4}},"value":" dialog box about blocking \"some features\" of\n"},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe"}]},{"type":"text","position":{"start":{"line":4}},"value":" from communicating\non networks. All users should select "},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"Private Networks, such as my home or\nwork network"}]},{"type":"text","position":{"start":{"line":4}},"value":" and click "},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"Allow access"}]},{"type":"text","position":{"start":{"line":4}},"value":". For additional information on\nsecurity and MongoDB, please see the "},{"type":"reference","position":{"start":{"line":4}},"refuri":"https://docs.mongodb.com/manual/security","children":[{"type":"text","position":{"start":{"line":4}},"value":"Security Documentation"}]},{"type":"text","position":{"start":{"line":4}},"value":"."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Verify that MongoDB has started successfully"}],"id":"verify-that-mongodb-has-started-successfully"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Verify that MongoDB has started successfully by\nchecking the process output for the following line:"}]},{"type":"code","lang":"none","copyable":true,"position":{"start":{"line":71}},"value":"[initandlisten] waiting for connections on port 27017\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The output should be visible in the terminal or shell window."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"You may see non-critical warnings in the process\noutput. As long as you see the log line shown above, you can safely\nignore these warnings during your initial evaluation of MongoDB."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to MongoDB."}],"id":"connect-to-mongodb"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To connect to MongoDB through the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","label":{"type":"text","value":"~bin.mongo.exe","position":{"start":{"line":1}}},"target":"mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell,\nopen another "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Command Prompt","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"code","lang":"powershell","copyable":true,"position":{"start":{"line":73}},"value":"\"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongo.exe\"\n"}]}]}]},"source":"title: Set up the MongoDB environment.\nstepnum: 1\nlevel: 4\nref: create-data-dir\naction:\n  - pre: |\n      MongoDB requires a :term:`data directory <dbpath>` to store all\n      data. MongoDB's default data directory path is the absolute path\n      ``\\data\\db`` on the drive from which you start MongoDB. Create\n      this folder by running the following command in a\n      :guilabel:`Command Prompt`:\n    copyable: true\n    language: powershell\n    code: |\n      md \\data\\db\n  - pre: |\n      You can specify an alternate path for data files using the\n      :option:`--dbpath <mongod.--dbpath>` option to\n      :binary:`~bin.mongod.exe`, for example:\n    copyable: true\n    language: powershell\n    code: |\n      \"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath d:\\test\\mongodb\\data\n  - pre: |\n      If your path includes spaces, enclose the entire path in double\n      quotes, for example:\n    copyable: true\n    language: powershell\n    code: |\n      \"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath \"d:\\test\\mongo db data\"\npost: |\n  You may also specify the ``dbpath`` in a :manual:`configuration file\n  </reference/configuration-options>`.\n---\ntitle: Start MongoDB.\nstepnum: 2\nlevel: 4\nref: start\naction:\n  pre: |\n    To start MongoDB, run :binary:`~bin.mongod.exe`. For example, from the\n    :guilabel:`Command Prompt`:\n  copyable: true\n  language: powershell\n  code: |\n    \"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\"\npost: |\n  This starts the main MongoDB database process. The ``waiting for\n  connections`` message in the console output indicates that the\n  :binary:`~bin.mongod.exe` process is running successfully.\n\n  Depending on the security level of your system, Windows may pop up a\n  :guilabel:`Security Alert` dialog box about blocking \"some features\" of\n  ``C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe`` from communicating\n  on networks. All users should select ``Private Networks, such as my home or\n  work network`` and click ``Allow access``. For additional information on\n  security and MongoDB, please see the :manual:`Security Documentation </security>`.\n---\ntitle: Verify that MongoDB has started successfully\nstepnum: 3\nlevel: 4\nsource:\n  file: steps-run-mongodb-on-linux.yaml\n  ref: verify\n---\ntitle: Connect to MongoDB.\nstepnum: 4\nlevel: 4\nref: connect\npre: |\n  To connect to MongoDB through the :binary:`~bin.mongo.exe <mongo>` shell,\n  open another :guilabel:`Command Prompt`.\naction:\n    copyable: true\n    language: powershell\n    code: |\n      \"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongo.exe\"\n# End-for-getting-started-guide\n...","static_assets":[]},"data/db":{},"mkdir -p /data/db\n":{},"<path to binary>/mongod\n":{},"includes/steps/run-mongodb-on-linux":{"_id":"guides/andrew/master/includes/steps/run-mongodb-on-linux","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create the data directory"}],"id":"create-the-data-directory"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Before you start MongoDB for the first time, create the directory to\nwhich the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process will write data. By default, the\n"},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process uses the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"/data/db"}]},{"type":"text","position":{"start":{"line":0}},"value":" directory. If you create\na directory other than this one, you must specify that directory in the\n"},{"type":"role","position":{"start":{"line":0}},"name":"setting","target":"dbpath","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" option when starting the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process\nlater in this procedure."}]},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"The following example command creates the default "},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"/data/db"}]},{"type":"text","position":{"start":{"line":12}},"value":" directory:"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":12}},"value":"mkdir -p /data/db\n"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Set permissions for the data directory"}],"id":"set-permissions-for-the-data-directory"},{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"Before running "},{"type":"role","position":{"start":{"line":23}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":23}},"value":" for the first time, ensure that the\nuser account running "},{"type":"role","position":{"start":{"line":23}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":23}},"value":" has read and write permissions\nfor the directory."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Run MongoDB"}],"id":"run-mongodb"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To run MongoDB, run the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process at the system prompt.\nIf necessary, specify the path of the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" or the data\ndirectory. See the following examples."}]},{"type":"section","position":{"start":{"line":38}},"children":[{"type":"heading","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"Run without specifying paths"}],"id":"run-without-specifying-paths"},{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"If your system "},{"type":"literal","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":38}},"value":" variable includes the location of the\n"},{"type":"role","position":{"start":{"line":38}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":38}},"value":" binary and if you use the default data directory\n(i.e., "},{"type":"literal","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"/data/db"}]},{"type":"text","position":{"start":{"line":38}},"value":"), simply enter "},{"type":"literal","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"mongod"}]},{"type":"text","position":{"start":{"line":38}},"value":" at the system prompt:"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":38}},"value":"mongod\n"}]},{"type":"section","position":{"start":{"line":46}},"children":[{"type":"heading","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"Specify the path of the "},{"type":"role","position":{"start":{"line":46}},"name":"binary","target":"~bin.mongod","children":[]}],"id":"specify-the-path-of-the"},{"type":"paragraph","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"If your "},{"type":"literal","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"PATH"}]},{"type":"text","position":{"start":{"line":46}},"value":" does not include the location of the\n"},{"type":"role","position":{"start":{"line":46}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":46}},"value":" binary, enter the full path to the "},{"type":"role","position":{"start":{"line":46}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":46}},"value":"\nbinary at the system prompt:"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":46}},"value":"<path to binary>/mongod\n"}]},{"type":"section","position":{"start":{"line":54}},"children":[{"type":"heading","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"Specify the path of the data directory"}],"id":"specify-the-path-of-the-data-directory"},{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"If you do not use the default data directory (i.e., "},{"type":"literal","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"/data/db"}]},{"type":"text","position":{"start":{"line":54}},"value":"),\nspecify the path to the data directory using the\n"},{"type":"role","position":{"start":{"line":54}},"name":"option","label":{"type":"text","value":"--dbpath","position":{"start":{"line":55}}},"target":"mongod.--dbpath","children":[]},{"type":"text","position":{"start":{"line":54}},"value":" option:"}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":54}},"value":"mongod --dbpath <path to data directory>\n"}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Verify that MongoDB has started successfully"}],"id":"verify-that-mongodb-has-started-successfully"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Verify that MongoDB has started successfully by\nchecking the process output for the following line:"}]},{"type":"code","lang":"none","copyable":true,"position":{"start":{"line":71}},"value":"[initandlisten] waiting for connections on port 27017\n"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The output should be visible in the terminal or shell window."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"You may see non-critical warnings in the process\noutput. As long as you see the log line shown above, you can safely\nignore these warnings during your initial evaluation of MongoDB."}]}]}]}]},"source":"title: Create the data directory\nstepnum: 1\nlevel: 4\nref: create-dbpath\npre: |\n  Before you start MongoDB for the first time, create the directory to\n  which the :binary:`~bin.mongod` process will write data. By default, the\n  :binary:`~bin.mongod` process uses the ``/data/db`` directory. If you create\n  a directory other than this one, you must specify that directory in the\n  :setting:`dbpath` option when starting the :binary:`~bin.mongod` process\n  later in this procedure.\naction:\n  pre: |\n    The following example command creates the default ``/data/db`` directory:\n  language: sh\n  code: |\n    mkdir -p /data/db\n---\ntitle: Set permissions for the data directory\nstepnum: 2\nlevel: 4\nref: set-dbpath-permission\naction:\n  pre: |\n    Before running :binary:`~bin.mongod` for the first time, ensure that the\n    user account running :binary:`~bin.mongod` has read and write permissions\n    for the directory.\n---\ntitle: Run MongoDB\nstepnum: 3\nlevel: 4\nref: start-mdb\npre: |\n  To run MongoDB, run the :binary:`~bin.mongod` process at the system prompt.\n  If necessary, specify the path of the :binary:`~bin.mongod` or the data\n  directory. See the following examples.\naction:\n  - heading: Run without specifying paths\n    pre: |\n      If your system ``PATH`` variable includes the location of the\n      :binary:`~bin.mongod` binary and if you use the default data directory\n      (i.e., ``/data/db``), simply enter ``mongod`` at the system prompt:\n    language: sh\n    code: |\n      mongod\n  - heading: Specify the path of the :binary:`~bin.mongod`\n    pre: |\n      If your ``PATH`` does not include the location of the\n      :binary:`~bin.mongod` binary, enter the full path to the :binary:`~bin.mongod`\n      binary at the system prompt:\n    language: sh\n    code: |\n      <path to binary>/mongod\n  - heading: Specify the path of the data directory\n    pre: |\n      If you do not use the default data directory (i.e., ``/data/db``),\n      specify the path to the data directory using the \n      :option:`--dbpath <mongod.--dbpath>` option:\n    language: sh\n    code: |\n      mongod --dbpath <path to data directory>\n# End-for-getting-started-guide\n---\ntitle: Verify that MongoDB has started successfully\nstepnum: 4\nlevel: 4\nref: verify\npre: |\n  Verify that MongoDB has started successfully by\n  checking the process output for the following line:\naction:\n  language: none\n  code: |\n    [initandlisten] waiting for connections on port 27017\npost: |\n\n  The output should be visible in the terminal or shell window.\n\n  You may see non-critical warnings in the process\n  output. As long as you see the log line shown above, you can safely\n  ignore these warnings during your initial evaluation of MongoDB.\n...","static_assets":[]},"includes/start-server":{"_id":"guides/andrew/master/includes/start-server","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"windows"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"warning","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Do not make "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" visible on public\nnetworks without running in \"Secure Mode\" with the\n"},{"type":"role","position":{"start":{"line":0}},"name":"setting","target":"auth","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" setting. MongoDB is designed to be run in\ntrusted environments, and the database does not enable\n\"Secure Mode\" by default."}]}]},{"type":"directive","position":{"start":{"line":7}},"name":"include","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/includes/steps/run-mongodb-on-windows.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":7}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":13}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":13}},"value":"macos"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/steps/run-mongodb-on-linux.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":16}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":16}},"value":"linux"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"important","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you are using SELinux on a Red Hat Linux-based system,\n(Red Hat Enterprise Linux or CentOS Linux), you must\nconfigure SELinux to allow MongoDB to start. Refer to\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"install-rhel-configure-selinux","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" for instructions."}]}]},{"type":"directive","position":{"start":{"line":6}},"name":"include","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/includes/steps/run-mongodb-on-linux.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":6}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-platforms::\n\n   tabs:\n     - id: windows\n       content: |\n         .. warning::\n            Do not make :binary:`~bin.mongod.exe` visible on public\n            networks without running in \"Secure Mode\" with the\n            :setting:`auth` setting. MongoDB is designed to be run in\n            trusted environments, and the database does not enable\n            \"Secure Mode\" by default.\n\n         .. include:: /includes/steps/run-mongodb-on-windows.rst\n\n     - id: macos\n       content: |\n         .. include:: /includes/steps/run-mongodb-on-linux.rst\n     - id: linux\n       content: |\n         .. important::\n            If you are using SELinux on a Red Hat Linux-based system,\n            (Red Hat Enterprise Linux or CentOS Linux), you must\n            configure SELinux to allow MongoDB to start. Refer to\n            :ref:`install-rhel-configure-selinux` for instructions.\n\n         .. include:: /includes/steps/run-mongodb-on-linux.rst\n\n","static_assets":[]},"server/install":{"_id":"guides/andrew/master/server/install","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"install-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Install MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"This guide describes how to install MongoDB locally. If you would\nlike to use MongoDB in the Cloud using "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"Atlas"}]},{"type":"text","position":{"start":{"line":18}},"value":", our managed\ndatabase product, see "},{"type":"role","position":{"start":{"line":18}},"name":"doc","target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":18}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"time","argument":[{"type":"text","position":{"start":{"line":22}},"value":"10"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"prerequisites","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"MongoDB supports a variety of 64-bit platforms. Refer to the\n"},{"type":"role","position":{"start":{"line":26}},"name":"ref","label":{"type":"text","value":"Supported Platforms","position":{"start":{"line":23}}},"target":"mongodb-supported-platforms","children":[]},{"type":"text","position":{"start":{"line":26}},"value":" table to\nverify that MongoDB is supported on the platform to which you wish\nto install it."}]}]},{"type":"directive","position":{"start":{"line":32}},"name":"procedure","argument":[],"children":[{"type":"section","position":{"start":{"line":35}},"children":[{"type":"heading","position":{"start":{"line":35}},"id":"id1","children":[{"type":"text","position":{"start":{"line":35}},"value":"Install MongoDB"}]},{"type":"directive","position":{"start":{"line":37}},"name":"include","argument":[{"type":"text","position":{"start":{"line":37}},"value":"/includes/install-server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":37}},"children":[]}]}]},{"type":"section","position":{"start":{"line":40}},"children":[{"type":"heading","position":{"start":{"line":40}},"id":"run-mongodb","children":[{"type":"text","position":{"start":{"line":40}},"value":"Run MongoDB"}]},{"type":"directive","position":{"start":{"line":42}},"name":"include","argument":[{"type":"text","position":{"start":{"line":42}},"value":"/includes/start-server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":42}},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":44}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"If you have successfully completed this guide, you have installed\nMongoDB and are ready to connect to your "},{"type":"role","position":{"start":{"line":46}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":46}},"value":"\ninstance and start inserting data."}]}]},{"type":"directive","position":{"start":{"line":50}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":52}},"children":[{"type":"text","position":{"start":{"line":52}},"value":"The next guide walks you through setting up authentication on your new MongoDB instance."}]},{"type":"list","position":{"start":{"line":54}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":54}},"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"role","position":{"start":{"line":54}},"name":"doc","target":"/server/auth","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":56}},"name":"seealso","argument":[],"children":[{"type":"list","position":{"start":{"line":58}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":58}},"children":[{"type":"paragraph","position":{"start":{"line":58}},"children":[{"type":"role","position":{"start":{"line":58}},"name":"doc","target":"/server/introduction","children":[]},{"type":"text","position":{"start":{"line":58}},"value":" for an introduction to MongoDB."}]}]},{"type":"listItem","position":{"start":{"line":58}},"children":[{"type":"paragraph","position":{"start":{"line":59}},"children":[{"type":"reference","position":{"start":{"line":59}},"refuri":"https://docs.mongodb.com/manual/installation","children":[{"type":"text","position":{"start":{"line":59}},"value":"Installation"}]},{"type":"text","position":{"start":{"line":59}},"value":" for installation instructions\nfor MongoDB Enterprise Edition, details on installing older\nversions of MongoDB."}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n\n   title: Install MongoDB\n   type: Getting Started\n   level: beginner\n   author: MongoDB Documentation Team\n   product_version: 4.0\n   result_description:\n\n     This guide describes how to install MongoDB locally. If you would\n     like to use MongoDB in the Cloud using ``Atlas``, our managed\n     database product, see :doc:`/cloud/atlas`.\n   \n   time: 10\n   prerequisites:\n     MongoDB supports a variety of 64-bit platforms. Refer to the\n     :ref:`Supported Platforms <mongodb-supported-platforms>` table to\n     verify that MongoDB is supported on the platform to which you wish\n     to install it.\n   procedure:\n     Install MongoDB\n     ~~~~~~~~~~~~~~~\n\n     .. include:: /includes/install-server.rst\n\n     Run MongoDB\n     ~~~~~~~~~~~\n\n     .. include:: /includes/start-server.rst\n\n   summary:\n     If you have successfully completed this guide, you have installed\n     MongoDB and are ready to connect to your :binary:`~bin.mongod`\n     instance and start inserting data.\n   whats_next:\n     The next guide walks you through setting up authentication on your new MongoDB instance.\n\n     * :doc:`/server/auth`\n   seealso:\n     - :doc:`/server/introduction` for an introduction to MongoDB.\n     - :manual:`Installation </installation>` for installation instructions\n       for MongoDB Enterprise Edition, details on installing older\n       versions of MongoDB.\n","static_assets":[]},"tasklist /FI \"IMAGENAME eq mongod.exe\"":{},"89780 ttys026    0:53.48 ./mongod":{},"includes/check_for_auth":{"_id":"guides/andrew/master/includes/check_for_auth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":1}},"children":[{"type":"text","position":{"start":{"line":1}},"value":"Ensure that your MongoDB instance is running."}]},{"type":"directive","position":{"start":{"line":3}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":5}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":5}},"value":"windows"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure that your MongoDB instance is running on Windows,\nrun the following command from the Windows command prompt:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"bat","copyable":true,"value":"tasklist /FI \"IMAGENAME eq mongod.exe\""},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","label":{"type":"text","value":"mongod.exe","position":{"start":{"line":65}}},"target":"bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will\nsee something like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"bat","copyable":true,"value":"Image Name                     PID Session Name        Session#    Mem Usage\n========================= ======== ================ =========== ============\nmongod.exe                    8716 Console                    1      9,508 K"}]},{"type":"directive","position":{"start":{"line":23}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":23}},"value":"linux"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure your MongoDB instance is running on linux, run the\nfollowing command from your terminal:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"ps -e| grep 'mongod'"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will see\nsomething like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"sh","copyable":true,"value":"89780 ttys026    0:53.48 ./mongod"}]},{"type":"directive","position":{"start":{"line":40}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":40}},"value":"macos"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure your MongoDB instance is running on mac, run the\nfollowing command from your terminal:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"ps -e | grep 'mongod'"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will see\nsomething like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"sh","copyable":true,"value":"89780 ttys026    0:53.48 ./mongod"}]}]}],"position":{"start":{"line":0}}},"source":"\nEnsure that your MongoDB instance is running.\n\n.. tabs-platforms::\n\n   tabs:\n     - id: windows\n       content: |\n         To make sure that your MongoDB instance is running on Windows,\n         run the following command from the Windows command prompt:\n         \n         .. code-block:: bat\n         \n            tasklist /FI \"IMAGENAME eq mongod.exe\"\n         \n         If a :binary:`mongod.exe <bin.mongod.exe>` instance is running, you will\n         see something like:\n         \n         .. code-block:: bat\n         \n            Image Name                     PID Session Name        Session#    Mem Usage\n            ========================= ======== ================ =========== ============\n            mongod.exe                    8716 Console                    1      9,508 K\n \n     - id: linux\n       content: |\n       \n         To make sure your MongoDB instance is running on linux, run the\n         following command from your terminal:\n           \n         .. code-block:: sh\n \n            ps -e| grep 'mongod'\n \n         If a :binary:`~bin.mongod` instance is running, you will see\n         something like:\n \n         .. code-block:: sh\n \n            89780 ttys026    0:53.48 ./mongod\n \n     - id: macos\n       content: |\n       \n         To make sure your MongoDB instance is running on mac, run the\n         following command from your terminal:\n           \n         .. code-block:: sh\n \n            ps -e | grep 'mongod'\n \n         If a :binary:`~bin.mongod` instance is running, you will see\n         something like:\n \n         .. code-block:: sh\n \n            89780 ttys026    0:53.48 ./mongod\n ","static_assets":[]},"includes/download-shell-tabs":{"_id":"guides/andrew/master/includes/download-shell-tabs","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":3}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":3}},"value":"windows"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#community","children":[{"type":"text","position":{"start":{"line":0}},"value":"latest stable version"}]},{"type":"text","position":{"start":{"line":0}},"value":" for your environment."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"After downloading, click on the downloaded "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":".msi"}]},{"type":"text","position":{"start":{"line":3}},"value":" file. The\nWindows Installer will guide you through the installation."}]}]},{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"linux"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#community","children":[{"type":"text","position":{"start":{"line":0}},"value":"latest stable version"}]},{"type":"text","position":{"start":{"line":0}},"value":" for your environment."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Extract the tar file and locate the "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":3}},"value":" executable under\nthe "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"bin"}]},{"type":"text","position":{"start":{"line":3}},"value":" directory of your install root."}]},{"type":"code","position":{"start":{"line":6}},"lang":"sh","copyable":true,"value":"tar -xvzf <tgz file>"}]},{"type":"directive","position":{"start":{"line":25}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":25}},"value":"macos"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://www.mongodb.com/download-center#community","children":[{"type":"text","position":{"start":{"line":0}},"value":"latest stable version"}]},{"type":"text","position":{"start":{"line":0}},"value":" for your environment."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Double click the "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"tgz"}]},{"type":"text","position":{"start":{"line":3}},"value":" file to untar the file."}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-platforms::\n   \n   tabs:\n   \n     - id: windows\n       content: |\n         \n         Download the `latest stable version\n         <https://www.mongodb.com/download-center#community>`__ for your environment.\n         \n         After downloading, click on the downloaded ``.msi`` file. The\n         Windows Installer will guide you through the installation.\n     \n     - id: linux\n       content: |\n         \n         Download the `latest stable version\n         <https://www.mongodb.com/download-center#community>`__ for your environment.\n         \n         Extract the tar file and locate the ``mongo`` executable under\n         the ``bin`` directory of your install root.\n         \n         .. code-block:: sh\n           \n            tar -xvzf <tgz file>\n         \n     - id: macos\n       content: |\n         \n         Download the `latest stable version\n         <https://www.mongodb.com/download-center#community>`__ for your environment.\n         \n         Double click the ``tgz`` file to untar the file.","static_assets":[]},"includes/mongo-shell-platform-connect-np":{"_id":"guides/andrew/master/includes/mongo-shell-platform-connect-np","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Select the operating system platform on which you are running the\nMongoDB client you have selected."}]},{"type":"directive","position":{"start":{"line":3}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"If you are running your "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"mongod"}]},{"type":"text","position":{"start":{"line":5}},"value":" instance with the default "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"host"}]},{"type":"text","position":{"start":{"line":5}},"value":" (localhost)\nand "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"port"}]},{"type":"text","position":{"start":{"line":5}},"value":" (27017), you can leave those parameters out when running\n"},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":5}},"value":" shell."}]}]},{"type":"directive","position":{"start":{"line":9}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"windows"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"mongo.exe --host <HOSTNAME> --port <PORT>"}]},{"type":"directive","position":{"start":{"line":19}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":19}},"value":"linux"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"mongo --host <HOSTNAME> --port <PORT>"}]},{"type":"directive","position":{"start":{"line":26}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":26}},"value":"macos"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"mongo --host <HOSTNAME> --port <PORT>"}]}]}],"position":{"start":{"line":0}}},"source":"Select the operating system platform on which you are running the\nMongoDB client you have selected.\n\n.. note ::\n   \n   If you are running your ``mongod`` instance with the default ``host`` (localhost)\n   and ``port`` (27017), you can leave those parameters out when running\n   ``mongo`` shell.\n\n.. tabs-platforms::\n\n   tabs:\n       \n     - id: windows\n       content: |\n\n         .. code-block:: sh\n\n            mongo.exe --host <HOSTNAME> --port <PORT>\n\n     - id: linux\n       content: |\n\n         .. code-block:: sh\n\n            mongo --host <HOSTNAME> --port <PORT>\n     \n     - id: macos\n       content: |\n       \n         .. code-block:: sh\n\n            mongo --host <HOSTNAME> --port <PORT>\n\n\n\n\n\n\n","static_assets":[]},"includes/run-mongodb-on-windows-auth":{"_id":"guides/andrew/master/includes/run-mongodb-on-windows-auth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To restart MongoDB, run "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" with the\n"},{"type":"role","position":{"start":{"line":0}},"name":"option","label":{"type":"text","value":"--auth","position":{"start":{"line":1}}},"target":"mongod.--auth","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" option."}]},{"type":"code","position":{"start":{"line":3}},"lang":"bat","copyable":true,"value":"\"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath \"d:\\test\\mongo db data\" --auth"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"This starts the main MongoDB database process. The "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"waiting for\nconnections"}]},{"type":"text","position":{"start":{"line":7}},"value":" message in the console output indicates that the\n"},{"type":"role","position":{"start":{"line":7}},"name":"binary","target":"~bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" process is running successfully."}]}],"position":{"start":{"line":0}}},"source":"To restart MongoDB, run :binary:`~bin.mongod.exe` with the\n:option:`--auth <mongod.--auth>` option. \n\n.. code-block:: bat\n\n   \"C:\\Program Files\\MongoDB\\Server\\4.0\\bin\\mongod.exe\" --dbpath \"d:\\test\\mongo db data\" --auth\n\nThis starts the main MongoDB database process. The ``waiting for\nconnections`` message in the console output indicates that the\n:binary:`~bin.mongod.exe` process is running successfully.","static_assets":[]},"includes/run-mongodb-on-linux-auth":{"_id":"guides/andrew/master/includes/run-mongodb-on-linux-auth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To restart MongoDB with access control, run the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nprocess from your terminal with the "},{"type":"role","position":{"start":{"line":0}},"name":"option","label":{"type":"text","value":"--auth","position":{"start":{"line":1}}},"target":"mongod.--auth","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\noption. The "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" process is located in a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"bin"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfolder in the MongoDB installation directory."}]},{"type":"code","position":{"start":{"line":5}},"lang":"sh","copyable":true,"value":"mongod --dbpath <path to data directory> --auth"},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"If you used the default data directory for your MongoDB deployment,\n(i.e., "},{"type":"literal","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"/data/db"}]},{"type":"text","position":{"start":{"line":9}},"value":"), you can leave off the\n"},{"type":"role","position":{"start":{"line":9}},"name":"option","label":{"type":"text","value":"--dbpath","position":{"start":{"line":10}}},"target":"mongod.--dbpath","children":[]},{"type":"text","position":{"start":{"line":9}},"value":" option."}]},{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"If your "},{"type":"role","position":{"start":{"line":13}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":13}},"value":" instance has successfully started, you\nwill see logging output in your terminal that includes\n"},{"type":"literal","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"[initandlisten] waiting for connections"}]},{"type":"text","position":{"start":{"line":13}},"value":"."}]}],"position":{"start":{"line":0}}},"source":"To restart MongoDB with access control, run the :binary:`~bin.mongod`\nprocess from your terminal with the :option:`--auth <mongod.--auth>`\noption. The :binary:`~bin.mongod` process is located in a ``bin``\nfolder in the MongoDB installation directory.\n\n.. code-block:: sh\n\n   mongod --dbpath <path to data directory> --auth\n\nIf you used the default data directory for your MongoDB deployment,\n(i.e., ``/data/db``), you can leave off the \n:option:`--dbpath <mongod.--dbpath>` option.\n\nIf your :binary:`~bin.mongod` instance has successfully started, you\nwill see logging output in your terminal that includes\n``[initandlisten] waiting for connections``.","static_assets":[]},"includes/start-server-auth":{"_id":"guides/andrew/master/includes/start-server-auth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":3}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":3}},"value":"windows"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/run-mongodb-on-windows-auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"linux"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"The following instructions assume that you installed MongoDB\nfrom a "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"tar.gz"}]},{"type":"text","position":{"start":{"line":2}},"value":" archive rather than using a package\nmanager. If you used the package manager for your Linux\ndistribution to install MongoDB, edit your\n"},{"type":"role","position":{"start":{"line":2}},"name":"ref","label":{"type":"text","value":"configuration file","position":{"start":{"line":12}}},"target":"configuration-options","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" to include\nthe "},{"type":"role","position":{"start":{"line":2}},"name":"setting","target":"security.authorization","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" setting before starting\nyour "},{"type":"role","position":{"start":{"line":2}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" service as usual. Refer to the\n"},{"type":"role","position":{"start":{"line":2}},"name":"ref","label":{"type":"text","value":"configuration file","position":{"start":{"line":12}}},"target":"configuration-options","children":[]},{"type":"text","position":{"start":{"line":2}},"value":"\ndocumentation for more information."}]}]},{"type":"directive","position":{"start":{"line":12}},"name":"include","argument":[{"type":"text","position":{"start":{"line":12}},"value":"/includes/run-mongodb-on-linux-auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":12}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":24}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":24}},"value":"macos"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/run-mongodb-on-linux-auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-platforms::\n   \n   tabs:\n     \n     - id: windows\n       content: |\n\n         .. include:: /includes/run-mongodb-on-windows-auth.rst\n\n     - id: linux\n       content: |\n         .. note:: \n  \n            The following instructions assume that you installed MongoDB\n            from a ``tar.gz`` archive rather than using a package\n            manager. If you used the package manager for your Linux\n            distribution to install MongoDB, edit your\n            :ref:`configuration file <configuration-options>` to include\n            the :setting:`security.authorization` setting before starting\n            your :binary:`~bin.mongod` service as usual. Refer to the\n            :ref:`configuration file <configuration-options>`\n            documentation for more information.\n\n         .. include:: /includes/run-mongodb-on-linux-auth.rst\n\n     - id: macos\n       content: |\n         \n         .. include:: /includes/run-mongodb-on-linux-auth.rst","static_assets":[]},"includes/steps/auth":{"_id":"guides/andrew/master/includes/steps/auth","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Locate the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell."}],"id":"locate-the-shell"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell is packaged with the MongoDB Server\nCommunity and Enterprise distributions, and is also available for users\nof Atlas as a client-only download."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"MongoDB binaries are located in a directory that starts with\n"},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"mongodb-"}]},{"type":"text","position":{"start":{"line":4}},"value":". Within a "},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"bin"}]},{"type":"text","position":{"start":{"line":4}},"value":" directory, you should see a file named\n"},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":4}},"value":", which is the shell executable."}]},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"If you do not have "},{"type":"role","position":{"start":{"line":8}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":8}},"value":" shell installed, follow the\ninstall directions for your environment."}]},{"type":"directive","position":{"start":{"line":11}},"name":"include","argument":[{"type":"text","position":{"start":{"line":11}},"value":"/includes/download-shell-tabs.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":11}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance"}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/mongo-shell-platform-connect-np.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"admin"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}],"id":"switch-to-the-admin-database"},{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"use admin"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create a "},{"type":"role","position":{"start":{"line":0}},"name":"authrole","target":"root","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" user with the "},{"type":"role","position":{"start":{"line":0}},"name":"method","target":"db.createUser()","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" method."}],"id":"create-a-user-with-the-method"},{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"db.createUser(\n  {\n    user: \"superuser\",\n    pwd: \"changeMeToAStrongPassword\",\n    roles: [ \"root\" ]\n  }\n)"},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Users with the "},{"type":"role","position":{"start":{"line":10}},"name":"authrole","target":"root","children":[]},{"type":"text","position":{"start":{"line":10}},"value":" role have full privileges on all\nresources. You can therefore use your new "},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"superuser"}]},{"type":"text","position":{"start":{"line":10}},"value":" user to query\nyour database, add indexes, create additional users, administer your deployment, etc."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Verify that you have successfully added your user."}],"id":"verify-that-you-have-successfully-added-your-user"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Run "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"show users"}]},{"type":"text","position":{"start":{"line":0}},"value":" to see if your user was created:"}]},{"type":"code","position":{"start":{"line":2}},"lang":"javascript","copyable":true,"value":"show users"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"You should see output similar to the following:"}]},{"type":"code","position":{"start":{"line":8}},"lang":"javascript","copyable":true,"value":"{\n   \"_id\" : \"admin.superuser\",\n   \"userId\" : UUID(\"7c2aee5c-6af5-4e25-ae0f-4422c6a8a03c\"),\n   \"user\" : \"superuser\",\n   \"db\" : \"admin\",\n   \"roles\" : [\n           {\n             \"role\" : \"root\",\n             \"db\" : \"admin\"\n           }\n   ],\n   \"mechanisms\" : [\n           \"SCRAM-SHA-1\",\n           \"SCRAM-SHA-256\"\n   ]\n }"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Shut down your MongoDB instance."}],"id":"shut-down-your-mongodb-instance"},{"type":"paragraph","position":{"start":{"line":101}},"children":[{"type":"text","position":{"start":{"line":101}},"value":"From the "},{"type":"literal","position":{"start":{"line":101}},"children":[{"type":"text","position":{"start":{"line":101}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":101}},"value":" shell, shut down your "},{"type":"role","position":{"start":{"line":101}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":101}},"value":"\ninstance."}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":101}},"value":"db.shutdownServer()\n"},{"type":"paragraph","position":{"start":{"line":101}},"children":[{"type":"text","position":{"start":{"line":101}},"value":"You should see a message that resembles\n"},{"type":"literal","position":{"start":{"line":101}},"children":[{"type":"text","position":{"start":{"line":101}},"value":"server should be down..."}]},{"type":"text","position":{"start":{"line":101}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":110}},"children":[{"type":"text","position":{"start":{"line":110}},"value":"Type "},{"type":"literal","position":{"start":{"line":110}},"children":[{"type":"text","position":{"start":{"line":110}},"value":"exit"}]},{"type":"text","position":{"start":{"line":110}},"value":" to exit the "},{"type":"literal","position":{"start":{"line":110}},"children":[{"type":"text","position":{"start":{"line":110}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":110}},"value":" shell."}]},{"type":"code","lang":"sh","copyable":true,"position":{"start":{"line":110}},"value":"exit\n"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Restart your MongoDB instance with access control."}],"id":"restart-your-mongodb-instance-with-access-control"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/start-server-auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}]},"source":"title: Locate the :binary:`~bin.mongo` shell.\nref: mongo-shell\nlevel: 4\nstepnum: 1\ncontent: |\n\n  The :binary:`~bin.mongo` shell is packaged with the MongoDB Server\n  Community and Enterprise distributions, and is also available for users\n  of Atlas as a client-only download.\n\n  MongoDB binaries are located in a directory that starts with\n  ``mongodb-``. Within a ``bin`` directory, you should see a file named\n  ``mongo``, which is the shell executable.\n\n  If you do not have :binary:`~bin.mongo` shell installed, follow the\n  install directions for your environment.\n\n  .. include:: /includes/download-shell-tabs.rst\n\n---\n\ntitle: Connect to your MongoDB instance\nref: connect\nlevel: 4\nstepnum: 2\ncontent: |\n\n  .. include:: /includes/mongo-shell-platform-connect-np.rst\n\n---\ntitle: Switch to the ``admin`` database.\nref: administrator\nlevel: 4\nstepnum: 3\ncontent: |\n\n  .. code-block:: sh\n     \n     use admin\n\n---\ntitle: Create a :authrole:`root` user with the :method:`db.createUser()` method.\nref: create_user\nlevel: 4\nstepnum: 4\ncontent: |\n\n  .. code-block:: sh\n     \n     db.createUser(\n       {\n         user: \"superuser\",\n         pwd: \"changeMeToAStrongPassword\",\n         roles: [ \"root\" ]\n       }\n     )\n\n  Users with the :authrole:`root` role have full privileges on all\n  resources. You can therefore use your new ``superuser`` user to query\n  your database, add indexes, create additional users, administer your deployment, etc.\n---\ntitle: Verify that you have successfully added your user. \nref: check_users\nlevel: 4\nstepnum: 5\ncontent: |\n\n  Run ``show users`` to see if your user was created:\n\n  .. code-block:: javascript\n\n     show users\n\n  You should see output similar to the following:\n\n  .. code-block:: javascript\n\n     {\n        \"_id\" : \"admin.superuser\",\n        \"userId\" : UUID(\"7c2aee5c-6af5-4e25-ae0f-4422c6a8a03c\"),\n        \"user\" : \"superuser\",\n        \"db\" : \"admin\",\n        \"roles\" : [\n                {\n                  \"role\" : \"root\",\n                  \"db\" : \"admin\"\n                }\n        ],\n        \"mechanisms\" : [\n                \"SCRAM-SHA-1\",\n                \"SCRAM-SHA-256\"\n        ]\n      }\n\n---\ntitle: Shut down your MongoDB instance.\nref: shutdown_server\nlevel: 4\nstepnum: 6\naction:\n  - pre: |\n      From the ``mongo`` shell, shut down your :binary:`~bin.mongod`\n      instance.\n    language: sh\n    code: |\n      db.shutdownServer()\n    post: |\n      You should see a message that resembles \n      ``server should be down...``.\n  - pre: |\n      Type ``exit`` to exit the ``mongo`` shell.\n    language: sh\n    code: |\n      exit\n---\ntitle: Restart your MongoDB instance with access control.    \nref: restart_with_auth\nlevel: 4\nstepnum: 7\ncontent: |\n\n  .. include:: /includes/start-server-auth.rst\n\n...\n","static_assets":[]},"server/auth":{"_id":"guides/andrew/master/server/auth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"secure-your-mongodb-deployment","children":[{"type":"text","position":{"start":{"line":5}},"value":"Secure your MongoDB Deployment"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"This guide describes how to enforce authentication on your local MongoDB deployment."}]}]},{"type":"directive","position":{"start":{"line":20}},"name":"time","argument":[{"type":"text","position":{"start":{"line":20}},"value":"10"}],"children":[]},{"type":"directive","position":{"start":{"line":22}},"name":"prerequisites","argument":[],"children":[{"type":"list","position":{"start":{"line":24}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":24}},"children":[{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"A local installation of MongoDB. See "},{"type":"role","position":{"start":{"line":24}},"name":"doc","target":"/server/install","children":[]}]}]},{"type":"listItem","position":{"start":{"line":24}},"children":[{"type":"paragraph","position":{"start":{"line":25}},"children":[{"type":"text","position":{"start":{"line":25}},"value":"The "},{"type":"role","position":{"start":{"line":25}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":25}},"value":" shell. See the mongo shell section of "},{"type":"role","position":{"start":{"line":25}},"name":"doc","target":"/server/drivers","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":27}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":29}},"name":"include","argument":[{"type":"text","position":{"start":{"line":29}},"value":"/includes/check_for_auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":29}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":31}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":33}},"name":"include","argument":[{"type":"text","position":{"start":{"line":33}},"value":"/includes/steps/auth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":33}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":35}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"If you have successfully completed this guide you have\nenabled basic authentication on your local MongoDB instance."}]}]},{"type":"directive","position":{"start":{"line":40}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":42}},"children":[{"type":"text","position":{"start":{"line":42}},"value":"The next guide walks you through connecting to your new MongoDB\ninstance."}]},{"type":"list","position":{"start":{"line":45}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":45}},"children":[{"type":"paragraph","position":{"start":{"line":45}},"children":[{"type":"role","position":{"start":{"line":45}},"name":"doc","target":"/server/drivers","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":47}},"name":"seealso","argument":[],"children":[{"type":"list","position":{"start":{"line":49}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":49}},"children":[{"type":"role","position":{"start":{"line":49}},"name":"doc","target":"/server/introduction","children":[]}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":50}},"children":[{"type":"role","position":{"start":{"line":50}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"role","position":{"start":{"line":51}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":52}},"children":[{"type":"role","position":{"start":{"line":52}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":49}},"children":[{"type":"paragraph","position":{"start":{"line":53}},"children":[{"type":"role","position":{"start":{"line":53}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n\n   title: Secure your MongoDB Deployment\n   type: Getting Started\n   level: beginner\n   author: MongoDB Documentation Team\n   product_version: 4.0\n   result_description:\n     This guide describes how to enforce authentication on your local MongoDB deployment.\n   time: 10\n   prerequisites:\n     - A local installation of MongoDB. See :doc:`/server/install`\n     - The :binary:`~bin.mongo` shell. See the mongo shell section of :doc:`/server/drivers`\n   check_your_environment:\n     .. include:: /includes/check_for_auth.rst\n   procedure:\n     .. include:: /includes/steps/auth.rst\n   summary: \n     If you have successfully completed this guide you have\n     enabled basic authentication on your local MongoDB instance.\n   whats_next:\n     The next guide walks you through connecting to your new MongoDB\n     instance.\n     \n     - :doc:`/server/drivers`\n   seealso:\n     - :doc:`/server/introduction`\n     - :doc:`/server/read`\n     - :doc:`/server/read_operators`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"includes/steps/cloud_pr":{"_id":"guides/andrew/master/includes/steps/cloud_pr","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Access to an Atlas supported browser"}],"id":"access-to-an-atlas-supported-browser"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check if you have an "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.atlas.mongodb.com/reference/supported-browsers","children":[{"type":"text","position":{"start":{"line":0}},"value":"Atlas supported browser"}]},{"type":"target","position":{"start":{"line":0}},"ids":["atlas-supported-browser"],"refuri":"https://docs.atlas.mongodb.com/reference/supported-browsers","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]}]},"source":"title: Access to an Atlas supported browser\nref: process-mongodb\nlevel: 4\nstepnum: 1\ncontent: |\n  \n  Check if you have an `Atlas supported browser\n  <https://docs.atlas.mongodb.com/reference/supported-browsers>`_.\n","static_assets":[]},"images/firstcluster.png#968654cd30e0b15d8b835ff39a066d3e4555aeef2bc77707908d6f990a643706":{},"images/cloudselect.png#6e68d13e2443fca4a38e22a664d6e4c7c1757c2c4a781c94da68a2db2c489f58":{},"images/clusterselect.png#6d03ba09c5e4a47ed4f3f76e8a643c62f99a99fbe0816bf6c928666d799a1c11":{},"includes/steps/cloud":{"_id":"guides/andrew/master/includes/steps/cloud","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create or login to an Atlas user account"}],"id":"create-or-login-to-an-atlas-user-account"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Atlas is MongoDB's cloud-based, database-as-a-service solution.\nIn order to use MongoDB in the cloud, you need to create an Atlas user account."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Go to "},{"type":"reference","position":{"start":{"line":3}},"refuri":"https://cloud.mongodb.com?utm_source=atlas-account-guide&utm_campaign=guides&utm_medium=docs","children":[{"type":"text","position":{"start":{"line":3}},"value":"cloud.mongodb.com"}]},{"type":"target","position":{"start":{"line":3}},"ids":["cloud-mongodb-com"],"refuri":"https://cloud.mongodb.com?utm_source=atlas-account-guide&utm_campaign=guides&utm_medium=docs","children":[]},{"type":"text","position":{"start":{"line":3}},"value":"\nto create or login to your user account."}]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If you are creating your user account, as part of the process Atlas\nautomatically creates a default \"organization\" and \"project\" for you.\nOn Atlas, an "},{"type":"emphasis","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"organization"}]},{"type":"text","position":{"start":{"line":7}},"value":" correlates to a the name of the\norganization for which the cluster is being created, and the "},{"type":"emphasis","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"project"}]},{"type":"text","position":{"start":{"line":7}},"value":"\nis a specific application or initiative that will make use of this MongoDB\nAtlas cluster. You can add additional organizations and\nprojects later."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Select the Build New Cluster button"}],"id":"select-the-build-new-cluster-button"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you already had an account when you logged in,\nyou will see a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Clusters"}]},{"type":"text","position":{"start":{"line":0}},"value":" management panel. A "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"cluster"}]},{"type":"text","position":{"start":{"line":0}},"value":" is a group\nof MongoDB instances that work together to provide high availability\nand fault tolerance."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Select the green "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Build A New Cluster"}]},{"type":"text","position":{"start":{"line":5}},"value":" button at the center\nof the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Clusters"}]},{"type":"text","position":{"start":{"line":5}},"value":" panel."}]},{"type":"directive","position":{"start":{"line":8}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have already built a cluster, you will see this button\nat the right hand side of the panel."}]}]},{"type":"directive","position":{"start":{"line":12}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":12}},"value":"/images/firstcluster.png"}],"options":{"figwidth":"700px","checksum":"968654cd30e0b15d8b835ff39a066d3e4555aeef2bc77707908d6f990a643706"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Pick your cluster tier"}],"id":"pick-your-cluster-tier"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Now it's time to select your cluster tier. In this guide we will be\nsetting up a free-tier or "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M0"}]},{"type":"text","position":{"start":{"line":0}},"value":" cluster."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Ensure that the "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Cloud Provider and Region"}]},{"type":"text","position":{"start":{"line":3}},"value":" dropdowns have "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Amazon\nWeb Services"}]},{"type":"text","position":{"start":{"line":3}},"value":" and either "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"N. Virginia (us-east-1)"}]},{"type":"text","position":{"start":{"line":3}},"value":" or "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"Frankfurt\n(eu-central-1)"}]},{"type":"text","position":{"start":{"line":3}},"value":" selected."}]},{"type":"directive","position":{"start":{"line":7}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/images/cloudselect.png"}],"options":{"figwidth":"700px","checksum":"6e68d13e2443fca4a38e22a664d6e4c7c1757c2c4a781c94da68a2db2c489f58"},"children":[]},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Scroll down and click on the "},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Cluster Tier"}]},{"type":"text","position":{"start":{"line":10}},"value":" section. For the free\ntier cluster, select the "},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"M0"}]},{"type":"text","position":{"start":{"line":10}},"value":" cluster. You can only create one free\ntier ("},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"M0"}]},{"type":"text","position":{"start":{"line":10}},"value":") cluster per account. The "},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"M0"}]},{"type":"text","position":{"start":{"line":10}},"value":" cluster is not recommended\nfor production applications."}]},{"type":"directive","position":{"start":{"line":15}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The Atlas Live Migration service requires "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M10"}]},{"type":"text","position":{"start":{"line":0}},"value":" or larger instance\nnodes. For development or staging environments, deploy a cluster\nwith "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M10"}]},{"type":"text","position":{"start":{"line":0}},"value":" or "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M20"}]},{"type":"text","position":{"start":{"line":0}},"value":" instance nodes. For production workloads, select\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M30"}]},{"type":"text","position":{"start":{"line":0}},"value":" or larger instance nodes."}]}]},{"type":"directive","position":{"start":{"line":21}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":21}},"value":"/images/clusterselect.png"}],"options":{"figwidth":"837px","checksum":"6d03ba09c5e4a47ed4f3f76e8a643c62f99a99fbe0816bf6c928666d799a1c11"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create your cluster"}],"id":"create-your-cluster"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create Cluster"}]},{"type":"text","position":{"start":{"line":0}},"value":" button at the bottom of the page. If you\nhave selected a non free-tier cluster you will be prompted for credit\ncard information. It takes a few minutes for the cluster instance to\nspin up."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create an administrative username and password"}],"id":"create-an-administrative-username-and-password"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Atlas prompts you to create an administrative MongoDB user as a part\nof deploying the first Atlas cluster in the project. This user has\nadministrative access to any MongoDB cluster you deploy in the Atlas\nproject."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Fill in the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"username"}]},{"type":"text","position":{"start":{"line":5}},"value":" and "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"password"}]},{"type":"text","position":{"start":{"line":5}},"value":" fields. The password should\nbe random, long, and complex to ensure system security and to impede\nmalicious access."}]}]}]}]},"source":"title: Create or login to an Atlas user account\nref: process-mongodb\nlevel: 4\nstepnum: 1\ncontent: |\n  Atlas is MongoDB's cloud-based, database-as-a-service solution.\n  In order to use MongoDB in the cloud, you need to create an Atlas user account.\n  \n  Go to `cloud.mongodb.com\n  <https://cloud.mongodb.com?utm_source=atlas-account-guide&utm_campaign=guides&utm_medium=docs>`_\n  to create or login to your user account.\n\n  If you are creating your user account, as part of the process Atlas\n  automatically creates a default \"organization\" and \"project\" for you.\n  On Atlas, an *organization* correlates to a the name of the\n  organization for which the cluster is being created, and the *project*\n  is a specific application or initiative that will make use of this MongoDB\n  Atlas cluster. You can add additional organizations and\n  projects later.\n       \n---\ntitle: Select the Build New Cluster button\nref: cluster-new\nlevel: 4\nstepnum: 2\ncontent: |\n\n  If you already had an account when you logged in,\n  you will see a ``Clusters`` management panel. A ``cluster`` is a group\n  of MongoDB instances that work together to provide high availability\n  and fault tolerance.\n  \n  Select the green ``Build A New Cluster`` button at the center\n  of the ``Clusters`` panel.\n  \n  .. note::\n     If you have already built a cluster, you will see this button\n     at the right hand side of the panel.\n  \n  .. figure:: /images/firstcluster.png\n     :figwidth: 700px\n\n---\ntitle: Pick your cluster tier\nref: cluster-setup\nlevel: 4\nstepnum: 3\ncontent: |\n  \n  Now it's time to select your cluster tier. In this guide we will be\n  setting up a free-tier or ``M0`` cluster.\n\n  Ensure that the ``Cloud Provider and Region`` dropdowns have ``Amazon\n  Web Services`` and either ``N. Virginia (us-east-1)`` or ``Frankfurt\n  (eu-central-1)`` selected.\n\n  .. figure:: /images/cloudselect.png\n     :figwidth: 700px\n\n  Scroll down and click on the ``Cluster Tier`` section. For the free\n  tier cluster, select the ``M0`` cluster. You can only create one free\n  tier (``M0``) cluster per account. The ``M0`` cluster is not recommended\n  for production applications.\n\n  .. note::\n     The Atlas Live Migration service requires ``M10`` or larger instance\n     nodes. For development or staging environments, deploy a cluster\n     with ``M10`` or ``M20`` instance nodes. For production workloads, select\n     ``M30`` or larger instance nodes.\n\n  .. figure:: /images/clusterselect.png\n     :figwidth: 837px\n  \n---\ntitle: Create your cluster\nref: select-deploy\nlevel: 4\nstepnum: 4\ncontent: |\n  \n  Click the ``Create Cluster`` button at the bottom of the page. If you\n  have selected a non free-tier cluster you will be prompted for credit\n  card information. It takes a few minutes for the cluster instance to\n  spin up.\n  \n---\ntitle: Create an administrative username and password\nref: admin-setup\nlevel: 5\nstepnum: 5\ncontent: |\n  \n  Atlas prompts you to create an administrative MongoDB user as a part\n  of deploying the first Atlas cluster in the project. This user has\n  administrative access to any MongoDB cluster you deploy in the Atlas\n  project.\n\n  Fill in the ``username`` and ``password`` fields. The password should\n  be random, long, and complex to ensure system security and to impede\n  malicious access.\n...  \n","static_assets":["6e68d13e2443fca4a38e22a664d6e4c7c1757c2c4a781c94da68a2db2c489f58","6d03ba09c5e4a47ed4f3f76e8a643c62f99a99fbe0816bf6c928666d799a1c11","968654cd30e0b15d8b835ff39a066d3e4555aeef2bc77707908d6f990a643706"]},"cloud/atlas":{"_id":"guides/andrew/master/cloud/atlas","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"create-an-atlas-account-and-cluster","children":[{"type":"text","position":{"start":{"line":5}},"value":"Create an Atlas Account and Cluster"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"In this guide, you will:"}]},{"type":"list","position":{"start":{"line":20}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":20}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"create a free account on Atlas, MongoDB's managed database solution in the cloud"}]}]},{"type":"listItem","position":{"start":{"line":20}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"create a free MongoDB "},{"type":"emphasis","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"cluster"}]},{"type":"text","position":{"start":{"line":21}},"value":", or group of database instances."}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"time","argument":[{"type":"text","position":{"start":{"line":23}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":27}},"name":"include","argument":[{"type":"text","position":{"start":{"line":27}},"value":"/includes/steps/cloud_pr.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":27}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":32}},"name":"include","argument":[{"type":"text","position":{"start":{"line":32}},"value":"/includes/steps/cloud.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":32}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":34}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"If you have successfully completed this guide, you have created your first Atlas account\nand MongoDB cluster. Now it's time to put data into your Atlas MongoDB cluster."}]}]},{"type":"directive","position":{"start":{"line":39}},"name":"whats_next","argument":[],"children":[{"type":"list","position":{"start":{"line":41}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":41}},"children":[{"type":"paragraph","position":{"start":{"line":41}},"children":[{"type":"role","position":{"start":{"line":41}},"name":"doc","target":"/cloud/connectionstring","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Create an Atlas Account and Cluster\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   result_description:\n     In this guide, you will:\n\n     - create a free account on Atlas, MongoDB's managed database solution in the cloud\n     - create a free MongoDB *cluster*, or group of database instances.\n   \n   time: 15\n   prerequisites:\n     .. include:: /includes/steps/cloud_pr.rst\n   check_your_environment:\n   procedure:\n     .. include:: /includes/steps/cloud.rst\n   summary:\n     If you have successfully completed this guide, you have created your first Atlas account\n     and MongoDB cluster. Now it's time to put data into your Atlas MongoDB cluster.\n   whats_next:\n     - :doc:`/cloud/connectionstring`\n","static_assets":[]},"images/connect_panel.png#38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1":{},"images/connectionstringwhitelist.png#f5832e8b9a4bfd5b0e862a1523e5f5cf9ef711e247bee878d9de21dad85b3088":{},"images/connection-method.png#c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89":{},"includes/atlas-connect-with-driver":{"_id":"guides/andrew/master/includes/atlas-connect-with-driver","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Choose your connection method","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" step in the modal,\nselect the button marked "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Connect Your Application","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"The following Atlas screenshot shows the connection option\nbuttons:"}]},{"type":"directive","position":{"start":{"line":6}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/images/connection-method.png"}],"options":{"figwidth":"600px","checksum":"c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89"},"children":[]},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Follow the instructions for your driver language and version."}]}],"position":{"start":{"line":0}}},"source":"In the :guilabel:`Choose your connection method` step in the modal,\nselect the button marked :guilabel:`Connect Your Application`.\n\nThe following Atlas screenshot shows the connection option\nbuttons:\n\n.. figure:: /images/connection-method.png\n   :figwidth: 600px\n\nFollow the instructions for your driver language and version.","static_assets":["c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89"]},"includes/driver_copy_paste":{"_id":"guides/andrew/master/includes/driver_copy_paste","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Choose a connection method","position":{"start":{"line":59}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" step in the\nmodal window, select the button marked "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Connect\nwith the Mongo Shell","position":{"start":{"line":59}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"The following Atlas screenshot shows the connection option\nbuttons:"}]},{"type":"directive","position":{"start":{"line":7}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/images/connection-method.png"}],"options":{"figwidth":"600px","checksum":"c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89"},"children":[]},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Follow the instructions for your platform."}]}]},{"type":"directive","position":{"start":{"line":18}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":18}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Choose a connection method","position":{"start":{"line":59}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" step in the\nmodal window select the button marked "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Connect with\nMongoDB Compass","position":{"start":{"line":59}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"The following Atlas screenshot shows the connection option\nbuttons:"}]},{"type":"directive","position":{"start":{"line":7}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/images/connection-method.png"}],"options":{"figwidth":"600px","checksum":"c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89"},"children":[]},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Follow the instructions for your version of Compass."}]}]},{"type":"directive","position":{"start":{"line":33}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":33}},"value":"python"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/atlas-connect-with-driver.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"motor"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/atlas-connect-with-driver.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":44}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":44}},"value":"java-sync"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/atlas-connect-with-driver.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":49}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":49}},"value":"nodejs"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/atlas-connect-with-driver.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":54}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":54}},"value":"csharp"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/atlas-connect-with-driver.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         In the :guilabel:`Choose a connection method` step in the\n         modal window, select the button marked :guilabel:`Connect\n         with the Mongo Shell`.\n\n         The following Atlas screenshot shows the connection option\n         buttons:\n\n         .. figure:: /images/connection-method.png\n            :figwidth: 600px\n\n         Follow the instructions for your platform.\n\n\n     - id: compass\n       content: |\n\n         In the :guilabel:`Choose a connection method` step in the\n         modal window select the button marked :guilabel:`Connect with\n         MongoDB Compass`.\n\n         The following Atlas screenshot shows the connection option\n         buttons:\n\n         .. figure:: /images/connection-method.png\n            :figwidth: 600px\n\n         Follow the instructions for your version of Compass.\n\n     - id: python\n       content: |\n\n         .. include:: /includes/atlas-connect-with-driver.rst\n\n     - id: motor\n       content: |\n         \n         .. include:: /includes/atlas-connect-with-driver.rst\n\n\n     - id: java-sync\n       content: |\n\n         .. include:: /includes/atlas-connect-with-driver.rst\n\n     - id: nodejs\n       content: |\n        \n         .. include:: /includes/atlas-connect-with-driver.rst\n     \n     - id: csharp\n       content: |\n\n         .. include:: /includes/atlas-connect-with-driver.rst\n","static_assets":["c788ca3e0ebfd32b3c7299243ba522903d03be041bed351e5ae6adf1ca779a89"]},"includes/steps/find_connection_string":{"_id":"guides/andrew/master/includes/steps/find_connection_string","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Login to Atlas"}],"id":"login-to-atlas"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"reference","position":{"start":{"line":0}},"refuri":"https://cloud.mongodb.com","children":[{"type":"text","position":{"start":{"line":0}},"value":"Login to Atlas"}]},{"type":"target","position":{"start":{"line":0}},"ids":["login-to-atlas"],"refuri":"https://cloud.mongodb.com","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click the Connect button"}],"id":"click-the-connect-button"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"connect","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button on the cluster management panel.\nThe following Atlas screenshot shows the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"connect","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button:"}]},{"type":"directive","position":{"start":{"line":3}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/images/connect_panel.png"}],"options":{"figwidth":"328px","checksum":"38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Whitelist your IP address and select your connection method"}],"id":"whitelist-your-ip-address-and-select-your-connection-method"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Setup connection security","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" step in the modal\nwindow, check to make sure your IP address is\nin the whitelist for Atlas connections. If it is not, add it."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"The following Atlas screenshot shows the options for adding IP\naddresses in the Atlas UI:"}]},{"type":"directive","position":{"start":{"line":7}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/images/connectionstringwhitelist.png"}],"options":{"figwidth":"600px","checksum":"f5832e8b9a4bfd5b0e862a1523e5f5cf9ef711e247bee878d9de21dad85b3088"},"children":[]},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"If your cluster already has one or more IP Whitelist entries you\nwill not have access to the button to add your IP address in the\nmodal. Instead, use the following procedure to add your IP address\nto the whitelist:"}]},{"type":"list","position":{"start":{"line":15}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"Exit the modal window."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"Click the "},{"type":"role","position":{"start":{"line":17}},"name":"guilabel","label":{"type":"text","value":"Security","position":{"start":{"line":18}}},"children":[]},{"type":"text","position":{"start":{"line":17}},"value":" tab in the Atlas UI."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"Click the "},{"type":"role","position":{"start":{"line":19}},"name":"guilabel","label":{"type":"text","value":"IP Whitelist","position":{"start":{"line":20}}},"children":[]},{"type":"text","position":{"start":{"line":19}},"value":" tab."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"Click the green "},{"type":"role","position":{"start":{"line":21}},"name":"guilabel","label":{"type":"text","value":"Add IP Address","position":{"start":{"line":22}}},"children":[]},{"type":"text","position":{"start":{"line":21}},"value":" button."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"Add your IP address."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":25}},"children":[{"type":"text","position":{"start":{"line":25}},"value":"Return to the Clusters "},{"type":"role","position":{"start":{"line":25}},"name":"guilabel","label":{"type":"text","value":"Overview","position":{"start":{"line":26}}},"children":[]},{"type":"text","position":{"start":{"line":25}},"value":" tab."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":27}},"children":[{"type":"text","position":{"start":{"line":27}},"value":"Click the "},{"type":"role","position":{"start":{"line":27}},"name":"guilabel","label":{"type":"text","value":"Connect","position":{"start":{"line":28}}},"children":[]},{"type":"text","position":{"start":{"line":27}},"value":" button and proceed."}]}]}]},{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"For more information on whitelisting IP addresses, see\n"},{"type":"reference","position":{"start":{"line":29}},"refuri":"https://docs.atlas.mongodb.com/security-whitelist/","children":[{"type":"text","position":{"start":{"line":29}},"value":"Configure Whitelist Entries"}]},{"type":"target","position":{"start":{"line":29}},"ids":["configure-whitelist-entries"],"refuri":"https://docs.atlas.mongodb.com/security-whitelist/","children":[]},{"type":"text","position":{"start":{"line":29}},"value":"\nin the Atlas documentation."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the connection string"}],"id":"copy-the-connection-string"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/driver_copy_paste.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}]},"source":"title: Login to Atlas\nref: connect\nlevel: 4\nstepnum: 1\ncontent: |\n\n  `Login to Atlas <https://cloud.mongodb.com>`_.\n\n---\ntitle: Click the Connect button\nref: connect_button\nlevel: 4\nstepnum: 2\ncontent: |\n\n  Click the :guilabel:`connect` button on the cluster management panel.\n  The following Atlas screenshot shows the :guilabel:`connect` button:\n\n  .. figure:: /images/connect_panel.png\n     :figwidth: 328px\n\n---\ntitle: Whitelist your IP address and select your connection method\nref: bind_db\nlevel: 4\nstepnum: 3\ncontent: |\n\n  In the :guilabel:`Setup connection security` step in the modal\n  window, check to make sure your IP address is\n  in the whitelist for Atlas connections. If it is not, add it.\n\n  The following Atlas screenshot shows the options for adding IP\n  addresses in the Atlas UI:\n\n  .. figure:: /images/connectionstringwhitelist.png\n     :figwidth: 600px\n\n  If your cluster already has one or more IP Whitelist entries you\n  will not have access to the button to add your IP address in the\n  modal. Instead, use the following procedure to add your IP address\n  to the whitelist:\n  \n  1. Exit the modal window.\n\n  #. Click the :guilabel:`Security` tab in the Atlas UI.\n\n  #. Click the :guilabel:`IP Whitelist` tab.\n\n  #. Click the green :guilabel:`Add IP Address` button.\n\n  #. Add your IP address.\n\n  #. Return to the Clusters :guilabel:`Overview` tab.\n\n  #. Click the :guilabel:`Connect` button and proceed.\n\n  For more information on whitelisting IP addresses, see\n  `Configure Whitelist Entries\n  <https://docs.atlas.mongodb.com/security-whitelist/>`_\n  in the Atlas documentation.\n\n---\ntitle: Copy the connection string\nref: access-mongos\nlevel: 4\nstepnum: 4\ncontent: |\n  \n  .. include:: /includes/driver_copy_paste.rst","static_assets":["f5832e8b9a4bfd5b0e862a1523e5f5cf9ef711e247bee878d9de21dad85b3088","38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1"]},"cloud/connectionstring":{"_id":"guides/andrew/master/cloud/connectionstring","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"set-up-atlas-connectivity","children":[{"type":"text","position":{"start":{"line":5}},"value":"Set Up Atlas Connectivity"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"level","argument":[{"type":"text","position":{"start":{"line":22}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":24}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":26}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"This guide will show you how to set up your Atlas cluster for connections from a client. You will:"}]},{"type":"list","position":{"start":{"line":30}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":30}},"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"whitelist your IP address in order to allow access to your Atlas cluster"}]}]},{"type":"listItem","position":{"start":{"line":30}},"children":[{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"text","position":{"start":{"line":31}},"value":"locate your connection string and copy it"}]}]}]}]},{"type":"directive","position":{"start":{"line":33}},"name":"time","argument":[{"type":"text","position":{"start":{"line":33}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":35}},"name":"prerequisites","argument":[],"children":[{"type":"list","position":{"start":{"line":37}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":37}},"children":[{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"An Atlas account. See "},{"type":"role","position":{"start":{"line":37}},"name":"doc","label":{"type":"text","value":"Create an Atlas Account and Cluster","position":{"start":{"line":36}}},"target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":37}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":37}},"children":[{"type":"paragraph","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"A MongoDB user. See "},{"type":"reference","position":{"start":{"line":40}},"refuri":"https://docs.atlas.mongodb.com/security-add-mongodb-users/","children":[{"type":"text","position":{"start":{"line":40}},"value":"Configure MongoDB Users"}]},{"type":"target","position":{"start":{"line":40}},"ids":["configure-mongodb-users"],"refuri":"https://docs.atlas.mongodb.com/security-add-mongodb-users/","children":[]},{"type":"text","position":{"start":{"line":40}},"value":"\nin the Atlas documentation."}]}]}]}]},{"type":"directive","position":{"start":{"line":45}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":47}},"name":"include","argument":[{"type":"text","position":{"start":{"line":47}},"value":"/includes/steps/find_connection_string.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":47}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":49}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"text","position":{"start":{"line":51}},"value":"If you have successfully completed this guide, you will now have\nyour IP address in the Atlas whitelist, and an Atlas connection\nstring in your copy buffer."}]}]},{"type":"directive","position":{"start":{"line":55}},"name":"whats_next","argument":[],"children":[{"type":"list","position":{"start":{"line":57}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":57}},"children":[{"type":"paragraph","position":{"start":{"line":57}},"children":[{"type":"role","position":{"start":{"line":57}},"name":"doc","target":"/server/drivers","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Set Up Atlas Connectivity\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   languages:\n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n\n   product_version: 4.0\n   result_description:\n\n     This guide will show you how to set up your Atlas cluster for connections from a client. You will:\n       \n       - whitelist your IP address in order to allow access to your Atlas cluster\n       - locate your connection string and copy it\n\n   time: 15\n   prerequisites:\n\n     - An Atlas account. See :doc:`Create an Atlas Account and Cluster\n       </cloud/atlas>`.\n\n     - A MongoDB user. See `Configure MongoDB Users\n       <https://docs.atlas.mongodb.com/security-add-mongodb-users/>`_\n       in the Atlas documentation.\n\n   procedure:\n\n     .. include:: /includes/steps/find_connection_string.rst\n\n   summary:\n\n     If you have successfully completed this guide, you will now have\n     your IP address in the Atlas whitelist, and an Atlas connection\n     string in your copy buffer.\n\n   whats_next:\n     - :doc:`/server/drivers`\n","static_assets":[]},"includes/live-migration-description":{"_id":"guides/andrew/master/includes/live-migration-description","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The MongoDB Atlas Live Migration Service helps you migrate MongoDB databases to\nour fully managed cloud database, MongoDB Atlas, quickly and securely. It works\nby connecting to your existing MongoDB database and synchronizing it with a\ncluster running in Atlas all while your application continues to function\nnormally. Once the data between the two clusters has been synchronized, you can\nsimply update the database connection string in your application to cut over to\nyour cluster in Atlas."}]}],"position":{"start":{"line":0}}},"source":"The MongoDB Atlas Live Migration Service helps you migrate MongoDB databases to\nour fully managed cloud database, MongoDB Atlas, quickly and securely. It works\nby connecting to your existing MongoDB database and synchronizing it with a\ncluster running in Atlas all while your application continues to function\nnormally. Once the data between the two clusters has been synchronized, you can\nsimply update the database connection string in your application to cut over to\nyour cluster in Atlas.","static_assets":[]},"includes/steps/migration_pr":{"_id":"guides/andrew/master/includes/steps/migration_pr","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Your data is currently in a MongoDB database."}],"id":"your-data-is-currently-in-a-mongodb-database"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"This guide focuses on migrating to Atlas from an existing MongoDB deployment\non AWS. If you have data in other database systems, such as MySQL, PostgreSQL, or\nDynamoDB, please "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://mongodbcom-node-staging-2.corp.mongodb.com/contact","children":[{"type":"text","position":{"start":{"line":0}},"value":"contact us"}]},{"type":"target","position":{"start":{"line":0}},"ids":["contact-us"],"refuri":"https://mongodbcom-node-staging-2.corp.mongodb.com/contact","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nfor help with your migration."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Your current MongoDB database is running MongoDB 2.6+"}],"id":"your-current-mongodb-database-is-running-mongodb-2-6"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Atlas supports the latest versions of MongoDB: 3.4, 3.6, and 4.0.\nIf you're running MongoDB version 2.6 or greater, the Atlas Live Migration\nService can move your data directly into a newer database version.\nUpdate your "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/ecosystem/drivers","children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB drivers"}]},{"type":"target","position":{"start":{"line":0}},"ids":["mongodb-drivers"],"refuri":"https://docs.mongodb.com/ecosystem/drivers","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nand make any necessary code changes at the application level to ensure\ncompatibility. If you're running a version older than 2.6, see\n"},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/v2.6/release-notes/2.6-upgrade/index.html","children":[{"type":"text","position":{"start":{"line":0}},"value":"Upgrade MongoDB to 2.6"}]},{"type":"target","position":{"start":{"line":0}},"ids":["upgrade-mongodb-to-2-6"],"refuri":"https://docs.mongodb.com/v2.6/release-notes/2.6-upgrade/index.html","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nfor upgrade instructions."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Your current deployment is a MongoDB replica set."}],"id":"your-current-deployment-is-a-mongodb-replica-set"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If your deployment is currently a standalone instance, you must first\n"},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/tutorial/convert-standalone-to-replica-set","children":[{"type":"text","position":{"start":{"line":0}},"value":"convert it to a replica set"}]},{"type":"text","position":{"start":{"line":0}},"value":".\nLive migration of data from sharded clusters is not supported."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Authentication is enabled on your source deployment"}],"id":"authentication-is-enabled-on-your-source-deployment"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The migration process requires that authentication is enabled on your\nsource cluster in AWS. See "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/tutorial/enable-authentication","children":[{"type":"text","position":{"start":{"line":0}},"value":"Enable Auth"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfor instructions on enabling authentication."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"You can verify that authentication is enabled on your source cluster\nusing the "},{"type":"reference","position":{"start":{"line":4}},"refuri":"https://docs.mongodb.com/manual/reference/program/mongo/","children":[{"type":"text","position":{"start":{"line":4}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":4}},"value":" command:"}]},{"type":"code","position":{"start":{"line":7}},"lang":"sh","copyable":true,"value":"mongo <mongodb-connection-string> -u <mongodb-username> -p --authenticationDatabase admin"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The database user from your source cluster on AWS that you will use to perform the migration has the required MongoDB roles."}],"id":"the-database-user-from-your-source-cluster-on-aws-that-you-will-use-to-perform-the-migration-has-the-required-mongodb-roles"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The user must have the "},{"type":"role","position":{"start":{"line":0}},"name":"authrole","target":"clusterMonitor","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" and "},{"type":"role","position":{"start":{"line":0}},"name":"authrole","target":"backup","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" roles. To verify\nthat the database user that you intend to use for migration has the appropriate\nroles, run the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/manual/reference/method/db.getUser","children":[{"type":"text","position":{"start":{"line":0}},"value":"db.getUser()"}]},{"type":"text","position":{"start":{"line":0}},"value":" command against the admin database."}]},{"type":"code","position":{"start":{"line":4}},"lang":"javascript","copyable":true,"value":"use admin\ndb.getUser(\"admin\")\n{\n  \"_id\" : \"admin.admin\",\n  \"user\" : \"admin\",\n  \"db\" : \"admin\",\n  \"roles\" : [\n    {\n      \"role\" : \"backup\",\n      \"db\" : \"admin\"\n    },\n    {\n      \"role\" : \"clusterMonitor\",\n      \"db\" : \"admin\"\n    }\n  ]\n}"}]}]}]},"source":"title: Your data is currently in a MongoDB database.\nref: mongodb\nlevel: 4\nstepnum: 1\ncontent: |\n\n   This guide focuses on migrating to Atlas from an existing MongoDB deployment\n   on AWS. If you have data in other database systems, such as MySQL, PostgreSQL, or\n   DynamoDB, please `contact us <https://mongodbcom-node-staging-2.corp.mongodb.com/contact>`_\n   for help with your migration.\n\n---\ntitle: Your current MongoDB database is running MongoDB 2.6+\nref: mongodb-version\nlevel: 4\nstepnum: 2\ncontent: |\n\n   Atlas supports the latest versions of MongoDB: 3.4, 3.6, and 4.0.\n   If you're running MongoDB version 2.6 or greater, the Atlas Live Migration\n   Service can move your data directly into a newer database version.\n   Update your `MongoDB drivers <https://docs.mongodb.com/ecosystem/drivers>`_\n   and make any necessary code changes at the application level to ensure\n   compatibility. If you're running a version older than 2.6, see \n   `Upgrade MongoDB to 2.6 <https://docs.mongodb.com/v2.6/release-notes/2.6-upgrade/index.html>`_\n   for upgrade instructions.\n\n---\ntitle: Your current deployment is a MongoDB replica set.\nref: mongod-replica-set\nlevel: 4\nstepnum: 3\ncontent: |\n\n   If your deployment is currently a standalone instance, you must first\n   :manual:`convert it to a replica set </tutorial/convert-standalone-to-replica-set>`.\n   Live migration of data from sharded clusters is not supported. \n---\ntitle: Authentication is enabled on your source deployment\nref: authentication-enabled\nlevel: 4\nstepnum: 4\ncontent: |\n\n   The migration process requires that authentication is enabled on your\n   source cluster in AWS. See :manual:`Enable Auth </tutorial/enable-authentication>`\n   for instructions on enabling authentication.\n\n   You can verify that authentication is enabled on your source cluster\n   using the :manual:`mongo </reference/program/mongo/>` command:\n\n   .. code-block:: sh \n\n      mongo <mongodb-connection-string> -u <mongodb-username> -p --authenticationDatabase admin\n---\ntitle: The database user from your source cluster on AWS that you will use\n       to perform the migration has the required MongoDB roles.\nref: required-roles\nlevel: 4\nstepnum: 5\ncontent: |\n\n   The user must have the :authrole:`clusterMonitor` and :authrole:`backup` roles. To verify\n   that the database user that you intend to use for migration has the appropriate\n   roles, run the :manual:`db.getUser() </reference/method/db.getUser>` command against the admin database.\n\n   .. code-block:: javascript\n\n      use admin\n      db.getUser(\"admin\")\n      {\n        \"_id\" : \"admin.admin\",\n        \"user\" : \"admin\",\n        \"db\" : \"admin\",\n        \"roles\" : [\n          {\n            \"role\" : \"backup\",\n            \"db\" : \"admin\"\n          },\n          {\n            \"role\" : \"clusterMonitor\",\n            \"db\" : \"admin\"\n          }\n        ]\n      }\n...\n","static_assets":[]},"images/atlas-deployment.png#885a5c26783aa9b8b89230ca625f552e9f1191152944f108aca26997c6b3b8a1":{},"images/aws-inbound-rules.png#3d6c77c9e45a6ac282ffdfd5a6a3e11ea59d68826d7397395ac4fbbd61901f21":{},"images/aws-change-security-group.gif#9a507e12aac7b5baa9dc33d62e101d36bd5afff51f153a88d40751184de92dd3":{},"images/migration-complete.png#bfb1eb00c372ce168c291cff9d2af9df8023e7e25d81285d70cb3ce885290a70":{},"includes/steps/migrate-to-atlas":{"_id":"guides/andrew/master/includes/steps/migrate-to-atlas","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Launch your target replica set in MongoDB Atlas."}],"id":"launch-your-target-replica-set-in-mongodb-atlas"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"See "},{"type":"role","position":{"start":{"line":0}},"name":"doc","label":{"type":"text","value":"Create an Atlas Account and Cluster","position":{"start":{"line":1}}},"target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nfor instructions."}]},{"type":"directive","position":{"start":{"line":3}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Your target cluster must use "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"M10"}]},{"type":"text","position":{"start":{"line":5}},"value":" or larger instance nodes.\nFor development or staging environments, deploy a cluster\nwith "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"M10"}]},{"type":"text","position":{"start":{"line":5}},"value":" or "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"M20"}]},{"type":"text","position":{"start":{"line":5}},"value":" instance nodes. For production workloads,\nselect "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"M30"}]},{"type":"text","position":{"start":{"line":5}},"value":" or larger instance nodes."}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Open Atlas Live Migration Service."}],"id":"open-atlas-live-migration-service"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"On the Overview page of your new target cluster, click the ellipsis\n(...) button and select "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Migrate Data to this Cluster","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/images/atlas-deployment.png"}],"options":{"figwidth":"700px","checksum":"885a5c26783aa9b8b89230ca625f552e9f1191152944f108aca26997c6b3b8a1"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"I'm ready to migrate","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}],"id":"click-i-m-ready-to-migrate"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Whitelist the Atlas Live Migration Service on your AWS source cluster."}],"id":"whitelist-the-atlas-live-migration-service-on-your-aws-source-cluster"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"At the top of the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Migrate Data to Cluster","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" modal, Atlas displays\nthe IP address ranges that must be accessible from your source cluster.\nThe address ranges displayed depend on the location of your target\ncluster and can change, so verify that you enter the address ranges\nas displayed in the modal."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"AWS EC2 servers are protected from unauthorized network access using\n"},{"type":"reference","position":{"start":{"line":6}},"refuri":"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html","children":[{"type":"text","position":{"start":{"line":6}},"value":"Security Groups"}]},{"type":"target","position":{"start":{"line":6}},"ids":["security-groups"],"refuri":"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html","children":[]},{"type":"text","position":{"start":{"line":6}},"value":".\nTo whitelist new IP address ranges, either create a new Security Group, or\nmodify your existing Security Group to permit inbound network access\nfrom the displayed IP address ranges."}]},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"Here is an example security group that grants access to Atlas Live Migration Service."}]},{"type":"directive","position":{"start":{"line":14}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":14}},"value":"/images/aws-inbound-rules.png"}],"options":{"figwidth":"760","checksum":"3d6c77c9e45a6ac282ffdfd5a6a3e11ea59d68826d7397395ac4fbbd61901f21"},"children":[]},{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"If you create a new Security Group, you must associate it with\nthe EC2 instances running your source cluster. In the AWS EC2 console,\nclick the "},{"type":"role","position":{"start":{"line":17}},"name":"guilabel","label":{"type":"text","value":"Actions","position":{"start":{"line":18}}},"children":[]},{"type":"text","position":{"start":{"line":17}},"value":" dropdown and select "},{"type":"role","position":{"start":{"line":17}},"name":"guilabel","label":{"type":"text","value":"Change\nSecurity Group","position":{"start":{"line":18}}},"children":[]},{"type":"text","position":{"start":{"line":17}},"value":"."}]},{"type":"directive","position":{"start":{"line":22}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":22}},"value":"/images/aws-change-security-group.gif"}],"options":{"figwidth":"760","checksum":"9a507e12aac7b5baa9dc33d62e101d36bd5afff51f153a88d40751184de92dd3"},"children":[]},{"type":"paragraph","position":{"start":{"line":25}},"children":[{"type":"text","position":{"start":{"line":25}},"value":"For additional information on creating or modifying Security Groups, see "},{"type":"reference","position":{"start":{"line":25}},"refuri":"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#adding-security-group-rule","children":[{"type":"text","position":{"start":{"line":25}},"value":"Adding Rules to a Security Group"}]},{"type":"target","position":{"start":{"line":25}},"ids":["adding-rules-to-a-security-group"],"refuri":"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#adding-security-group-rule","children":[]},{"type":"text","position":{"start":{"line":25}},"value":"\nin the AWS EC2 documentation."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Validate your AWS credentials with Atlas Live Migration Service."}],"id":"validate-your-aws-credentials-with-atlas-live-migration-service"},{"type":"list","position":{"start":{"line":0}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"On the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Migrate Data to Cluster","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" modal, enter the hostname\nand port number of the primary node in your source AWS source cluster\nthat Atlas will use to perform the data migration."}]},{"type":"directive","position":{"start":{"line":4}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"The address must be resolvable over the public internet, so do not use\nthe private IP address of the node."}]}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Enter the MongoDB username and password from the AWS source cluster\nin "},{"type":"role","position":{"start":{"line":9}},"name":"guilabel","label":{"type":"text","value":"Username/Password","position":{"start":{"line":10}}},"children":[]},{"type":"text","position":{"start":{"line":9}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"If SSL is enabled on the source cluster, toggle the "},{"type":"role","position":{"start":{"line":12}},"name":"guilabel","label":{"type":"text","value":"Is SSL enabled","position":{"start":{"line":13}}},"children":[]},{"type":"text","position":{"start":{"line":12}},"value":"\nto "},{"type":"role","position":{"start":{"line":12}},"name":"guilabel","label":{"type":"text","value":"Yes","position":{"start":{"line":13}}},"children":[]},{"type":"text","position":{"start":{"line":12}},"value":" and upload the CA file that your source AWS cluster\nuses."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"Click "},{"type":"role","position":{"start":{"line":16}},"name":"guilabel","label":{"type":"text","value":"Validate","position":{"start":{"line":17}}},"children":[]},{"type":"text","position":{"start":{"line":16}},"value":"."}]}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Start Migration","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}],"id":"click-start-migration"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"A countdown timer in a progress bar indicates how much time remains\nbefore your target cluster is ready to migrate data from your source\ncluster. Wait until the countdown timer and the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Start Cutover","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nbutton are green before proceeding to the next step."}]},{"type":"directive","position":{"start":{"line":5}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/images/migration-complete.png"}],"options":{"figwidth":"700px","checksum":"bfb1eb00c372ce168c291cff9d2af9df8023e7e25d81285d70cb3ce885290a70"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Start Cutover","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}],"id":"click-start-cutover"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Your AWS cluster and your Atlas cluster are now in sync. Atlas will maintain\nthis synchronized state for 72 hours. If you need more time, syncing can be\nextended for another 24 hours."}]}]}]}]},"source":"title: Launch your target replica set in MongoDB Atlas.\nref: launch-target-cluster\nlevel: 4\nstepnum: 1\ncontent: |\n   \n   See :doc:`Create an Atlas Account and Cluster </cloud/atlas>`\n   for instructions.\n\n   .. note::\n\n      Your target cluster must use ``M10`` or larger instance nodes.\n      For development or staging environments, deploy a cluster\n      with ``M10`` or ``M20`` instance nodes. For production workloads,\n      select ``M30`` or larger instance nodes.\n---\ntitle: Open Atlas Live Migration Service.\nref: open-live-migration-service\nlevel: 4\nstepnum: 2\ncontent: |\n\n   On the Overview page of your new target cluster, click the ellipsis\n   (...) button and select :guilabel:`Migrate Data to this Cluster`.\n\n   .. figure:: /images/atlas-deployment.png\n      :figwidth: 700px\n---\ntitle: Click :guilabel:`I'm ready to migrate`.\nref: click-ready-migrate\nlevel: 4\nstepnum: 3\n---\ntitle: Whitelist the Atlas Live Migration Service on your AWS source cluster.\nref: whitelist-migration-service\nlevel: 4\nstepnum: 4\ncontent: |\n\n   At the top of the :guilabel:`Migrate Data to Cluster` modal, Atlas displays\n   the IP address ranges that must be accessible from your source cluster.\n   The address ranges displayed depend on the location of your target\n   cluster and can change, so verify that you enter the address ranges\n   as displayed in the modal.\n\n   AWS EC2 servers are protected from unauthorized network access using\n   `Security Groups <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html>`_.\n   To whitelist new IP address ranges, either create a new Security Group, or\n   modify your existing Security Group to permit inbound network access\n   from the displayed IP address ranges. \n\n   Here is an example security group that grants access to Atlas Live Migration Service.\n\n   .. figure:: /images/aws-inbound-rules.png\n      :figwidth: 760\n\n   If you create a new Security Group, you must associate it with\n   the EC2 instances running your source cluster. In the AWS EC2 console,\n   click the :guilabel:`Actions` dropdown and select :guilabel:`Change\n   Security Group`.\n\n   .. figure:: /images/aws-change-security-group.gif\n      :figwidth: 760\n\n   For additional information on creating or modifying Security Groups, see `Adding Rules to a Security Group\n   <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html#adding-security-group-rule>`_\n   in the AWS EC2 documentation.\n      \n---\ntitle: Validate your AWS credentials with Atlas Live Migration Service.\nref: validate-credentials\nlevel: 4\nstepnum: 5\ncontent: |\n\n   a. On the :guilabel:`Migrate Data to Cluster` modal, enter the hostname\n      and port number of the primary node in your source AWS source cluster\n      that Atlas will use to perform the data migration.\n\n      .. note::\n      \n         The address must be resolvable over the public internet, so do not use\n         the private IP address of the node.\n\n   #. Enter the MongoDB username and password from the AWS source cluster\n      in :guilabel:`Username/Password`.\n\n   #. If SSL is enabled on the source cluster, toggle the :guilabel:`Is SSL enabled`\n      to :guilabel:`Yes` and upload the CA file that your source AWS cluster\n      uses.\n\n   #. Click :guilabel:`Validate`.\n---\ntitle: Click :guilabel:`Start Migration`.\nref: start-migration\nlevel: 4\nstepnum: 6\ncontent: |\n\n   A countdown timer in a progress bar indicates how much time remains\n   before your target cluster is ready to migrate data from your source\n   cluster. Wait until the countdown timer and the :guilabel:`Start Cutover`\n   button are green before proceeding to the next step.\n\n   .. figure:: /images/migration-complete.png\n      :figwidth: 700px\n---\ntitle: Click :guilabel:`Start Cutover`.\nref: start-cutover\nstepnum: 7\ncontent: |\n\n  Your AWS cluster and your Atlas cluster are now in sync. Atlas will maintain\n  this synchronized state for 72 hours. If you need more time, syncing can be\n  extended for another 24 hours.\n\n...\n","static_assets":["885a5c26783aa9b8b89230ca625f552e9f1191152944f108aca26997c6b3b8a1","9a507e12aac7b5baa9dc33d62e101d36bd5afff51f153a88d40751184de92dd3","bfb1eb00c372ce168c291cff9d2af9df8023e7e25d81285d70cb3ce885290a70","3d6c77c9e45a6ac282ffdfd5a6a3e11ea59d68826d7397395ac4fbbd61901f21"]},"includes/live-migrate-support":{"_id":"guides/andrew/master/includes/live-migrate-support","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":1}},"children":[{"type":"heading","position":{"start":{"line":1}},"id":"migration-support","children":[{"type":"text","position":{"start":{"line":1}},"value":"Migration Support"}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"If you have any questions regarding migration beyond what is covered\nin this documentation, or if you encounter an error during migration, please\nfile a support ticket through the "},{"type":"reference","position":{"start":{"line":3}},"refuri":"https://cloud.mongodb.com","children":[{"type":"text","position":{"start":{"line":3}},"value":"Atlas UI"}]},{"type":"target","position":{"start":{"line":3}},"ids":["atlas-ui"],"refuri":"https://cloud.mongodb.com","children":[]},{"type":"text","position":{"start":{"line":3}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"To file a support ticket:"}]},{"type":"list","position":{"start":{"line":9}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Click "},{"type":"role","position":{"start":{"line":9}},"name":"guilabel","label":{"type":"text","value":"Support","position":{"start":{"line":10}}},"children":[]},{"type":"text","position":{"start":{"line":9}},"value":" in the left-hand navigation."}]}]},{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"For "},{"type":"role","position":{"start":{"line":11}},"name":"guilabel","label":{"type":"text","value":"Atlas Issue Category","position":{"start":{"line":12}}},"children":[]},{"type":"text","position":{"start":{"line":11}},"value":", select "},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"Help with live migration"}]},{"type":"text","position":{"start":{"line":11}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"For "},{"type":"role","position":{"start":{"line":13}},"name":"guilabel","label":{"type":"text","value":"Priority","position":{"start":{"line":14}}},"children":[]},{"type":"text","position":{"start":{"line":13}},"value":", select the appropriate priority. For questions,\nplease select "},{"type":"literal","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"Medium Priority"}]},{"type":"text","position":{"start":{"line":13}},"value":". If there was a failure in migration,\nplease select "},{"type":"literal","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"High Priority"}]},{"type":"text","position":{"start":{"line":13}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"For "},{"type":"role","position":{"start":{"line":17}},"name":"guilabel","label":{"type":"text","value":"Request Summary","position":{"start":{"line":18}}},"children":[]},{"type":"text","position":{"start":{"line":17}},"value":", please include "},{"type":"literal","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"Live Migration"}]},{"type":"text","position":{"start":{"line":17}},"value":" in\nyour summary."}]}]},{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"For "},{"type":"role","position":{"start":{"line":20}},"name":"guilabel","label":{"type":"text","value":"More details","position":{"start":{"line":21}}},"children":[]},{"type":"text","position":{"start":{"line":20}},"value":", please include any other relevant details to\nyour question or migration error."}]}]},{"type":"listItem","position":{"start":{"line":9}},"children":[{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"Click the "},{"type":"role","position":{"start":{"line":23}},"name":"guilabel","label":{"type":"text","value":"Request Support","position":{"start":{"line":24}}},"children":[]},{"type":"text","position":{"start":{"line":23}},"value":" button to submit the form."}]}]}]}]}],"position":{"start":{"line":0}}},"source":"Migration Support\n-----------------\n\nIf you have any questions regarding migration beyond what is covered\nin this documentation, or if you encounter an error during migration, please\nfile a support ticket through the `Atlas UI <https://cloud.mongodb.com>`_.\n\nTo file a support ticket:\n\n#. Click :guilabel:`Support` in the left-hand navigation.\n\n#. For :guilabel:`Atlas Issue Category`, select ``Help with live migration``.\n\n#. For :guilabel:`Priority`, select the appropriate priority. For questions,\n   please select ``Medium Priority``. If there was a failure in migration,\n   please select ``High Priority``.\n\n#. For :guilabel:`Request Summary`, please include ``Live Migration`` in\n   your summary.\n\n#. For :guilabel:`More details`, please include any other relevant details to\n   your question or migration error.\n\n#. Click the :guilabel:`Request Support` button to submit the form.\n","static_assets":[]},"cloud/migrate-from-aws-to-atlas":{"_id":"guides/andrew/master/cloud/migrate-from-aws-to-atlas","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"migrate-a-mongodb-replica-set-from-aws-to-mongodb-atlas","children":[{"type":"text","position":{"start":{"line":5}},"value":"Migrate a MongoDB Replica Set from AWS to MongoDB Atlas"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"intermediate"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"directive","position":{"start":{"line":18}},"name":"include","argument":[{"type":"text","position":{"start":{"line":18}},"value":"/includes/live-migration-description.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":18}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":20}},"name":"time","argument":[{"type":"text","position":{"start":{"line":20}},"value":"20"}],"children":[]},{"type":"directive","position":{"start":{"line":22}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":24}},"name":"include","argument":[{"type":"text","position":{"start":{"line":24}},"value":"/includes/steps/migration_pr.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":24}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":27}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":29}},"name":"include","argument":[{"type":"text","position":{"start":{"line":29}},"value":"/includes/steps/migrate-to-atlas.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":29}},"children":[]}]},{"type":"directive","position":{"start":{"line":31}},"name":"include","argument":[{"type":"text","position":{"start":{"line":31}},"value":"/includes/live-migrate-support.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":31}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":33}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":35}},"children":[{"type":"text","position":{"start":{"line":35}},"value":"You created an Atlas cluster, migrated data from your old AWS\nMongoDB cluster, and updated your applications to use the new\nMongoDB Atlas cluster. For more information on the data migration\nprocess, see "},{"type":"reference","position":{"start":{"line":35}},"refuri":"https://docs.atlas.mongodb.com/import/live-import/","children":[{"type":"text","position":{"start":{"line":35}},"value":"Live Migrate Your Replica Set to Atlas"}]},{"type":"target","position":{"start":{"line":35}},"ids":["live-migrate-your-replica-set-to-atlas"],"refuri":"https://docs.atlas.mongodb.com/import/live-import/","children":[]},{"type":"text","position":{"start":{"line":35}},"value":" and\n"},{"type":"reference","position":{"start":{"line":35}},"refuri":"https://docs.atlas.mongodb.com/reference/mongomirror/index.html","children":[{"type":"text","position":{"start":{"line":35}},"value":"mongomirror"}]},{"type":"target","position":{"start":{"line":35}},"ids":["mongomirror"],"refuri":"https://docs.atlas.mongodb.com/reference/mongomirror/index.html","children":[]},{"type":"text","position":{"start":{"line":35}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":42}},"name":"whats_next","argument":[],"children":[{"type":"list","position":{"start":{"line":44}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":44}},"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"role","position":{"start":{"line":44}},"name":"doc","target":"/server/drivers","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Migrate a MongoDB Replica Set from AWS to MongoDB Atlas\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: intermediate\n   product_version: 4.0\n   result_description:\n     .. include:: /includes/live-migration-description.rst\n   \n   time: 20\n   prerequisites:\n     .. include:: /includes/steps/migration_pr.rst\n   check_your_environment:\n   procedure:\n     .. include:: /includes/steps/migrate-to-atlas.rst\n\n     .. include:: /includes/live-migrate-support.rst\n\n   summary:\n     You created an Atlas cluster, migrated data from your old AWS\n     MongoDB cluster, and updated your applications to use the new\n     MongoDB Atlas cluster. For more information on the data migration\n     process, see `Live Migrate Your Replica Set to Atlas \n     <https://docs.atlas.mongodb.com/import/live-import/>`_ and\n     `mongomirror <https://docs.atlas.mongodb.com/reference/mongomirror/index.html>`_.\n   whats_next:\n     - :doc:`/server/drivers`","static_assets":[]},"includes/steps/migrate-compose-pr":{"_id":"guides/andrew/master/includes/steps/migrate-compose-pr","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB Atlas account"}],"id":"mongodb-atlas-account"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you don't have an Atlas account, "},{"type":"role","position":{"start":{"line":0}},"name":"doc","label":{"type":"text","value":"create one","position":{"start":{"line":1}}},"target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" now."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Compose MongoDB deployment"}],"id":"compose-mongodb-deployment"}]}]}]},"source":"title: MongoDB Atlas account\nref: atlas-account\nlevel: 4\nstepnum: 1\ncontent: |\n  If you don't have an Atlas account, :doc:`create one\n  </cloud/atlas>` now.\n---\ntitle: Compose MongoDB deployment\nref: compose-account\nlevel: 4\nstepnum: 2\ncontent: |\n\n...","static_assets":[]},"images/compose-oplog-addon.png#4b009baa7479c78a1d6fe5b593017945ccab98717c19924d9b36479fe8ca2dd5":{},"images/compose-add-ips.png#2a279cd36a2062fa4ecea5b09e48b1d9ccf69e769b0145b6d0143c0163d5e55d":{},"images/compose-hostname.png#cc544a982457ee6b25c5778690394b4ebc41dff0baf8da942138e7df40d669e1":{},"images/compose-cafile.png#684eb5acd1a6607de83340f01e162aa4fe5a51e1d88dcf0a97ed9bfaad9fdb0a":{},"includes/steps/migrate-compose":{"_id":"guides/andrew/master/includes/steps/migrate-compose","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create an Atlas deployment"}],"id":"create-an-atlas-deployment"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you don't already have an Atlas deployment, "},{"type":"role","position":{"start":{"line":0}},"name":"doc","label":{"type":"text","value":"create one","position":{"start":{"line":1}}},"target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" now. You'll need\na "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.atlas.mongodb.com/create-new-cluster/#c-select-the-cluster-tier","children":[{"type":"text","position":{"start":{"line":0}},"value":"cluster tier"}]},{"type":"target","position":{"start":{"line":0}},"ids":["cluster-tier"],"refuri":"https://docs.atlas.mongodb.com/create-new-cluster/#c-select-the-cluster-tier","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nof "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"M10"}]},{"type":"text","position":{"start":{"line":0}},"value":" or larger to perform Live Migration."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Log in to your Compose account"}],"id":"log-in-to-your-compose-account"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Log in to your "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://app.compose.io/session/new","children":[{"type":"text","position":{"start":{"line":0}},"value":"Compose account"}]},{"type":"target","position":{"start":{"line":0}},"ids":["compose-account"],"refuri":"https://app.compose.io/session/new","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nand navigate to the deployment you want to migrate to Atlas."}]},{"type":"directive","position":{"start":{"line":3}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"It will be helpful during the migration process to keep one\nbrowser window open on your Compose deployment console and one\nwindow open on your "},{"type":"reference","position":{"start":{"line":5}},"refuri":"https://cloud.mongodb.com","children":[{"type":"text","position":{"start":{"line":5}},"value":"Atlas console"}]},{"type":"target","position":{"start":{"line":5}},"ids":["atlas-console"],"refuri":"https://cloud.mongodb.com","children":[]},{"type":"text","position":{"start":{"line":5}},"value":"."}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create an oplog user"}],"id":"create-an-oplog-user"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To perform the migration process, you need a database user with\npermission to read the oplog on your "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"admin"}]},{"type":"text","position":{"start":{"line":0}},"value":" database. Click the\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Add-ons","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" link in the left-side navigation. If you don't\nhave the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Oplog Access","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" add-on, add it with the\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Add","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"If you already have the "},{"type":"role","position":{"start":{"line":6}},"name":"guilabel","label":{"type":"text","value":"Oplog Access","position":{"start":{"line":7}}},"children":[]},{"type":"text","position":{"start":{"line":6}},"value":" add-on, click\n"},{"type":"role","position":{"start":{"line":6}},"name":"guilabel","label":{"type":"text","value":"Configure","position":{"start":{"line":7}}},"children":[]},{"type":"text","position":{"start":{"line":6}},"value":" to see the oplog user username and password.\nYou'll need them both in subsequent migration steps."}]},{"type":"directive","position":{"start":{"line":10}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":10}},"value":"/images/compose-oplog-addon.png"}],"options":{"figwidth":"700px","checksum":"4b009baa7479c78a1d6fe5b593017945ccab98717c19924d9b36479fe8ca2dd5"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Begin the Atlas Live Migration process"}],"id":"begin-the-atlas-live-migration-process"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Navigate to your Atlas cluster. Click the ellipsis ("},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"...","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":")\nbutton and select "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Migrate Data to this Cluster","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/images/atlas-deployment.png"}],"options":{"figwidth":"700px","checksum":"885a5c26783aa9b8b89230ca625f552e9f1191152944f108aca26997c6b3b8a1"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Review migration steps"}],"id":"review-migration-steps"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Read through the overview of migration steps in the Live Migration\ndialog window, then click the green "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"I'm ready to migrate","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":"\nbutton."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Add IP address ranges to your Compose deployment whitelist"}],"id":"add-ip-address-ranges-to-your-compose-deployment-whitelist"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"For this step you'll need to have browser tabs open\nwith both the Atlas Live Migration process dialog from the previous\nstep and your Compose deployment dashboard."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"On your Compose deployment dashboard, click the "},{"type":"role","position":{"start":{"line":4}},"name":"guilabel","label":{"type":"text","value":"Security","position":{"start":{"line":5}}},"children":[]},{"type":"text","position":{"start":{"line":4}},"value":"\nlink in the left-side navigation. The "},{"type":"role","position":{"start":{"line":4}},"name":"guilabel","label":{"type":"text","value":"Whitelist TCP/HTTP\nIPs","position":{"start":{"line":5}}},"children":[]},{"type":"text","position":{"start":{"line":4}},"value":" section displays a list of IP address ranges which are allowed\nto access your Compose deployment. Add all four of the IP\naddress ranges which are listed at the top of the Atlas Migration\nprocess dialog window."}]},{"type":"directive","position":{"start":{"line":11}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":11}},"value":"/images/compose-add-ips.png"}],"options":{"figwidth":"700px","checksum":"2a279cd36a2062fa4ecea5b09e48b1d9ccf69e769b0145b6d0143c0163d5e55d"},"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"Your Atlas migration IP address ranges may be different from\nthose shown here."}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Add the hostname and port of your Compose deployment to the Atlas Live Migration dialog"}],"id":"add-the-hostname-and-port-of-your-compose-deployment-to-the-atlas-live-migration-dialog"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"On the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Oplog Access","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" add-on page, you'll find a connection\nstring with a hostname and port for oplog access. Copy them to the Atlas\nLive Migration dialog."}]},{"type":"directive","position":{"start":{"line":4}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/images/compose-hostname.png"}],"options":{"figwidth":"650px","checksum":"cc544a982457ee6b25c5778690394b4ebc41dff0baf8da942138e7df40d669e1"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Enter the oplog user's credentials in the Live Migration dialog"}],"id":"enter-the-oplog-user-s-credentials-in-the-live-migration-dialog"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Enter the username and password for "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"oploguser","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" in the\nAtlas Live Migration dialog window."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Enter your Compose SSL Certificate data"}],"id":"enter-your-compose-ssl-certificate-data"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you don't have SSL enabled on your Compose deployment, skip this\nstep."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"On the "},{"type":"role","position":{"start":{"line":3}},"name":"guilabel","label":{"type":"text","value":"Oplog Access","position":{"start":{"line":4}}},"children":[]},{"type":"text","position":{"start":{"line":3}},"value":" add-on page, you'll find an SSL\ncertificate. Copy it to the CAFile text box on the Atlas Live\nMigration dialog."}]},{"type":"directive","position":{"start":{"line":7}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/images/compose-cafile.png"}],"options":{"figwidth":"664px","checksum":"684eb5acd1a6607de83340f01e162aa4fe5a51e1d88dcf0a97ed9bfaad9fdb0a"},"children":[]},{"type":"directive","position":{"start":{"line":10}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"Copy the entire certificate file, including the\n"},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"BEGIN CERTIFICATE"}]},{"type":"text","position":{"start":{"line":12}},"value":" and "},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"END CERTIFICATE"}]},{"type":"text","position":{"start":{"line":12}},"value":" lines."}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Validate your Live Migration form"}],"id":"validate-your-live-migration-form"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Click the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Validate","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button to check that all your form\nfields are valid and your clusters are ready for migration. When your\nform is validated, click the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Start Migration","position":{"start":{"line":1}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Start migration"}],"id":"start-migration"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"When the migration process begins, the Live Migration dialog window\ncloses and you are returned to the Atlas cluster overview page. A\nprogress bar shows the progess of your migration."}]},{"type":"directive","position":{"start":{"line":4}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/images/migration-complete.png"}],"options":{"figwidth":"700px","checksum":"bfb1eb00c372ce168c291cff9d2af9df8023e7e25d81285d70cb3ce885290a70"},"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Start your cutover"}],"id":"start-your-cutover"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Your Compose deployment and your Atlas cluster are now in sync.\nAtlas will maintain this synchronized state for 72 hours. If you\nneed more time, syncing can be extended for another 24 hours."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"Click the green "},{"type":"role","position":{"start":{"line":4}},"name":"guilabel","label":{"type":"text","value":"Start cutover","position":{"start":{"line":5}}},"children":[]},{"type":"text","position":{"start":{"line":4}},"value":" button and follow the\ninstructions listed in the dialog window."}]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Once the cutover is complete, you can update your\nclient applications to use the new Atlas connection string."}]}]}]}]},"source":"title: Create an Atlas deployment\nref: atlas-deployment\nlevel: 4\nstepnum: 1\ncontent: |\n  If you don't already have an Atlas deployment, :doc:`create one\n  </cloud/atlas>` now. You'll need\n  a `cluster tier\n  <https://docs.atlas.mongodb.com/create-new-cluster/#c-select-the-cluster-tier>`_\n  of ``M10`` or larger to perform Live Migration.\n---\ntitle: Log in to your Compose account\nref: login-compose\nlevel: 4\nstepnum: 2\ncontent: |\n  Log in to your `Compose account <https://app.compose.io/session/new>`_\n  and navigate to the deployment you want to migrate to Atlas.\n\n  .. note::\n\n     It will be helpful during the migration process to keep one\n     browser window open on your Compose deployment console and one\n     window open on your `Atlas console <https://cloud.mongodb.com>`_.\n---\ntitle: Create an oplog user\nref: create-oplog-reader\nlevel: 4\nstepnum: 3\ncontent: |\n  To perform the migration process, you need a database user with\n  permission to read the oplog on your ``admin`` database. Click the\n  :guilabel:`Add-ons` link in the left-side navigation. If you don't\n  have the :guilabel:`Oplog Access` add-on, add it with the\n  :guilabel:`Add` button.\n\n  If you already have the :guilabel:`Oplog Access` add-on, click\n  :guilabel:`Configure` to see the oplog user username and password.\n  You'll need them both in subsequent migration steps.\n\n  .. figure:: /images/compose-oplog-addon.png\n     :figwidth: 700px  \n---\ntitle: Begin the Atlas Live Migration process\nref: begin-live-migration\nlevel: 4\nstepnum: 4\ncontent: |\n  Navigate to your Atlas cluster. Click the ellipsis (:guilabel:`...`)\n  button and select :guilabel:`Migrate Data to this Cluster`.\n\n  .. figure:: /images/atlas-deployment.png\n     :figwidth: 700px\n---\ntitle: Review migration steps\nref: review-steps\nlevel: 4\nstepnum: 5\ncontent: |\n  Read through the overview of migration steps in the Live Migration\n  dialog window, then click the green :guilabel:`I'm ready to migrate`\n  button.\n---\ntitle: Add IP address ranges to your Compose deployment whitelist\nref: add-ip-ranges\nlevel: 4\nstepnum: 6\ncontent: |\n  For this step you'll need to have browser tabs open\n  with both the Atlas Live Migration process dialog from the previous\n  step and your Compose deployment dashboard.\n\n  On your Compose deployment dashboard, click the :guilabel:`Security`\n  link in the left-side navigation. The :guilabel:`Whitelist TCP/HTTP\n  IPs` section displays a list of IP address ranges which are allowed\n  to access your Compose deployment. Add all four of the IP\n  address ranges which are listed at the top of the Atlas Migration\n  process dialog window. \n\n  .. figure:: /images/compose-add-ips.png\n     :figwidth: 700px\n\n  .. note::\n\n     Your Atlas migration IP address ranges may be different from\n     those shown here.\n---\ntitle: Add the hostname and port of your Compose deployment to the\n       Atlas Live Migration dialog\nref: add-hostname-port\nlevel: 4\nstepnum: 7\ncontent: |\n  On the :guilabel:`Oplog Access` add-on page, you'll find a connection\n  string with a hostname and port for oplog access. Copy them to the Atlas\n  Live Migration dialog.\n\n  .. figure:: /images/compose-hostname.png\n     :figwidth: 650px\n---\ntitle: Enter the oplog user's credentials in the Live Migration dialog\nref: \nlevel: 4\nstepnum: 8\ncontent: |\n  Enter the username and password for :guilabel:`oploguser` in the\n  Atlas Live Migration dialog window.\n---\ntitle: Enter your Compose SSL Certificate data \nref: enter-cafile\nlevel: 4\nstepnum: 9\ncontent: |\n  If you don't have SSL enabled on your Compose deployment, skip this\n  step.\n\n  On the :guilabel:`Oplog Access` add-on page, you'll find an SSL\n  certificate. Copy it to the CAFile text box on the Atlas Live\n  Migration dialog.\n\n  .. figure:: /images/compose-cafile.png\n     :figwidth: 664px\n\n  .. note::\n\n     Copy the entire certificate file, including the\n     ``BEGIN CERTIFICATE`` and ``END CERTIFICATE`` lines.\n---\ntitle: Validate your Live Migration form\nref: validate-form\nlevel: 4\nstepnum: 10\ncontent: |\n  Click the :guilabel:`Validate` button to check that all your form\n  fields are valid and your clusters are ready for migration. When your\n  form is validated, click the :guilabel:`Start Migration` button.\n---\ntitle: Start migration\nref: start-migration\nlevel: 4\nstepnum: 11\ncontent: |\n  When the migration process begins, the Live Migration dialog window\n  closes and you are returned to the Atlas cluster overview page. A\n  progress bar shows the progess of your migration.\n\n  .. figure:: /images/migration-complete.png\n     :figwidth: 700px\n---\ntitle: Start your cutover\nref: start-cutover\nlevel: 4\nstepnum: 12\ncontent: |\n  Your Compose deployment and your Atlas cluster are now in sync.\n  Atlas will maintain this synchronized state for 72 hours. If you\n  need more time, syncing can be extended for another 24 hours.\n\n  Click the green :guilabel:`Start cutover` button and follow the\n  instructions listed in the dialog window.\n\n  Once the cutover is complete, you can update your\n  client applications to use the new Atlas connection string.\n\n...","static_assets":["684eb5acd1a6607de83340f01e162aa4fe5a51e1d88dcf0a97ed9bfaad9fdb0a","cc544a982457ee6b25c5778690394b4ebc41dff0baf8da942138e7df40d669e1","bfb1eb00c372ce168c291cff9d2af9df8023e7e25d81285d70cb3ce885290a70","2a279cd36a2062fa4ecea5b09e48b1d9ccf69e769b0145b6d0143c0163d5e55d","885a5c26783aa9b8b89230ca625f552e9f1191152944f108aca26997c6b3b8a1","4b009baa7479c78a1d6fe5b593017945ccab98717c19924d9b36479fe8ca2dd5"]},"cloud/migrate-from-compose":{"_id":"guides/andrew/master/cloud/migrate-from-compose","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"migrate-from-compose-to-mongodb-atlas","children":[{"type":"text","position":{"start":{"line":5}},"value":"Migrate from Compose to MongoDB Atlas"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"directive","position":{"start":{"line":18}},"name":"include","argument":[{"type":"text","position":{"start":{"line":18}},"value":"/includes/live-migration-description.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":18}},"children":[]}]},{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"This guide will walk you through how to use the Atlas Live Migration\nprocess to migrate data from mLab to MongoDB Atlas."}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"time","argument":[{"type":"text","position":{"start":{"line":23}},"value":"20"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":27}},"name":"include","argument":[{"type":"text","position":{"start":{"line":27}},"value":"/includes/steps/migrate-compose-pr.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":27}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":32}},"name":"include","argument":[{"type":"text","position":{"start":{"line":32}},"value":"/includes/steps/migrate-compose.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":32}},"children":[]}]},{"type":"directive","position":{"start":{"line":34}},"name":"include","argument":[{"type":"text","position":{"start":{"line":34}},"value":"/includes/live-migrate-support.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":34}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"You created an Atlas cluster, migrated data from your old Compose cluster, and\nupdated your applications to use the new Atlas Cluster. Congratulations and\nwelcome to MongoDB Atlas!"}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Migrate from Compose to MongoDB Atlas\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   result_description:\n     .. include:: /includes/live-migration-description.rst\n\n     This guide will walk you through how to use the Atlas Live Migration\n     process to migrate data from mLab to MongoDB Atlas.\n\n   time: 20\n   prerequisites:\n     .. include:: /includes/steps/migrate-compose-pr.rst\n\n   check_your_environment:\n\n   procedure:\n     .. include:: /includes/steps/migrate-compose.rst\n  \n     .. include:: /includes/live-migrate-support.rst\n\n   summary:\n     You created an Atlas cluster, migrated data from your old Compose cluster, and\n     updated your applications to use the new Atlas Cluster. Congratulations and\n     welcome to MongoDB Atlas!\n   whats_next:","static_assets":[]},"includes/prereqs_drivers_install":{"_id":"guides/andrew/master/includes/prereqs_drivers_install","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you are using MongoDB in the Cloud (Atlas), you will need to:"}]},{"type":"block_quote","position":{"start":{"line":0}},"children":[{"type":"list","position":{"start":{"line":2}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"role","position":{"start":{"line":2}},"name":"doc","label":{"type":"text","value":"Create an Atlas Account and Cluster","position":{"start":{"line":3}}},"target":"/cloud/atlas","children":[]}]}]},{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"role","position":{"start":{"line":3}},"name":"doc","label":{"type":"text","value":"Set Up Connectivity to Atlas","position":{"start":{"line":4}}},"target":"/cloud/connectionstring","children":[]}]}]}]}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Or, if you plan on using a local instance of MongoDB, you will need to:"}]},{"type":"block_quote","position":{"start":{"line":0}},"children":[{"type":"list","position":{"start":{"line":7}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":7}},"children":[{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"role","position":{"start":{"line":7}},"name":"doc","label":{"type":"text","value":"Install MongoDB","position":{"start":{"line":8}}},"target":"/server/install","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" and start up an instance to which you will connect."}]}]}]}]}],"position":{"start":{"line":0}}},"source":"If you are using MongoDB in the Cloud (Atlas), you will need to:\n\n  - :doc:`Create an Atlas Account and Cluster</cloud/atlas>`\n  - :doc:`Set Up Connectivity to Atlas </cloud/connectionstring>` \n\nOr, if you plan on using a local instance of MongoDB, you will need to:\n  \n  - :doc:`Install MongoDB </server/install>` and start up an instance to which you will connect.\n","static_assets":[]},"includes/check_for_drivers_install":{"_id":"guides/andrew/master/includes/check_for_drivers_install","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You will need to ensure that your MongoDB instance is running and accessible."}]},{"type":"directive","position":{"start":{"line":2}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"cloud"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check that you have an Atlas account and have deployed a MongoDB database\ncluster. See "},{"type":"role","position":{"start":{"line":0}},"name":"doc","target":"/cloud/atlas","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" for information on how to\nlogin and create a cluster in Atlas."}]}]},{"type":"directive","position":{"start":{"line":13}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":13}},"value":"local"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":74}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":74}},"value":"windows"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure that your MongoDB instance is running on Windows,\nrun the following command from the Windows command prompt:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"bat","copyable":true,"value":"tasklist /FI \"IMAGENAME eq mongod.exe\""},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","label":{"type":"text","value":"mongod.exe","position":{"start":{"line":63}}},"target":"bin.mongod.exe","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will\nsee something like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"bat","copyable":true,"value":"Image Name                     PID Session Name        Session#    Mem Usage\n========================= ======== ================ =========== ============\nmongod.exe                    8716 Console                    1      9,508 K"}]},{"type":"directive","position":{"start":{"line":92}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":92}},"value":"linux"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure your MongoDB instance is running on Linux, run the\nfollowing command from your terminal:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"ps -e| grep 'mongod'"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will see\nsomething like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"sh","copyable":true,"value":"89780 ttys026    0:53.48 ./mongod"}]},{"type":"directive","position":{"start":{"line":109}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":109}},"value":"macos"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To make sure your MongoDB instance is running on Mac, run the\nfollowing command from your terminal:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"ps -e | grep 'mongod'"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"If a "},{"type":"role","position":{"start":{"line":7}},"name":"binary","target":"~bin.mongod","children":[]},{"type":"text","position":{"start":{"line":7}},"value":" instance is running, you will see\nsomething like:"}]},{"type":"code","position":{"start":{"line":10}},"lang":"sh","copyable":true,"value":"89780 ttys026    0:53.48 ./mongod"}]}]}]}]}],"position":{"start":{"line":0}}},"source":"You will need to ensure that your MongoDB instance is running and accessible.\n\n.. tabs-cloud::\n\n   hidden: true\n\n   tabs:\n     - id: cloud\n       content: |\n         \n         Check that you have an Atlas account and have deployed a MongoDB database\n         cluster. See :doc:`/cloud/atlas` for information on how to\n         login and create a cluster in Atlas.\n\n     - id: local\n       content: |\n\n         .. tabs-platforms::\n\n            tabs:\n\n              - id: windows\n                content: |\n                  To make sure that your MongoDB instance is running on Windows,\n                  run the following command from the Windows command prompt:\n                  \n                  .. code-block:: bat\n                  \n                     tasklist /FI \"IMAGENAME eq mongod.exe\"\n                  \n                  If a :binary:`mongod.exe <bin.mongod.exe>` instance is running, you will\n                  see something like:\n                  \n                  .. code-block:: bat\n                  \n                     Image Name                     PID Session Name        Session#    Mem Usage\n                     ========================= ======== ================ =========== ============\n                     mongod.exe                    8716 Console                    1      9,508 K\n\n              - id: linux\n                content: |\n                \n                  To make sure your MongoDB instance is running on Linux, run the\n                  following command from your terminal:\n                    \n                  .. code-block:: sh\n\n                     ps -e| grep 'mongod'\n\n                  If a :binary:`~bin.mongod` instance is running, you will see\n                  something like:\n\n                  .. code-block:: sh\n\n                     89780 ttys026    0:53.48 ./mongod\n\n              - id: macos\n                content: |\n                \n                  To make sure your MongoDB instance is running on Mac, run the\n                  following command from your terminal:\n                    \n                  .. code-block:: sh\n\n                     ps -e | grep 'mongod'\n\n                  If a :binary:`~bin.mongod` instance is running, you will see\n                  something like:\n\n                  .. code-block:: sh\n\n                     89780 ttys026    0:53.48 ./mongod\n","static_assets":[]},"bin":{},"images/importstring.png#809bb2962499ae0e9b75fe59b8fee4f9ebce95f2e9929c90b3680a72c84caeb1":{},"mongoimport --db test --collection inventory \\\n          --authenticationDatabase admin --username <user> --password <password> \\\n          --drop --file ~/Downloads/inventory.crud.json":{},"mongoimport --db test --collection inventory \\\n       --authenticationDatabase admin --username <user> --password <password> \\\n       --drop --file ~/Downloads/inventory.crud.json":{},"includes/steps/import":{"_id":"guides/andrew/master/includes/steps/import","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the sample data."}],"id":"download-the-sample-data"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You will be using a product inventory database for the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"CRUD Getting\nStarted"}]},{"type":"text","position":{"start":{"line":0}},"value":" guides. Download the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/inventory.crud.json","children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory.crud.json file"}]},{"type":"target","position":{"start":{"line":0}},"ids":["inventory-crud-json-file"],"refuri":"https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/inventory.crud.json","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" from GitHub."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Save the downloaded file to a file named\n"},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"inventory.crud.json"}]},{"type":"text","position":{"start":{"line":5}},"value":" in your downloads folder. If you wish to save the\nfile somewhere else, you can change the value of the\n"},{"type":"role","position":{"start":{"line":5}},"name":"option","label":{"type":"text","value":"--file","position":{"start":{"line":6}}},"target":"mongoimport.--file","children":[]},{"type":"text","position":{"start":{"line":5}},"value":" option to match your file's location\nand name."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Import the sample data into the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection."}],"id":"import-the-sample-data-into-the-inventory-collection"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"From your system shell or command prompt, use the\n"},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongoimport","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" tool to insert the sample documents into\nthe "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database.\n"},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongoimport","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" is packaged with MongoDB and will be in the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"/bin"}]},{"type":"text","position":{"start":{"line":0}},"value":" directory of the MongoDB repository."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"By default, "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"mongoimport"}]},{"type":"text","position":{"start":{"line":6}},"value":" will import data into an instance of\nMongoDB on "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"localhost"}]},{"type":"text","position":{"start":{"line":6}},"value":", port "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"27017"}]},{"type":"text","position":{"start":{"line":6}},"value":". To import data into a\nMongoDB instance running on a different host or port, specify the\nhostname or port by including the "},{"type":"role","position":{"start":{"line":6}},"name":"option","label":{"type":"text","value":"--host","position":{"start":{"line":7}}},"target":"mongoimport.--host","children":[]},{"type":"text","position":{"start":{"line":6}},"value":" and\n"},{"type":"role","position":{"start":{"line":6}},"name":"option","label":{"type":"text","value":"--port","position":{"start":{"line":7}}},"target":"mongoimport.--port","children":[]},{"type":"text","position":{"start":{"line":6}},"value":" options."}]},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"Use the "},{"type":"role","position":{"start":{"line":12}},"name":"option","label":{"type":"text","value":"--drop","position":{"start":{"line":13}}},"target":"mongoimport.--drop","children":[]},{"type":"text","position":{"start":{"line":12}},"value":" option to drop the\ncollection if it already exists. This ensures that the collection will\nonly contain the data you are importing."}]},{"type":"directive","position":{"start":{"line":16}},"name":"tip","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"For non-Atlas instances, replace the "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"<user>"}]},{"type":"text","position":{"start":{"line":18}},"value":" and "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"<password>"}]},{"type":"text","position":{"start":{"line":18}},"value":"\nplaceholders in the example with your MongoDB username and\npassword. For all instances, update the "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"--file"}]},{"type":"text","position":{"start":{"line":18}},"value":" path to point to\nwherever you have saved your copy of the product inventory\ndatabase."}]}]},{"type":"directive","position":{"start":{"line":24}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":29}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":29}},"value":"cloud"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Go to "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://cloud.mongodb.com/user#/atlas/login","children":[{"type":"text","position":{"start":{"line":0}},"value":"cloud.mongodb.com"}]},{"type":"target","position":{"start":{"line":0}},"ids":["cloud-mongodb-com"],"refuri":"https://cloud.mongodb.com/user#/atlas/login","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" to login\nto your user account."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"In the cluster panel, click the \"...\" button as pictured below."}]},{"type":"directive","position":{"start":{"line":6}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/images/connect_panel.png"}],"options":{"figwidth":"200px","checksum":"38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1"},"children":[]},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Select "},{"type":"literal","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Command Line Tools"}]},{"type":"text","position":{"start":{"line":9}},"value":" from the menu."}]},{"type":"paragraph","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"Under the "},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"Import and Export Tools"}]},{"type":"text","position":{"start":{"line":11}},"value":" header, you will see\ntwo copyable command line strings. Copy the one for\n"},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"mongoimport"}]},{"type":"text","position":{"start":{"line":11}},"value":"."}]},{"type":"directive","position":{"start":{"line":15}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":15}},"value":"/images/importstring.png"}],"options":{"figwidth":"700px","checksum":"809bb2962499ae0e9b75fe59b8fee4f9ebce95f2e9929c90b3680a72c84caeb1"},"children":[]},{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"You can use this command to run "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"mongoimport"}]},{"type":"text","position":{"start":{"line":18}},"value":" by replacing\nthe <DATABASE>, <PASSWORD>, <FILETYPE>, <COLLECTION> and\n<FILE> fields with the appropriate values."}]},{"type":"paragraph","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"In this case, <DATABASE> is "},{"type":"literal","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"test"}]},{"type":"text","position":{"start":{"line":22}},"value":", <FILETYPE> is\n"},{"type":"literal","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"JSON"}]},{"type":"text","position":{"start":{"line":22}},"value":", <FILE> is "},{"type":"literal","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"inventory.crud.json"}]},{"type":"text","position":{"start":{"line":22}},"value":" (preceded with\nqualified path), and <COLLECTION> is "},{"type":"literal","position":{"start":{"line":22}},"children":[{"type":"text","position":{"start":{"line":22}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":22}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":58}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":58}},"value":"local"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":71}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":71}},"value":"windows"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"bat","copyable":true,"value":"mongoimport --db test --collection inventory ^\n          --authenticationDatabase admin --username <user> --password <password> ^\n          --drop --file ~\\downloads\\inventory.crud.json"}]},{"type":"directive","position":{"start":{"line":79}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":79}},"value":"linux"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"mongoimport --db test --collection inventory \\\n          --authenticationDatabase admin --username <user> --password <password> \\\n          --drop --file ~/Downloads/inventory.crud.json"}]},{"type":"directive","position":{"start":{"line":86}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":86}},"value":"macos"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"sh","copyable":true,"value":"mongoimport --db test --collection inventory \\\n       --authenticationDatabase admin --username <user> --password <password> \\\n       --drop --file ~/Downloads/inventory.crud.json"}]}]}]}]}]}]}]},"source":"title: Download the sample data.\nref: bind_db\nlevel: 4\nstepnum: 1\ncontent: |\n\n\n  You will be using a product inventory database for the ``CRUD Getting\n  Started`` guides. Download the `inventory.crud.json file\n  <https://raw.githubusercontent.com/mongodb/docs-assets/primer-\n  dataset/inventory.crud.json>`_ from GitHub.\n\n  Save the downloaded file to a file named\n  ``inventory.crud.json`` in your downloads folder. If you wish to save the\n  file somewhere else, you can change the value of the\n  :option:`--file <mongoimport.--file>` option to match your file's location\n  and name.\n\n---\ntitle: Import the sample data into the ``inventory`` collection.\nref: access-mongos\nlevel: 4\nstepnum: 2\ncontent: |\n\n  From your system shell or command prompt, use the\n  :binary:`~bin.mongoimport` tool to insert the sample documents into\n  the ``inventory`` collection in the ``test`` database.\n  :binary:`~bin.mongoimport` is packaged with MongoDB and will be in the\n  ``/bin`` directory of the MongoDB repository.\n\n  By default, ``mongoimport`` will import data into an instance of\n  MongoDB on ``localhost``, port ``27017``. To import data into a\n  MongoDB instance running on a different host or port, specify the\n  hostname or port by including the :option:`--host <mongoimport.--host>` and\n  :option:`--port <mongoimport.--port>` options.\n\n  Use the :option:`--drop <mongoimport.--drop>` option to drop the\n  collection if it already exists. This ensures that the collection will\n  only contain the data you are importing.\n\n  .. tip:: \n     \n     For non-Atlas instances, replace the ``<user>`` and ``<password>``\n     placeholders in the example with your MongoDB username and\n     password. For all instances, update the ``--file`` path to point to\n     wherever you have saved your copy of the product inventory\n     database.\n \n  .. tabs-cloud::\n\n     hidden: true\n\n     tabs:\n\n       - id: cloud\n         content: |\n   \n           Go to `cloud.mongodb.com\n           <https://cloud.mongodb.com/user#/atlas/login>`_ to login\n           to your user account.\n\n           In the cluster panel, click the \"...\" button as pictured below.\n  \n           .. figure:: /images/connect_panel.png\n              :figwidth: 200px\n  \n           Select ``Command Line Tools`` from the menu.\n  \n           Under the ``Import and Export Tools`` header, you will see\n           two copyable command line strings. Copy the one for\n           ``mongoimport``.\n  \n           .. figure:: /images/importstring.png\n              :figwidth: 700px\n  \n           You can use this command to run ``mongoimport`` by replacing\n           the <DATABASE>, <PASSWORD>, <FILETYPE>, <COLLECTION> and\n           <FILE> fields with the appropriate values.\n  \n           In this case, <DATABASE> is ``test``, <FILETYPE> is\n           ``JSON``, <FILE> is ``inventory.crud.json`` (preceded with\n           qualified path), and <COLLECTION> is ``inventory``.\n        \n       - id: local\n         content: |\n\n           .. tabs-platforms::\n\n              hidden: true\n\n              tabs:\n\n                - id: windows\n                  content: |\n                    .. code-block:: bat\n\n                       mongoimport --db test --collection inventory ^\n                                 --authenticationDatabase admin --username <user> --password <password> ^\n                                 --drop --file ~\\downloads\\inventory.crud.json\n\n                - id: linux\n                  content: |\n                    .. code-block:: sh\n\n                       mongoimport --db test --collection inventory \\\n                                 --authenticationDatabase admin --username <user> --password <password> \\\n                                 --drop --file ~/Downloads/inventory.crud.json\n                - id: macos\n                  content: |\n\n                    .. code-block:: sh\n\n                       mongoimport --db test --collection inventory \\\n                              --authenticationDatabase admin --username <user> --password <password> \\\n                              --drop --file ~/Downloads/inventory.crud.json\n\n...\n","static_assets":["38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1","809bb2962499ae0e9b75fe59b8fee4f9ebce95f2e9929c90b3680a72c84caeb1"]},"server/import":{"_id":"guides/andrew/master/server/import","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"import-data-into-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Import Data into MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"In this guide, you will use the\n"},{"type":"role","position":{"start":{"line":18}},"name":"binary","target":"~bin.mongoimport","children":[]},{"type":"text","position":{"start":{"line":18}},"value":" tool distributed with MongoDB\nto bulk import data into your MongoDB instance."}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"time","argument":[{"type":"text","position":{"start":{"line":22}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":26}},"name":"include","argument":[{"type":"text","position":{"start":{"line":26}},"value":"/includes/prereqs_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":26}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":28}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":30}},"name":"include","argument":[{"type":"text","position":{"start":{"line":30}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":30}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":32}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":34}},"name":"include","argument":[{"type":"text","position":{"start":{"line":34}},"value":"/includes/steps/import.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":34}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"If you have successfully completed this guide, you have imported\nyour first MongoDB data. In the next guide, you will retrieve\nthe documents that you just imported."}]}]},{"type":"directive","position":{"start":{"line":42}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"In this guide, you will retrieve all of the documents in a\ncollection in your MongoDB database."}]},{"type":"list","position":{"start":{"line":47}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":47}},"children":[{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"role","position":{"start":{"line":47}},"name":"doc","label":{"type":"text","value":"Read Data From MongoDB","position":{"start":{"line":43}}},"target":"/server/read_queries","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":49}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"text","position":{"start":{"line":51}},"value":"For CRUD guides:"}]},{"type":"list","position":{"start":{"line":53}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":53}},"children":[{"type":"role","position":{"start":{"line":53}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"role","position":{"start":{"line":54}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":55}},"children":[{"type":"role","position":{"start":{"line":55}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":56}},"children":[{"type":"role","position":{"start":{"line":56}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":57}},"children":[{"type":"role","position":{"start":{"line":57}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":53}},"children":[{"type":"paragraph","position":{"start":{"line":58}},"children":[{"type":"role","position":{"start":{"line":58}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Import Data into MongoDB\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   result_description:\n     In this guide, you will use the\n     :binary:`~bin.mongoimport` tool distributed with MongoDB\n     to bulk import data into your MongoDB instance.\n   time: 15\n   prerequisites:\n     .. include:: /includes/prereqs_drivers_install.rst\n   check_your_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n     .. include:: /includes/steps/import.rst\n   summary:\n     If you have successfully completed this guide, you have imported\n     your first MongoDB data. In the next guide, you will retrieve\n     the documents that you just imported.\n   whats_next:\n     In this guide, you will retrieve all of the documents in a\n     collection in your MongoDB database.\n     \n     - :doc:`Read Data From MongoDB </server/read_queries>`\n     \n   seealso:\n     For CRUD guides:\n\n     - :doc:`/server/insert`\n     - :doc:`/server/read`\n     - :doc:`/server/read_queries`\n     - :doc:`/server/read_operators`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"images/whitelistpanel.png#8a6b64e8575e620449363a0e2877e692fa6ba6c45ca2b33954768c33bdd544d6":{},"includes/mongo_shell_install":{"_id":"guides/andrew/master/includes/mongo_shell_install","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":4}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":4}},"value":"cloud"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you do not already have a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":0}},"value":" shell, you can download\njust the shell by logging into Atlas. For your cluster, click\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":4}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/images/connect_panel.png"}],"options":{"figwidth":"200px","checksum":"38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1"},"children":[]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Under "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Check the IP Whitelist"}]},{"type":"text","position":{"start":{"line":7}},"value":", add the IP address of the\nclient you wish to have connecting to Atlas. Then click the\n"},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Connect with the Mongo Shell"}]},{"type":"text","position":{"start":{"line":7}},"value":". Follow the instructions in\nthe dialog to download and install the shell."}]},{"type":"directive","position":{"start":{"line":12}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":12}},"value":"/images/whitelistpanel.png"}],"options":{"figwidth":"600px","checksum":"8a6b64e8575e620449363a0e2877e692fa6ba6c45ca2b33954768c33bdd544d6"},"children":[]}]},{"type":"directive","position":{"start":{"line":22}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":22}},"value":"local"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/download-shell-tabs.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-cloud::\n\n   hidden: true\n\n   tabs:\n     - id: cloud\n       content: |\n       \n         If you do not already have a ``mongo`` shell, you can download\n         just the shell by logging into Atlas. For your cluster, click\n         ``Connect``.\n\n         .. figure:: /images/connect_panel.png\n            :figwidth: 200px\n            \n         Under ``Check the IP Whitelist``, add the IP address of the\n         client you wish to have connecting to Atlas. Then click the\n         ``Connect with the Mongo Shell``. Follow the instructions in\n         the dialog to download and install the shell.\n\n         .. figure:: /images/whitelistpanel.png\n            :figwidth: 600px\n\n     - id: local\n       content: |\n\n         .. include:: /includes/download-shell-tabs.rst\n   ","static_assets":["8a6b64e8575e620449363a0e2877e692fa6ba6c45ca2b33954768c33bdd544d6","38c915671bb134fa079aaf80b9901f47e0e4e2942be7ad0a1a953701c325ada1"]},"go get github.com/mongodb/mongo-go-driver":{},"package github.com/mongodb/mongo-go-driver: no Go files in (...).":{}," package manager to\ninstall the driver,\nyou can install the main mongo package as well as the bson and\nmongo/options package using this command:":{},"dep ensure --add github.com/mongodb/mongo-go-driver/mongo \\\ngithub.com/mongodb/mongo-go-driver/bson \\\ngithub.com/mongodb/mongo-go-driver/mongo/options":{},"To install the C#/.NET driver, see the ":{},"includes/drivers_install":{"_id":"guides/andrew/master/includes/drivers_install","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":0}},"value":" shell is packaged with the MongoDB Server\nCommunity and Enterprise distributions, and is also available\nfor users of Atlas as a client-only download."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"MongoDB binaries are located in a directory that starts with\n\"mongodb-\". You should see a file named "},{"type":"literal","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":4}},"value":", which is\nthe shell executable."}]},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"If you do not have "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":8}},"value":" shell installed, follow the\ninstall directions for your environment."}]},{"type":"directive","position":{"start":{"line":11}},"name":"include","argument":[{"type":"text","position":{"start":{"line":11}},"value":"/includes/mongo_shell_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":11}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":19}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":19}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install Compass, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://docs.mongodb.com/compass/current/install/","children":[{"type":"text","position":{"start":{"line":0}},"value":"Compass installation instructions"}]}]}]},{"type":"directive","position":{"start":{"line":25}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":25}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The MongoDB Go driver can be installed using "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"go get"}]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":2}},"lang":"sh","copyable":true,"value":"go get github.com/mongodb/mongo-go-driver"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"The output of this may look like a warning stating something like:"}]},{"type":"code","position":{"start":{"line":8}},"lang":"none","copyable":true,"value":"package github.com/mongodb/mongo-go-driver: no Go files in (...)."},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"This is expected output."}]},{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"Alternatively if you are using the "},{"type":"literal","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"dep"}]},{"type":"text","position":{"start":{"line":14}},"value":" package manager to\ninstall the driver,\nyou can install the main mongo package as well as the bson and\nmongo/options package using this command:"}]},{"type":"code","position":{"start":{"line":19}},"lang":"sh","copyable":true,"value":"dep ensure --add github.com/mongodb/mongo-go-driver/mongo \\\ngithub.com/mongodb/mongo-go-driver/bson \\\ngithub.com/mongodb/mongo-go-driver/mongo/options"}]},{"type":"directive","position":{"start":{"line":53}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":53}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install Pymongo, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"http://api.mongodb.com/python/current/installation.html","children":[{"type":"text","position":{"start":{"line":0}},"value":"Pymongo  documentation"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":58}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":58}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install Motor, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://motor.readthedocs.io/en/stable/installation.html","children":[{"type":"text","position":{"start":{"line":0}},"value":"Motor documentation"}]}]}]},{"type":"directive","position":{"start":{"line":63}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":63}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install the Java driver, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://mongodb.github.io/mongo-java-driver/","children":[{"type":"text","position":{"start":{"line":0}},"value":"Java Driver documentation"}]}]}]},{"type":"directive","position":{"start":{"line":68}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":68}},"value":"nodejs"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install the node.js driver, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"http://mongodb.github.io/node-mongodb-native/","children":[{"type":"text","position":{"start":{"line":0}},"value":"Node.js Driver documentation"}]}]}]},{"type":"directive","position":{"start":{"line":73}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":73}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To install the C#/.NET driver, see the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"http://mongodb.github.io/mongo-csharp-driver/","children":[{"type":"text","position":{"start":{"line":0}},"value":"C# Driver documentation"}]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         The ``mongo`` shell is packaged with the MongoDB Server\n         Community and Enterprise distributions, and is also available\n         for users of Atlas as a client-only download.\n\n         MongoDB binaries are located in a directory that starts with\n         \"mongodb-\". You should see a file named ``mongo``, which is\n         the shell executable.\n\n         If you do not have ``mongo`` shell installed, follow the\n         install directions for your environment.\n\n         .. include:: /includes/mongo_shell_install.rst\n\n\n     - id: compass\n       content: |\n\t\n         To install Compass, see the `Compass installation instructions\n         <https://docs.mongodb.com/compass/current/install/>`__\n     \n     - id: go\n       content: |\n         \n         The MongoDB Go driver can be installed using ``go get``:\n\n         .. code-block:: sh\n\n            go get github.com/mongodb/mongo-go-driver\n\n         The output of this may look like a warning stating something like:\n\n         .. code-block:: none \n\n            package github.com/mongodb/mongo-go-driver: no Go files in (...).\n         \n         This is expected output.\n\n         Alternatively if you are using the ``dep`` package manager to \n         install the driver,\n         you can install the main mongo package as well as the bson and \n         mongo/options package using this command:\n\n         .. code-block:: sh\n\n            dep ensure --add github.com/mongodb/mongo-go-driver/mongo \\\n            github.com/mongodb/mongo-go-driver/bson \\\n            github.com/mongodb/mongo-go-driver/mongo/options\n\n     - id: python\n       content: |\n         To install Pymongo, see the `Pymongo  documentation\n         <http://api.mongodb.com/python/current/installation.html>`__.\n\n     - id: motor\n       content: |\n         To install Motor, see the `Motor documentation\n         <https://motor.readthedocs.io/en/stable/installation.html>`__\n\n     - id: java-sync\n       content: |\n         To install the Java driver, see the `Java Driver documentation\n         <https://mongodb.github.io/mongo-java-driver/>`__\n\n     - id: nodejs\n       content: |\n          To install the node.js driver, see the `Node.js Driver documentation\n          <http://mongodb.github.io/node-mongodb-native/>`__\n\n     - id: csharp\n       content: |\n         To install the C#/.NET driver, see the `C# Driver documentation\n         <http://mongodb.github.io/mongo-csharp-driver/>`__\n\n     # - id: php\n     #   content: |\n     #     Here's how you `install the PHP library\n     #     <https://docs.mongodb.com/php-library/current/tutorial/install-php-library/>`__\n     #\n     # - id: perl\n     #   content: |\n     #     Here's how you `install the perl driver\n     #     <https://github.com/mongodb/mongo-perl-driver/blob/master/INSTALL.md>`__\n     #\n     # - id: ruby\n     #   content: |\n     #     Here's how you `install the Ruby driver\n     #     <https://docs.mongodb.com/ruby-driver/master/installation/>`__\n     #\n     # - id: scala\n     #   content: |\n     #     Here's how you `install the Scala driver\n     #     <http://mongodb.github.io/mongo-scala-driver/2.1/getting-started/installation-guide/>`__\n     #\n","static_assets":[]},"includes/drivers_api_uri":{"_id":"guides/andrew/master/includes/drivers_api_uri","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[]},{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"tip","argument":[{"type":"text","position":{"start":{"line":0}},"value":"If you are using Compass, skip this step."}],"children":[]}]},{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"python"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":16}},"value":"motor"}],"children":[]},{"type":"directive","position":{"start":{"line":20}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":20}},"value":"java-sync"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":24}},"value":"nodejs"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"csharp"}],"children":[]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n\n     - id: compass\n       content: |\n\n         .. tip::\n            If you are using Compass, skip this step.\n\n     - id: python\n       content: |\n\n\n     - id: motor\n       content: |\n\n\n     - id: java-sync\n       content: |\n\n\n     - id: nodejs\n       content: |\n\n     - id: csharp\n       content: |\n\n     # - id: php\n     #  content: |\n\n     #   .. code-block:: php\n     #\n     #      $db = $manager->test;","static_assets":[]},"includes/drivers_env_uri":{"_id":"guides/andrew/master/includes/drivers_env_uri","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":1}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":5}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":5}},"value":"cloud"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"You can create a URI string for your session in MongoDB\nGuides by copying and pasting your Atlas connection string\nin the form below. Once you copy the string here, any\nrelevant code examples within the MongoDB Guides will be\npopulated with a URI string.  If you have not already\nretrieved your Atlas connection string, see\n"},{"type":"role","position":{"start":{"line":2}},"name":"doc","target":"/cloud/connectionstring","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" guide."}]}]}]},{"type":"directive","position":{"start":{"line":18}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":18}},"value":"local"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The URI string used in the guides assumes you have set up\nauthentication for your MongoDB instance, and have created a\nusername and password for read and write access to a MongoDB\ndatabase."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"If you have already set up a user with the\n"},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"readWriteAnyDatabase"}]},{"type":"text","position":{"start":{"line":5}},"value":" role through  the "},{"type":"role","position":{"start":{"line":5}},"name":"doc","target":"/server/auth","children":[]},{"type":"text","position":{"start":{"line":5}},"value":"\nguide, you may use that username and password here, along\nwith the "},{"type":"title_reference","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"admin"}]},{"type":"text","position":{"start":{"line":5}},"value":" database in your connection string."}]},{"type":"directive","position":{"start":{"line":10}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"The URI form below allows you to create a URI string for\nyour session in MongoDB Guides by filling out a form. Once\nyou fill out the form, any relevant code examples within the\nMongoDB Guides will be populated with a URI string. You can\nchange these at any time by repopulating the form."}]}]}]}]}],"position":{"start":{"line":0}}},"source":"\n.. tabs-cloud::\n\n   hidden: true\n\n   tabs:\n     - id: cloud\n       content: |\n       \n         .. note::\n\n            You can create a URI string for your session in MongoDB\n            Guides by copying and pasting your Atlas connection string\n            in the form below. Once you copy the string here, any\n            relevant code examples within the MongoDB Guides will be\n            populated with a URI string.  If you have not already\n            retrieved your Atlas connection string, see\n            :doc:`/cloud/connectionstring` guide.\n\n     - id: local\n       content: |\n\n         The URI string used in the guides assumes you have set up\n         authentication for your MongoDB instance, and have created a\n         username and password for read and write access to a MongoDB\n         database.\n       \n         If you have already set up a user with the\n         ``readWriteAnyDatabase`` role through  the :doc:`/server/auth`\n         guide, you may use that username and password here, along\n         with the `admin` database in your connection string.\n\n         .. note::\n\n            The URI form below allows you to create a URI string for\n            your session in MongoDB Guides by filling out a form. Once\n            you fill out the form, any relevant code examples within the\n            MongoDB Guides will be populated with a URI string. You can\n            change these at any time by repopulating the form.\n\n       \n\n","static_assets":[]},"includes/drivers_whitelist":{"_id":"guides/andrew/master/includes/drivers_whitelist","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":5}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":5}},"value":"cloud"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"tip","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Have you whitelisted your IP address for access to Atlas?\nFor more details see "},{"type":"emphasis","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Step 3"}]},{"type":"text","position":{"start":{"line":2}},"value":", "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Whitelist your IP Address\nand Select Your Connection Method"}]},{"type":"text","position":{"start":{"line":2}},"value":" in\n"},{"type":"role","position":{"start":{"line":2}},"name":"doc","target":"/cloud/connectionstring","children":[]},{"type":"text","position":{"start":{"line":2}},"value":"."}]}]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"local"}],"children":[]}]}],"position":{"start":{"line":0}}},"source":".. tabs-cloud::\n\n   hidden: true\n\n   tabs:\n\n     - id: cloud\n       content: |\n        \n         .. tip::\n\n            Have you whitelisted your IP address for access to Atlas?\n            For more details see *Step 3*, ``Whitelist your IP Address\n            and Select Your Connection Method`` in\n            :doc:`/cloud/connectionstring`.\n\n     - id: local\n       content: |\n\n\n\n       \n\n","static_assets":[]},"includes/mongo-shell-platform-connect":{"_id":"guides/andrew/master/includes/mongo-shell-platform-connect","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Select the operating system platform on which you are running the\nMongoDB client you have selected."}]},{"type":"directive","position":{"start":{"line":3}},"name":"tabs","argument":[],"options":{"tabset":"platforms"},"children":[{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"windows"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Pass the URI to the mongo shell followed by the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"--password"}]},{"type":"text","position":{"start":{"line":0}},"value":"\noption. You will then be prompted for your password."}]},{"type":"directive","position":{"start":{"line":3}},"name":"cssclass","argument":[{"type":"text","position":{"start":{"line":3}},"value":"urilistener"}],"children":[]},{"type":"code","position":{"start":{"line":4}},"lang":"sh","copyable":true,"value":"mongo.exe <URISTRING_SHELL_NOUSER>"}]},{"type":"directive","position":{"start":{"line":16}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":16}},"value":"linux"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Pass the URI to the mongo shell followed by the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"--password"}]},{"type":"text","position":{"start":{"line":0}},"value":"\noption. You will then be prompted for your password."}]},{"type":"directive","position":{"start":{"line":3}},"name":"cssclass","argument":[{"type":"text","position":{"start":{"line":3}},"value":"urilistener"}],"children":[]},{"type":"code","position":{"start":{"line":4}},"lang":"sh","copyable":true,"value":"mongo <URISTRING_SHELL_NOUSER>"}]},{"type":"directive","position":{"start":{"line":28}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":28}},"value":"macos"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Pass the URI to the mongo shell followed by the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"--password"}]},{"type":"text","position":{"start":{"line":0}},"value":"\noption. You will then be prompted for your password."}]},{"type":"directive","position":{"start":{"line":3}},"name":"cssclass","argument":[{"type":"text","position":{"start":{"line":3}},"value":"urilistener"}],"children":[]},{"type":"code","position":{"start":{"line":4}},"lang":"sh","copyable":true,"value":"mongo <URISTRING_SHELL_NOUSER>"}]}]}],"position":{"start":{"line":0}}},"source":"Select the operating system platform on which you are running the\nMongoDB client you have selected.\n\n.. tabs-platforms::\n\n   tabs:\n       \n     - id: windows\n       content: |\n         Pass the URI to the mongo shell followed by the ``--password``\n         option. You will then be prompted for your password.\n\n         .. cssclass:: urilistener\n         .. code-block:: sh\n\n            mongo.exe <URISTRING_SHELL_NOUSER>\n\n     - id: linux\n       content: |\n       \n         Pass the URI to the mongo shell followed by the ``--password``\n         option. You will then be prompted for your password.\n\n         .. cssclass:: urilistener\n         .. code-block:: sh\n\n            mongo <URISTRING_SHELL_NOUSER>\n\n\n     - id: macos\n       content: |\n       \n         Pass the URI to the mongo shell followed by the ``--password``\n         option. You will then be prompted for your password.\n\n         .. cssclass:: urilistener\n         .. code-block:: sh\n\n            mongo <URISTRING_SHELL_NOUSER>\n\n","static_assets":[]},"images/connect-to-host.png#0b1a3bde111bb205edc3e0c0b6741a72878dc83a9d02a7ae3865ae5e22b63e4b":{},"package main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/mongodb/mongo-go-driver/mongo\"\n\t\"log\"\n)\n\nfunc main() {\n\t// Open Connection\n\tclient, err := mongo.Connect(context.TODO(), \"<URISTRING>\");\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// End Open Connection Code\n\n\t// Check the connection\n\terr = client.Ping(context.TODO(), nil)\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(\"Connected to MongoDB!\")\n\n}":{},"go ./yourprojectname":{},"2019/01/09 10:01:50 server selection timeout":{},"const MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = '<URISTRING>';\n\n// Use connect method to connect to the Server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  client.close();\n});":{},"includes/drivers_connect":{"_id":"guides/andrew/master/includes/drivers_connect","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/mongo-shell-platform-connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":7}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":7}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you wish to manually configure your Compass connection, load\nCompass and select the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"New Connection"}]},{"type":"text","position":{"start":{"line":0}},"value":" link. You will see a\nform where you can enter connection information for MongoDB."}]},{"type":"directive","position":{"start":{"line":4}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":201}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":201}},"value":"cloud"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Atlas users can copy a URI string from the Atlas\nconsole into Compass. MongoDB Compass can detect whether you have a MongoDB\nURI connection string in your system clipboard and auto-\npopulate the connection dialog from the URI."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"See "},{"type":"role","position":{"start":{"line":5}},"name":"doc","target":"/cloud/connectionstring","children":[]},{"type":"text","position":{"start":{"line":5}},"value":" for information on\nhow to get the Atlas connection string URI into your copy\nbuffer."}]},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"If Compass was already running when you copied the URI string,\nclick the "},{"type":"role","position":{"start":{"line":9}},"name":"guilabel","label":{"type":"text","value":"NEW CONNECTION","position":{"start":{"line":34}}},"children":[]},{"type":"text","position":{"start":{"line":9}},"value":" button."}]}]}]},{"type":"directive","position":{"start":{"line":25}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":25}},"value":"/images/connect-to-host.png"}],"options":{"figwidth":"740px","checksum":"0b1a3bde111bb205edc3e0c0b6741a72878dc83a9d02a7ae3865ae5e22b63e4b"},"children":[]},{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"You will be prompted to populate the connection dialog.\nClick "},{"type":"role","position":{"start":{"line":28}},"name":"guilabel","label":{"type":"text","value":"Yes","position":{"start":{"line":221}}},"children":[]},{"type":"text","position":{"start":{"line":28}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"text","position":{"start":{"line":31}},"value":"You should then populate the "},{"type":"role","position":{"start":{"line":31}},"name":"guilabel","label":{"type":"text","value":"password","position":{"start":{"line":224}}},"children":[]},{"type":"text","position":{"start":{"line":31}},"value":" field with the\nproper password for your MongoDB user in the connection form."}]},{"type":"directive","position":{"start":{"line":34}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Errors related to connecting through Compass will\nappear in red at the top of the Connect screen."}]}]}]},{"type":"directive","position":{"start":{"line":47}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":47}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"It's a good idea to put your connection code in a class so\nthat it can be reused."}]},{"type":"code","lang":"python","copyable":false,"value":"from pymongo import MongoClient\n\nclass Connect(object):\n    @staticmethod    \n    def get_connection():\n        return MongoClient(\"<URISTRING>\")"},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"If your "},{"type":"literal","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"connection_string"}]},{"type":"text","position":{"start":{"line":10}},"value":" starts with "},{"type":"title_reference","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"mongodb+srv"}]},{"type":"text","position":{"start":{"line":10}},"value":", you need to install the dnspython module with"}]},{"type":"code","position":{"start":{"line":12}},"lang":"sh","copyable":true,"value":"python -m pip install dnspython"},{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"Now add code to call the class you just created."}]},{"type":"code","lang":"python","copyable":false,"value":"from connect import Connect\nfrom pymongo import MongoClient\n\nconnection = Connect.get_connection()"}]},{"type":"directive","position":{"start":{"line":75}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":75}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Replace your password and any parameters surrounded by "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"$[]"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nin the connection string in the code below."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"For now, you will use the "},{"type":"reference","position":{"start":{"line":3}},"refuri":"https://golang.org/pkg/context/#TODO","children":[{"type":"text","position":{"start":{"line":3}},"value":"context.TODO()"}]},{"type":"target","position":{"start":{"line":3}},"ids":["context-todo"],"refuri":"https://golang.org/pkg/context/#TODO","children":[]},{"type":"text","position":{"start":{"line":3}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Later you'll configure the context specific to your requirements."}]},{"type":"code","lang":"go","copyable":false,"value":"client, err := mongo.Connect(context.TODO(), \"<URISTRING>\");\n\nif err != nil {\n\tlog.Fatal(err)\n}\n"},{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"You won't know if the connection has been successful until you\nuse the connection. A "},{"type":"reference","position":{"start":{"line":13}},"refuri":"https://godoc.org/github.com/mongodb/mongo-go-driver/mongo#Client.Ping","children":[{"type":"text","position":{"start":{"line":13}},"value":"ping"}]},{"type":"target","position":{"start":{"line":13}},"ids":["ping"],"refuri":"https://godoc.org/github.com/mongodb/mongo-go-driver/mongo#Client.Ping","children":[]},{"type":"text","position":{"start":{"line":13}},"value":" is one way you can test the\nconnection. This is a full example of a Go connection to\nmongoDB, including a test "},{"type":"literal","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"ping"}]},{"type":"text","position":{"start":{"line":13}},"value":"."}]},{"type":"code","lang":"go","copyable":false,"value":"package main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/mongodb/mongo-go-driver/mongo\"\n\t\"log\"\n)\n\nfunc main() {\n\t// Open Connection\n\tclient, err := mongo.Connect(context.TODO(), \"<URISTRING>\");\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// End Open Connection Code\n\n\t// Check the connection\n\terr = client.Ping(context.TODO(), nil)\n\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(\"Connected to MongoDB!\")\n\n}"},{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"In your Go workspace and project folder, run build."}]},{"type":"code","position":{"start":{"line":26}},"lang":"sh","copyable":true,"value":"go build"},{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"Now run the binary. For binaries that are not installed, you'll\nhave to specify the path."}]},{"type":"code","position":{"start":{"line":33}},"lang":"sh","copyable":true,"value":"go <path-to-yourproject>"},{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"If you'd like to run the resulting binary without specifying\na path, install the binary you just built into your Go workspace."}]},{"type":"code","position":{"start":{"line":40}},"lang":"sh","copyable":true,"value":"go install"},{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"Now run the code. \"yourprojectname\" is the name of the project\ndirectory that contains the file with your "},{"type":"literal","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"main()"}]},{"type":"text","position":{"start":{"line":44}},"value":" function."}]},{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"For installed binaries use:"}]},{"type":"code","position":{"start":{"line":49}},"lang":"sh","copyable":true,"value":"go yourprojectname"},{"type":"paragraph","position":{"start":{"line":53}},"children":[{"type":"text","position":{"start":{"line":53}},"value":"For binaries that are not installed, you'll have to specify\nthe path."}]},{"type":"code","position":{"start":{"line":56}},"lang":"sh","copyable":true,"value":"go ./yourprojectname"},{"type":"paragraph","position":{"start":{"line":61}},"children":[{"type":"text","position":{"start":{"line":61}},"value":"The default timeout for the Go driver to connect to the database\nis 30 seconds. In the event that you are unable to connect,\nyou will see an error that resembles this:"}]},{"type":"code","position":{"start":{"line":65}},"lang":"none","copyable":true,"value":"2019/01/09 10:01:50 server selection timeout"}]},{"type":"directive","position":{"start":{"line":148}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":148}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"For the MongoDB java driver 3.7 and beyond, use the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoClients.create()"}]},{"type":"text","position":{"start":{"line":0}},"value":" method."}]},{"type":"code","lang":"java","copyable":false,"value":"final String uriString = \"<URISTRING>\";\nMongoClient mongoClient = MongoClients.create(uriString);"},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"For legacy drivers (prior to 3.7), use:"}]},{"type":"code","lang":"java","copyable":false,"value":"final String uriString = \"<URISTRING>\";\nMongoClientURI uri = new MongoClientURI(uriString);\nMongoClient mongoClient = new MongoClient(uri);"}]},{"type":"directive","position":{"start":{"line":169}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":169}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"const MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = '<URISTRING>';\n\n// Use connect method to connect to the Server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  client.close();\n});"}]},{"type":"directive","position":{"start":{"line":178}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":178}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"MongoDB.Bson"}]},{"type":"text","position":{"start":{"line":0}},"value":" package is used in CRUD operations, so\nyou'll import it here."}]},{"type":"code","lang":"c#","copyable":false,"value":"using System;\nusing MongoDB.Bson;\nusing MongoDB.Driver;\n\nnamespace csharptest\n{\n    class Connect\n    {\n        static void Main(string[] args)\n        {\n           var client = new MongoClient(\"<URISTRING>\");\n        }\n    }\n}\n"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         .. include:: /includes/mongo-shell-platform-connect.rst\n\n     - id: compass\n       content: |\n\n         If you wish to manually configure your Compass connection, load\n         Compass and select the ``New Connection`` link. You will see a\n         form where you can enter connection information for MongoDB.\n\n         .. tabs-cloud::\n\n            hidden: true\n\n            tabs:\n\n              - id: cloud\n                content: |\n\n                  Atlas users can copy a URI string from the Atlas\n                  console into Compass. MongoDB Compass can detect whether you have a MongoDB\n                  URI connection string in your system clipboard and auto-\n                  populate the connection dialog from the URI.\n         \n                  See :doc:`/cloud/connectionstring` for information on\n                  how to get the Atlas connection string URI into your copy\n                  buffer.\n         \n                  If Compass was already running when you copied the URI string,\n                  click the :guilabel:`NEW CONNECTION` button.\n\n         .. figure:: /images/connect-to-host.png\n            :figwidth: 740px\n\n         You will be prompted to populate the connection dialog.\n         Click :guilabel:`Yes`.\n\n         You should then populate the :guilabel:`password` field with the\n         proper password for your MongoDB user in the connection form.\n\n         .. note:: Errors related to connecting through Compass will\n                   appear in red at the top of the Connect screen.\n\n     - id: python\n       content: |\n\n         It's a good idea to put your connection code in a class so\n         that it can be reused.\n\n         .. literalinclude:: /driver-examples/connect.py\n            :language: python\n            :dedent: 0\n            :start-after: Start Connect\n            :end-before: End Connect\n\n\n         If your ``connection_string`` starts with `mongodb+srv`, you need to install the dnspython module with\n           \n         .. code-block:: sh\n            \n            python -m pip install dnspython \n\n         Now add code to call the class you just created.\n\n         .. literalinclude:: /driver-examples/connecttest.py\n            :language: python\n            :dedent: 0\n            :start-after: Start Caller Connect\n            :end-before: End Caller Connect\n     \n\n     - id: go\n       content: |\n\n         Replace your password and any parameters surrounded by ``$[]``\n         in the connection string in the code below.\n\n         For now, you will use the `context.TODO() <https://golang.org/pkg/context/#TODO>`_. \n\n         Later you'll configure the context specific to your requirements.\n         \n         .. literalinclude:: /driver-examples/connect.go\n            :language: go\n            :dedent: 1 \n            :start-after: Open Connection\n            :end-before: End Open Connection Code   \n\n         You won't know if the connection has been successful until you\n         use the connection. A `ping <https://godoc.org/github.com/mongodb/mongo-go-driver/mongo#Client.Ping>`_ is one way you can test the\n         connection. This is a full example of a Go connection to\n         mongoDB, including a test ``ping``.\n\n         .. literalinclude:: /driver-examples/connect.go\n            :language: go\n            :dedent: 0\n            :start-after: Start code\n            :end-before: End code   \n\n         In your Go workspace and project folder, run build.\n\n         .. code-block:: sh\n\n            go build\n\n         Now run the binary. For binaries that are not installed, you'll\n         have to specify the path.\n\n         .. code-block:: sh\n\n            go <path-to-yourproject> \n\n         If you'd like to run the resulting binary without specifying\n         a path, install the binary you just built into your Go workspace.\n\n         .. code-block:: sh\n    \n            go install\n\n         Now run the code. \"yourprojectname\" is the name of the project\n         directory that contains the file with your ``main()`` function.\n\n         For installed binaries use:\n         \n         .. code-block:: sh \n\n            go yourprojectname   \n\n         For binaries that are not installed, you'll have to specify\n         the path. \n\n         .. code-block:: sh\n\n            go ./yourprojectname \n\n\n         The default timeout for the Go driver to connect to the database\n         is 30 seconds. In the event that you are unable to connect, \n         you will see an error that resembles this:\n\n         .. code-block:: none\n\n            2019/01/09 10:01:50 server selection timeout\n\n\n     - id: java-sync\n       content: |\n\n         For the MongoDB java driver 3.7 and beyond, use the ``MongoClients.create()`` method.\n\n         .. literalinclude:: /driver-examples/JavaConnectExample.java\n            :language: java\n            :dedent: 4\n            :start-after: Start Connection\n            :end-before: End Connection\n\n\n         For legacy drivers (prior to 3.7), use:\n\n         .. literalinclude:: /driver-examples/JavaConnectExampleLegacy.java\n            :language: java\n            :dedent: 4\n            :start-after: Start Connection\n            :end-before: End Connection\n\n\n     - id: nodejs\n       content: |\n\n         .. literalinclude:: /driver-examples/connect.js\n            :language: javascript\n            :dedent: 0\n            :start-after: Start Connect\n            :end-before: End Connect\n\n     - id: csharp\n       content: |\n         \n         The ``MongoDB.Bson`` package is used in CRUD operations, so\n         you'll import it here.\n\n         \n         .. literalinclude:: /driver-examples/csharpconnect.cs\n            :language: c#\n            :dedent: 0\n            :start-after: Start Connect\n            :end-before: End Connect\n\n\n","static_assets":["0b1a3bde111bb205edc3e0c0b6741a72878dc83a9d02a7ae3865ae5e22b63e4b"]},"includes/steps/drivers_install_gs":{"_id":"guides/andrew/master/includes/steps/drivers_install_gs","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Install your client"}],"id":"install-your-client"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Obtain your MongoDB connection string"}],"id":"obtain-your-mongodb-connection-string"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_api_uri.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"In order to connect to MongoDB, you will need a "},{"type":"role","position":{"start":{"line":2}},"name":"ref","label":{"type":"text","value":"URI string","position":{"start":{"line":3}}},"target":"mongodb-uri","children":[]},{"type":"text","position":{"start":{"line":2}},"value":". A "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"URI"}]},{"type":"text","position":{"start":{"line":2}},"value":" (Uniform Resource Identifier) is similar to\na URL, and is supplied as a parameter to the "},{"type":"role","position":{"start":{"line":2}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":2}},"value":"\nshell, Compass, and the MongoDB drivers when connecting to a MongoDB\ndeployment."}]},{"type":"directive","position":{"start":{"line":8}},"name":"include","argument":[{"type":"text","position":{"start":{"line":8}},"value":"/includes/drivers_env_uri.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":8}},"children":[]}]},{"type":"directive","position":{"start":{"line":10}},"name":"important","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"If your connection string contains "},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"$[password]"}]},{"type":"text","position":{"start":{"line":12}},"value":", you will need\nto replace this string with your password. Use caution\nwhere you store and enter passwords, particularly when running from\na shell or command prompt. Special characters in passwords must be\nescaped."}]}]},{"type":"directive","position":{"start":{"line":18}},"name":"uriwriter","argument":[],"children":[]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance"}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_whitelist.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]},{"type":"directive","position":{"start":{"line":2}},"name":"include","argument":[{"type":"text","position":{"start":{"line":2}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":2}},"children":[]}]}]}]}]},"source":"title: Install your client\nref: access-mongos\nlevel: 4\nstepnum: 1\ncontent: |\n  \n  .. include:: /includes/drivers_install.rst\n\n---\ntitle: Obtain your MongoDB connection string\nref: connection_string\nlevel: 4\nstepnum: 2\ncontent: |\n\n  \n  .. include:: /includes/drivers_api_uri.rst\n\n  In order to connect to MongoDB, you will need a :ref:`URI string\n  <mongodb-uri>`. A ``URI`` (Uniform Resource Identifier) is similar to\n  a URL, and is supplied as a parameter to the :binary:`~bin.mongo`\n  shell, Compass, and the MongoDB drivers when connecting to a MongoDB\n  deployment.\n\n  .. include:: /includes/drivers_env_uri.rst\n\n  .. important:: \n     \n     If your connection string contains ``$[password]``, you will need\n     to replace this string with your password. Use caution\n     where you store and enter passwords, particularly when running from\n     a shell or command prompt. Special characters in passwords must be\n     escaped.\n  \n  .. uriwriter::\n---\ntitle: Connect to your MongoDB instance\nref: connect\nlevel: 4\nstepnum: 3\ncontent: |\n\n  .. include:: /includes/drivers_whitelist.rst\n\n  .. include:: /includes/drivers_connect.rst\n","static_assets":[]},"server/drivers":{"_id":"guides/andrew/master/server/drivers","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"connect-to-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Connect to MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"level","argument":[{"type":"text","position":{"start":{"line":22}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":24}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":26}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"There are several ways to connect to your MongoDB instance."}]},{"type":"list","position":{"start":{"line":30}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":30}},"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"role","position":{"start":{"line":30}},"name":"ref","label":{"type":"text","value":"MongoDB Compass","position":{"start":{"line":29}}},"target":"compass-index","children":[]},{"type":"text","position":{"start":{"line":30}},"value":" for access through a downloadable user interface"}]}]},{"type":"listItem","position":{"start":{"line":30}},"children":[{"type":"paragraph","position":{"start":{"line":31}},"children":[{"type":"role","position":{"start":{"line":31}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":31}},"value":" interactive shell"}]}]},{"type":"listItem","position":{"start":{"line":30}},"children":[{"type":"paragraph","position":{"start":{"line":32}},"children":[{"type":"reference","position":{"start":{"line":32}},"refuri":"https://docs.mongodb.com/ecosystem/drivers","children":[{"type":"text","position":{"start":{"line":32}},"value":"programmatic access"}]},{"type":"target","position":{"start":{"line":32}},"ids":["programmatic-access"],"refuri":"https://docs.mongodb.com/ecosystem/drivers","children":[]},{"type":"text","position":{"start":{"line":32}},"value":"  through a number of programming APIs."}]}]}]},{"type":"paragraph","position":{"start":{"line":34}},"children":[{"type":"text","position":{"start":{"line":34}},"value":"The following guide steps you through installing the MongoDB client of your choice."}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"time","argument":[{"type":"text","position":{"start":{"line":36}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":38}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":40}},"name":"include","argument":[{"type":"text","position":{"start":{"line":40}},"value":"/includes/prereqs_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":40}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":42}},"name":"check_your_environment","argument":[],"children":[{"type":"list","position":{"start":{"line":44}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":44}},"children":[{"type":"paragraph","position":{"start":{"line":44}},"children":[{"type":"text","position":{"start":{"line":44}},"value":"Ensure that your client platform is compatible with MongoDB.\nRefer to the "},{"type":"role","position":{"start":{"line":44}},"name":"ref","label":{"type":"text","value":"Supported Platforms","position":{"start":{"line":39}}},"target":"mongodb-supported-platforms","children":[]},{"type":"text","position":{"start":{"line":44}},"value":"\ntable for more information."}]}]}]}]},{"type":"directive","position":{"start":{"line":48}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":50}},"name":"tip","argument":[{"type":"text","position":{"start":{"line":50}},"value":"Select the client and environment you will use at the top of this page."}],"children":[]},{"type":"directive","position":{"start":{"line":53}},"name":"include","argument":[{"type":"text","position":{"start":{"line":53}},"value":"/includes/steps/drivers_install_gs.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":53}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":55}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":57}},"children":[{"type":"text","position":{"start":{"line":57}},"value":"Congratulations. If you have successfully completed this guide,\nyou have connected to your MongoDB instance. In the next group of\nguides, you'll learn how to create, read, update, and delete data\nin MongoDB."}]}]},{"type":"directive","position":{"start":{"line":62}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":64}},"children":[{"type":"text","position":{"start":{"line":64}},"value":"In the next guide, you'll learn how to insert data into MongoDB."}]},{"type":"list","position":{"start":{"line":66}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":66}},"children":[{"type":"paragraph","position":{"start":{"line":66}},"children":[{"type":"role","position":{"start":{"line":66}},"name":"doc","label":{"type":"text","value":"Insert Data into MongoDB","position":{"start":{"line":61}}},"target":"/server/insert","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":68}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":70}},"children":[{"type":"text","position":{"start":{"line":70}},"value":"For CRUD (Create, Read, Update, Delete) guides:"}]},{"type":"list","position":{"start":{"line":72}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":72}},"children":[{"type":"role","position":{"start":{"line":72}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":73}},"children":[{"type":"role","position":{"start":{"line":73}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":74}},"children":[{"type":"role","position":{"start":{"line":74}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":75}},"children":[{"type":"role","position":{"start":{"line":75}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":76}},"children":[{"type":"role","position":{"start":{"line":76}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":72}},"children":[{"type":"paragraph","position":{"start":{"line":77}},"children":[{"type":"role","position":{"start":{"line":77}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Connect to MongoDB\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   deployments:\n     cloud\n     local\n   languages:\n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n\n   product_version: 4.0\n   result_description:\n     \n     There are several ways to connect to your MongoDB instance.\n      \n     - :ref:`MongoDB Compass <compass-index>` for access through a downloadable user interface\n     - :binary:`~bin.mongo` interactive shell\n     - `programmatic access <https://docs.mongodb.com/ecosystem/drivers>`_  through a number of programming APIs.\n\n    The following guide steps you through installing the MongoDB client of your choice.\n\n   time: 15\n   prerequisites:\n\n     .. include:: /includes/prereqs_drivers_install.rst\n   \n   check_your_environment:\n\n     - Ensure that your client platform is compatible with MongoDB. \n       Refer to the :ref:`Supported Platforms <mongodb-supported-platforms>`\n       table for more information.\n   \n   procedure:\n\n     .. tip:: \n        Select the client and environment you will use at the top of this page.\n\n     .. include:: /includes/steps/drivers_install_gs.rst\n\n   summary:\n\n     Congratulations. If you have successfully completed this guide,\n     you have connected to your MongoDB instance. In the next group of\n     guides, you'll learn how to create, read, update, and delete data\n     in MongoDB.\n\n   whats_next:\n     In the next guide, you'll learn how to insert data into MongoDB.\n\n     * :doc:`Insert Data into MongoDB </server/insert>`\n   seealso:\n\n     For CRUD (Create, Read, Update, Delete) guides:\n\n     - :doc:`/server/insert`\n     - :doc:`/server/read`\n     - :doc:`/server/read_operators`\n     - :doc:`/server/read_queries`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"includes/prereqs_read_CRUD":{"_id":"guides/andrew/master/includes/prereqs_read_CRUD","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"hidden":true,"tabset":"cloud"},"children":[{"type":"directive","position":{"start":{"line":4}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":4}},"value":"local"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have not already installed a client (e.g. a driver, "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"MongoDB Compass","position":{"start":{"line":20}}},"target":"compass-index","children":[]},{"type":"text","position":{"start":{"line":0}},"value":", or the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell), complete the "},{"type":"role","position":{"start":{"line":0}},"name":"doc","target":"/server/drivers","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" guide before attempting this guide."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"role","position":{"start":{"line":2}},"name":"doc","label":{"type":"text","value":"Enable Auth","position":{"start":{"line":22}}},"target":"/server/auth","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" on your local instance of MongoDB."}]}]}]},{"type":"directive","position":{"start":{"line":4}},"name":"warning","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"If you are running MongoDB locally and have not enabled authentication, your MongoDB instance is not secure."}]}]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"cloud"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have not already installed a client (e.g. a driver, "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"MongoDB Compass","position":{"start":{"line":20}}},"target":"compass-index","children":[]},{"type":"text","position":{"start":{"line":0}},"value":", or the "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell), complete the "},{"type":"role","position":{"start":{"line":0}},"name":"doc","target":"/server/drivers","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" guide before attempting this guide."}]}]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-cloud::\n\n   hidden: true\n\n   tabs:\n     - id: local\n       content: |\n\n         - If you have not already installed a client (e.g. a driver, :ref:`MongoDB Compass <compass-index>`, or the :binary:`~bin.mongo` shell), complete the :doc:`/server/drivers` guide before attempting this guide.\n\n         - :doc:`Enable Auth </server/auth>` on your local instance of MongoDB.\n\n         .. warning::\n\n            If you are running MongoDB locally and have not enabled authentication, your MongoDB instance is not secure.\n\n     - id: cloud\n       content: |\n\n         - If you have not already installed a client (e.g. a driver, :ref:`MongoDB Compass <compass-index>`, or the :binary:`~bin.mongo` shell), complete the :doc:`/server/drivers` guide before attempting this guide.","static_assets":[]},"images/compass-create-database.png#10e351828f156afcafc7744c30d7b2564c6efba1ca7c55cac59560c67581f947":{},"images/compass-select-test-database.png#50d1ea5fadfd8269ffa774053fcd905395d5f3e4525a9a9db659e2c1507bcc97":{},"includes/bind_db":{"_id":"guides/andrew/master/includes/bind_db","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":0}},"value":" shell, type"}]},{"type":"code","position":{"start":{"line":2}},"lang":"sh","copyable":true,"value":"use test"}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If the database has not been created already, click the\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Create Database","position":{"start":{"line":133}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" button."}]},{"type":"directive","position":{"start":{"line":3}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/images/compass-create-database.png"}],"options":{"alt":"Screeenshot after connecting with the \"Create Database\" button.","figwidth":"750px","checksum":"10e351828f156afcafc7744c30d7b2564c6efba1ca7c55cac59560c67581f947"},"children":[]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Select the "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"test"}]},{"type":"text","position":{"start":{"line":7}},"value":" database on the left side of the Compass\ninterface. Compass will list all of the collections in the\ndatabase below the database name."}]},{"type":"directive","position":{"start":{"line":11}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":11}},"value":"/images/compass-select-test-database.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI showing with the \"test\" database selected in the list of databases in the cluster.","figwidth":"500px","checksum":"50d1ea5fadfd8269ffa774053fcd905395d5f3e4525a9a9db659e2c1507bcc97"},"children":[]}]},{"type":"directive","position":{"start":{"line":29}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":29}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To access the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database:"}]},{"type":"code","position":{"start":{"line":2}},"lang":"python","copyable":true,"value":"db = client.test"}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To access the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database:"}]},{"type":"code","position":{"start":{"line":2}},"lang":"python","copyable":true,"value":"db = client.test"}]},{"type":"directive","position":{"start":{"line":47}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":47}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To access the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database:"}]},{"type":"code","position":{"start":{"line":2}},"lang":"go","copyable":true,"value":"db := client.Database(\"test\")"}]},{"type":"directive","position":{"start":{"line":57}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":57}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database and\naccess the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection."}]},{"type":"code","position":{"start":{"line":3}},"lang":"java","copyable":true,"value":"MongoDatabase mongoDB = mongoClient.getDatabase(\"test\");\nMongoCollection<Document> collection = mongoDB.getCollection(\"inventory\");"}]},{"type":"directive","position":{"start":{"line":68}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":68}},"value":"nodejs"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Within the connect block, set "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"db"}]},{"type":"text","position":{"start":{"line":0}},"value":" to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}]},{"type":"code","position":{"start":{"line":2}},"lang":"javascript","copyable":true,"value":"const db = client.db(\"test\");"}]},{"type":"directive","position":{"start":{"line":77}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":77}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database and\naccess the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection."}]},{"type":"code","position":{"start":{"line":3}},"lang":"csharp","copyable":true,"value":"var database = client.GetDatabase(\"test\");\nvar collection = database.GetCollection<BsonDocument>(\"inventory\");"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         To switch to the ``test`` database in the ``mongo`` shell, type\n\n         .. code-block:: sh\n\n            use test\n\n     - id: compass\n       content: |\n\n         If the database has not been created already, click the\n         :guilabel:`Create Database` button.\n\n         .. figure:: /images/compass-create-database.png\n            :alt: Screeenshot after connecting with the \"Create Database\" button.\n            :figwidth: 750px\n\n         Select the ``test`` database on the left side of the Compass\n         interface. Compass will list all of the collections in the\n         database below the database name.\n\n         .. figure:: /images/compass-select-test-database.png\n            :alt: Screenshot of the MongoDB Compass UI showing with the \"test\" database selected in the list of databases in the cluster.\n            :figwidth: 500px\n\n     - id: python\n       content: |\n\n         To access the ``test`` database:\n\n         .. code-block:: python\n\n             db = client.test\n\n     - id: motor\n       content: |\n\n         To access the ``test`` database:\n\n         .. code-block:: python\n\n            db = client.test\n\n     - id: go\n       content: |\n\n         To access the ``test`` database:\n\n         .. code-block:: go\n\n            db := client.Database(\"test\")\n\n\n     - id: java-sync\n       content: |\n\n         Switch to the ``test`` database and\n         access the ``inventory`` collection.\n\n         .. code-block:: java\n\n            MongoDatabase mongoDB = mongoClient.getDatabase(\"test\");\n            MongoCollection<Document> collection = mongoDB.getCollection(\"inventory\");\n\n     - id: nodejs\n       content: |\n\n         Within the connect block, set ``db`` to the ``test`` database.\n\n         .. code-block:: javascript\n\n            const db = client.db(\"test\");\n\n     - id: csharp\n       content: |\n\n         Switch to the ``test`` database and\n         access the ``inventory`` collection.\n\n         .. code-block:: csharp\n\n            var database = client.GetDatabase(\"test\");\n            var collection = database.GetCollection<BsonDocument>(\"inventory\");\n\n     # - id: php\n     #  content: |\n\n     #   .. code-block:: php\n     #\n     #      $db = $manager->test;\n\n\n     # - id: perl\n     #  content: |\n\n     #    .. code-block:: perl\n\n     #       use MongoDB;\n     #       my $client = MongoDB->connect('<URISTRING>');\n     #       my $db = $client->get_database('test');\n\n\n     # - id: ruby\n     #   content: |\n     #      If you specified `test` as your database in your URI string,\n     #      you should already be connected to the `test` database.\n     #      You can also use JSON to configure the connect options. Note\n     #      that you will need to pass in the authSource along with the\n     #      username and password, or as part of the URI String.\n     #\n     #      .. code-block:: ruby\n     #\n     #         client_options = {\n     #           database: 'test',\n     #           user: '<USERNAME>',\n     #           password: '<PASSWORD>',\n     #         }\n     #\n     #         client = Mongo::Client.new('mongodb://localhost:27017/?authSource=admin', client_options);\n     #\n     # - id: scala\n     #   content: |\n     #\n     #      .. code-block:: scala\n     #\n     #         val database: MongoDatabase = mongoClient.getDatabase(\"test\")\n     #\n     #","static_assets":["10e351828f156afcafc7744c30d7b2564c6efba1ca7c55cac59560c67581f947","50d1ea5fadfd8269ffa774053fcd905395d5f3e4525a9a9db659e2c1507bcc97"]},"images/compass-insert-button.png#dd7901e072bb56b1bdfb3e7972d71aa3ac0f66253c614ca33af7fe387d5a284c":{},"includes/insert_one":{"_id":"guides/andrew/master/includes/insert_one","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document does not specify\nan "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, MongoDB adds the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field with an\nObjectId value to the new document."}]}]},{"type":"directive","position":{"start":{"line":9}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":9}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To insert a single document using MongoDB Compass:"}]},{"type":"list","position":{"start":{"line":2}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Navigate to the collection you wish to insert the document\ninto:"}]},{"type":"list","position":{"start":{"line":2}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"In the left-hand MongoDB Compass navigation pane, click\nthe database to which your target collection belongs."}]}]},{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"From the database view, click the target collection name."}]}]}]}]},{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Click the "},{"type":"role","position":{"start":{"line":10}},"name":"guilabel","label":{"type":"text","value":"Insert Document","position":{"start":{"line":170}}},"children":[]},{"type":"text","position":{"start":{"line":10}},"value":" button:"}]},{"type":"directive","position":{"start":{"line":12}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":12}},"value":"/images/compass-insert-button.png"}],"options":{"checksum":"dd7901e072bb56b1bdfb3e7972d71aa3ac0f66253c614ca33af7fe387d5a284c"},"children":[]}]},{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"For each field in the document, select the field type and\nfill in the field name and value. Add fields by clicking\nthe last line number, then clicking\n"},{"type":"role","position":{"start":{"line":14}},"name":"guilabel","label":{"type":"text","value":"Add Field After ...","position":{"start":{"line":174}}},"children":[]}]},{"type":"list","position":{"start":{"line":19}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":19}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"For "},{"type":"literal","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"Object"}]},{"type":"text","position":{"start":{"line":19}},"value":" types, add nested fields by clicking the\nlast field's number and selecting\n"},{"type":"role","position":{"start":{"line":19}},"name":"guilabel","label":{"type":"text","value":"Add Field After ...","position":{"start":{"line":179}}},"children":[]}]}]},{"type":"listItem","position":{"start":{"line":19}},"children":[{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"For "},{"type":"literal","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"Array"}]},{"type":"text","position":{"start":{"line":23}},"value":" types, add additional elements to the array\nby clicking the last element's line number and selecting\n"},{"type":"role","position":{"start":{"line":23}},"name":"guilabel","label":{"type":"text","value":"Add Array Element After ...","position":{"start":{"line":183}}},"children":[]}]}]}]}]},{"type":"listItem","position":{"start":{"line":2}},"children":[{"type":"paragraph","position":{"start":{"line":27}},"children":[{"type":"text","position":{"start":{"line":27}},"value":"Once all fields have been filled out, click "},{"type":"role","position":{"start":{"line":27}},"name":"guilabel","label":{"type":"text","value":"Insert","position":{"start":{"line":187}}},"children":[]},{"type":"text","position":{"start":{"line":27}},"value":"."}]}]}]},{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"test.inventory"}]},{"type":"text","position":{"start":{"line":29}},"value":" collection:"}]}]},{"type":"directive","position":{"start":{"line":43}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":43}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document does not specify\nan "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the PyMongo driver adds the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field\nwith an ObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":51}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":51}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example shows the api call required to insert a\nnew document into the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document\ndoes not specify an "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the Motor driver adds the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field with an ObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":60}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":60}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example shows the api call required to insert a\nnew document into the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document\ndoes not specify an "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the Go driver adds the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field with an ObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Before inserting the data, you'll need to assign the\n"},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":6}},"value":" collection in the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"test"}]},{"type":"text","position":{"start":{"line":6}},"value":" database to a\nvariable"}]},{"type":"code","lang":"go","copyable":false,"value":"coll := db.Collection(\"inventory\")\n"}]},{"type":"directive","position":{"start":{"line":78}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":78}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document does not specify\nan "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the driver adds the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field with an\nObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"First, get the inventory collection."}]},{"type":"code","lang":"java","copyable":false,"value":"MongoDatabase db = mongoClient.getDatabase(\"test\");\nMongoCollection<Document> collection = db\n        .getCollection(\"inventory\");"}]},{"type":"directive","position":{"start":{"line":111}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":111}},"value":"nodejs"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document does not specify\nan "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the Node.js driver adds the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field\nwith an ObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":119}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":119}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example inserts a new document into the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection. If the document does not specify\nan "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field, the C# driver adds the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"_id"}]},{"type":"text","position":{"start":{"line":0}},"value":" field\nwith an ObjectId value to the new document. See\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","target":"write-op-insert-behavior","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         The following example inserts a new document into the\n         ``inventory`` collection. If the document does not specify\n         an ``_id`` field, MongoDB adds the ``_id`` field with an\n         ObjectId value to the new document.\n\n     - id: compass\n       content: |\n         To insert a single document using MongoDB Compass:\n\n         1. Navigate to the collection you wish to insert the document\n            into:\n\n            a. In the left-hand MongoDB Compass navigation pane, click\n               the database to which your target collection belongs.\n\n            b. From the database view, click the target collection name.\n\n         2. Click the :guilabel:`Insert Document` button:\n\n            .. figure:: /images/compass-insert-button.png\n\n         3. For each field in the document, select the field type and\n            fill in the field name and value. Add fields by clicking\n            the last line number, then clicking\n            :guilabel:`Add Field After ...`\n\n            - For ``Object`` types, add nested fields by clicking the\n              last field's number and selecting\n              :guilabel:`Add Field After ...`\n\n            - For ``Array`` types, add additional elements to the array\n              by clicking the last element's line number and selecting\n              :guilabel:`Add Array Element After ...`\n\n         4. Once all fields have been filled out, click :guilabel:`Insert`.\n\n         The following example inserts a new document into the\n         ``test.inventory`` collection:\n\n     - id: python\n       content: |\n         The following example inserts a new document into the\n         ``inventory`` collection. If the document does not specify\n         an ``_id`` field, the PyMongo driver adds the ``_id`` field\n         with an ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n     - id: motor\n       content: |\n         \n         The following example shows the api call required to insert a\n         new document into the ``inventory`` collection. If the document\n         does not specify an ``_id`` field, the Motor driver adds the\n         ``_id`` field with an ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n     - id: go\n       content: |\n         The following example shows the api call required to insert a\n         new document into the ``inventory`` collection. If the document\n         does not specify an ``_id`` field, the Go driver adds the\n         ``_id`` field with an ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n         Before inserting the data, you'll need to assign the\n         ``inventory`` collection in the ``test`` database to a \n         variable\n\n         .. literalinclude:: /driver-examples/assign.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Collection\n            :end-before: End Collection\n\n     - id: java-sync\n       content: |\n         The following example inserts a new document into the\n         ``inventory`` collection. If the document does not specify\n         an ``_id`` field, the driver adds the ``_id`` field with an\n         ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n         First, get the inventory collection.\n\n         .. literalinclude:: /driver-examples/JavaConnectExample.java\n            :language: java\n            :dedent: 4\n            :start-after: Start Collection\n            :end-before: End Collection\n\n     #- id: java-async\n     #  content: |\n\n     #    The following example inserts a new document into the\n     #    ``inventory`` collection. If the document does not specify\n     #    an ``_id`` field, the driver adds the ``_id`` field with an\n     #    ObjectId value to the new document. See\n     #    :ref:`write-op-insert-behavior`.\n\n     #    First, bind to the ``inventory`` collection.\n\n     #    .. literalinclude:: /driver-examples/JavaConnectTest.java\n     #       :language: java\n     #       :dedent: 4\n     #       :start-after: Start Collection Bind\n     #       :end-before: End Collection Bind\n\n     - id: nodejs\n       content: |\n         The following example inserts a new document into the\n         ``inventory`` collection. If the document does not specify\n         an ``_id`` field, the Node.js driver adds the ``_id`` field\n         with an ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n     - id: csharp\n       content: |\n         The following example inserts a new document into the\n         ``inventory`` collection. If the document does not specify\n         an ``_id`` field, the C# driver adds the ``_id`` field\n         with an ObjectId value to the new document. See\n         :ref:`write-op-insert-behavior`.\n\n     # - id: php\n     #   content: |\n     #     The following example inserts a new document into the\n     #     ``inventory`` collection. If the document does not specify\n     #     an ``_id`` field, the PHP driver adds the ``_id`` field\n     #     with an ObjectId value to the new document. See\n     #     :ref:`write-op-insert-behavior`.\n     #\n     # - id: perl\n     #   content: |\n     #     The following example inserts a new document into the\n     #     ``inventory`` collection. If the document does not specify\n     #     an ``_id`` field, the Perl driver adds the ``_id`` field\n     #     with an ObjectId value to the new document. See\n     #     :ref:`write-op-insert-behavior`.\n     #\n     # - id: ruby\n     #   content: |\n     #     The following example inserts a new document into the\n     #     ``inventory`` collection. If the document does not specify\n     #     an ``_id`` field, the Ruby driver adds the ``_id`` field\n     #     with an ObjectId value to the new document. See\n     #     :ref:`write-op-insert-behavior`.\n     #\n     # - id: scala\n     #   content: |\n     #     The following example inserts a new document into the\n     #     ``inventory`` collection. If the document does not specify\n     #     an ``_id`` field, the Scala driver adds the ``_id`` field\n     #     with an ObjectId value to the new document. See\n     #     :ref:`write-op-insert-behavior`.\n\n","static_assets":["dd7901e072bb56b1bdfb3e7972d71aa3ac0f66253c614ca33af7fe387d5a284c"]},"images/compass-insert-document-inventory.png#f37356498e9e2305b60802a82d9f5a1bbc6ee9f55ca73a8dbaadf6b1be478829":{},"db.collection('inventory').insertOne({\n  item: \"canvas\",\n  qty: 100,\n  tags: [\"cotton\"],\n  size: { h: 28, w: 35.5, uom: \"cm\" }\n})\n.then(function(result) {\n  // process result\n})":{},"includes/driver-example-insert-1":{"_id":"guides/andrew/master/includes/driver-example-insert-1","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"db.inventory.insertOne(\n   { \"item\" : \"canvas\",\n     \"qty\" : 100,\n     \"tags\" : [\"cotton\"],\n     \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" }\n   }\n)"}]},{"type":"directive","position":{"start":{"line":14}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":14}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-insert-document-inventory.png"}],"options":{"figwidth":"700px","checksum":"f37356498e9e2305b60802a82d9f5a1bbc6ee9f55ca73a8dbaadf6b1be478829"},"children":[]}]},{"type":"directive","position":{"start":{"line":19}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":19}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"db.inventory.insert_one(\n    {\"item\": \"canvas\",\n     \"qty\": 100,\n     \"tags\": [\"cotton\"],\n     \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"}})"}]},{"type":"directive","position":{"start":{"line":28}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":28}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\nresult, err := coll.InsertOne(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"item\", \"canvas\"},\n\t\t{\"qty\", 100},\n\t\t{\"tags\", bson.A{\"cotton\"}},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 28},\n\t\t\t{\"w\", 35.5},\n\t\t\t{\"uom\", \"cm\"},\n\t\t}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":36}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":36}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"await db.inventory.insert_one(\n    {\"item\": \"canvas\",\n     \"qty\": 100,\n     \"tags\": [\"cotton\"],\n     \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"}})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"Run the loop:"}]},{"type":"code","position":{"start":{"line":11}},"lang":"python","copyable":true,"value":"async def do_insert_one():\n    document = await db.inventory.insert_one(\n        {\"item\": \"canvas\",\n         \"qty\": 100,\n         \"tags\": [\"cotton\"],\n         \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"}})\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_insert_one())"}]},{"type":"directive","position":{"start":{"line":61}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":61}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Next, populate a Document with fields and an embedded document,\nand insert it into the database."}]},{"type":"code","lang":"java","copyable":false,"value":"Document canvas = new Document(\"item\", \"canvas\")\n        .append(\"qty\", 100)\n        .append(\"tags\", singletonList(\"cotton\"));\n\nDocument size = new Document(\"h\", 28)\n        .append(\"w\", 35.5)\n        .append(\"uom\", \"cm\");\ncanvas.put(\"size\", size);\n\ncollection.insertOne(canvas);"}]},{"type":"directive","position":{"start":{"line":80}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":80}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').insertOne({\n  item: \"canvas\",\n  qty: 100,\n  tags: [\"cotton\"],\n  size: { h: 28, w: 35.5, uom: \"cm\" }\n})\n.then(function(result) {\n  // process result\n})"}]},{"type":"directive","position":{"start":{"line":89}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":89}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var document = new BsonDocument\n{\n    { \"item\", \"canvas\" },\n    { \"qty\", 100 },\n    { \"tags\", new BsonArray { \"cotton\" } },\n    { \"size\", new BsonDocument { { \"h\", 28 }, { \"w\", 35.5 }, { \"uom\", \"cm\" } } }\n};\ncollection.InsertOne(document);"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            db.inventory.insertOne(\n               { \"item\" : \"canvas\", \n                 \"qty\" : 100, \n                 \"tags\" : [\"cotton\"], \n                 \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" } \n               }\n            )\n\n     - id: compass\n       content: |\n         .. figure:: /images/compass-insert-document-inventory.png\n            :figwidth: 700px\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         Run the loop:\n         \n         .. code-block:: python\n         \n            async def do_insert_one():\n                document = await db.inventory.insert_one(\n                    {\"item\": \"canvas\",\n                     \"qty\": 100,\n                     \"tags\": [\"cotton\"],\n                     \"size\": {\"h\": 28, \"w\": 35.5, \"uom\": \"cm\"}})\n \n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_insert_one())\n\n     - id: java-sync\n       content: |\n         Next, populate a Document with fields and an embedded document,\n         and insert it into the database.\n\n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n     #- id: java-async\n     #  content: |\n     #    .. literalinclude:: /driver-examples/AsyncDocumentationSamples.java\n     #       :language: java\n     #       :dedent: 8\n     #       :start-after: Start Example 1\n     #       :end-before: End Example 1\n\n     - id: nodejs\n       content: |   \n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 1\n            :end-before: End Example 1\n\n     # - id: php\n     #   content: |\n     #     .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #        :language: php\n     #        :dedent: 8\n     #        :start-after: Start Example 1\n     #        :end-before: End Example 1\n     # \n     # - id: perl\n     #   content: |\n     #     .. literalinclude:: /driver-examples/driver-examples.t\n     #        :language: perl\n     #        :dedent: 4\n     #        :start-after: Start Example 1\n     #        :end-before: End Example 1\n     # \n     # - id: ruby\n     #   content: |\n     #     .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #        :language: ruby\n     #        :dedent: 6\n     #        :start-after: Start Example 1\n     #        :end-before: End Example 1\n     # \n     # - id: scala\n     #   content: |\n     #     .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #        :language: scala\n     #        :dedent: 4\n     #        :start-after: Start Example 1\n     #        :end-before: End Example 1\n","static_assets":["f37356498e9e2305b60802a82d9f5a1bbc6ee9f55ca73a8dbaadf6b1be478829"]},"includes/drivers_close_connection":{"_id":"guides/andrew/master/includes/drivers_close_connection","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":3}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":3}},"value":"python"}],"children":[]},{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"motor"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":9}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"When you are done working with your MongoDB data, close your\nconnection to MongoDB:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"java","copyable":true,"value":"mongoClient.close();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n         \n     - id: python\n       content: |\n\n     - id: motor\n       content: |\n\n     - id: java-sync\n       content: |\n\n         When you are done working with your MongoDB data, close your\n         connection to MongoDB:\n\n         .. code-block:: java\n\n            mongoClient.close();\n\n    # - id: php\n    #   content: |\n    #\n    #    When you are done working with your MongoDB data, close your\n    #    connection to MongoDB:\n    #\n    #     .. code-block:: php\n    #\n    #        $test->close();\n    #\n    # - id: perl\n    #   content: |\n    #\n    #    When you are done working with your MongoDB data, close your\n    #    connection to MongoDB:\n    #\n    #     .. code-block:: perl\n    #\n    #        $client->disconnect;\n    #\n    # - id: ruby\n    #   content: |\n    #\n    #    When you are done working with your MongoDB data, close your\n    #    connection to MongoDB:\n    #\n    #     .. code-block:: ruby\n    #\n    #        client.close\n    #\n    # - id: scala\n    #   content: |\n    #\n    #    When you are done working with your MongoDB data, close your\n    #    connection to MongoDB:\n    #\n    #     .. code-block:: scala\n    #\n    #        mongoClient.close();\n    #\n","static_assets":[]},"includes/steps/insert_server":{"_id":"guides/andrew/master/includes/steps/insert_server","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to Your MongoDB Instance"}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" Database"}],"id":"switch-to-the-test-database"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Insert a Single Document"}],"id":"insert-a-single-document"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Now you are ready to create your first document in MongoDB."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"MongoDB stores documents as BSON, a binary form of JavaScript Object\nNotation "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"JSON"}]},{"type":"text","position":{"start":{"line":2}},"value":". The documents are stored in collections."}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/insert_one.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]},{"type":"directive","position":{"start":{"line":6}},"name":"include","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/includes/driver-example-insert-1.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":6}},"children":[]}]},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"Unlike SQL tables, MongoDB collections have dynamic schemas. That is,\na single collection can store documents that differ in shapes (i.e.\ncontain different fields and value types). And unlike SQL, no DDL\noperation is required to add or remove fields or modify field types.\nYou just update the documents directly."}]},{"type":"directive","position":{"start":{"line":14}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"While MongoDB does support dynamic collection definitions, you can\nalso enforce a uniform schema for the documents in your collection.\nSee "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"JSON Schema validation","position":{"start":{"line":19}}},"target":"schema-validation-json","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":19}},"name":"include","argument":[{"type":"text","position":{"start":{"line":19}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":19}},"children":[]}]}]}]}]},"source":"title: Connect to Your MongoDB Instance\nref: connect\nlevel: 4\nstepnum: 1\ncontent: |\n\n  .. include:: /includes/drivers_connect.rst\n---\ntitle: Switch to the ``test`` Database\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n\n  .. include:: /includes/bind_db.rst\n---\ntitle: Insert a Single Document\nref: access-mongos\nlevel: 4\nstepnum: 3\ncontent: |\n\n  Now you are ready to create your first document in MongoDB.\n\n  MongoDB stores documents as BSON, a binary form of JavaScript Object\n  Notation ``JSON``. The documents are stored in collections.\n\n  .. include:: /includes/insert_one.rst\n  .. include:: /includes/driver-example-insert-1.rst\n\n  Unlike SQL tables, MongoDB collections have dynamic schemas. That is,\n  a single collection can store documents that differ in shapes (i.e.\n  contain different fields and value types). And unlike SQL, no DDL\n  operation is required to add or remove fields or modify field types.\n  You just update the documents directly.\n\n  .. note::\n     While MongoDB does support dynamic collection definitions, you can\n     also enforce a uniform schema for the documents in your collection.\n     See :ref:`JSON Schema validation <schema-validation-json>`.\n\n  .. include:: /includes/drivers_close_connection.rst\n\n...\n","static_assets":[]},"server/insert":{"_id":"guides/andrew/master/server/insert","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"insert-data-into-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Insert Data into MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"go"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"level","argument":[{"type":"text","position":{"start":{"line":23}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":25}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"In this guide, you will insert data into MongoDB."}]}]},{"type":"directive","position":{"start":{"line":31}},"name":"time","argument":[{"type":"text","position":{"start":{"line":31}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":33}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":35}},"name":"include","argument":[{"type":"text","position":{"start":{"line":35}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":35}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":37}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":39}},"name":"include","argument":[{"type":"text","position":{"start":{"line":39}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":39}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":41}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":43}},"name":"include","argument":[{"type":"text","position":{"start":{"line":43}},"value":"/includes/steps/insert_server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":43}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":45}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"If you have successfully completed this guide, you have created your first MongoDB data.\nIn the next guide, you will check your work by retrieving the information you just saved."}]}]},{"type":"directive","position":{"start":{"line":50}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":52}},"children":[{"type":"text","position":{"start":{"line":52}},"value":"In this guide, you will read all documents from a collection in the MongoDB database."}]},{"type":"list","position":{"start":{"line":54}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":54}},"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"role","position":{"start":{"line":54}},"name":"doc","label":{"type":"text","value":"Read Data from MongoDB","position":{"start":{"line":49}}},"target":"/server/read","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":56}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":58}},"children":[{"type":"text","position":{"start":{"line":58}},"value":"For other CRUD guides:"}]},{"type":"list","position":{"start":{"line":60}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":60}},"children":[{"type":"role","position":{"start":{"line":60}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":61}},"children":[{"type":"role","position":{"start":{"line":61}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":62}},"children":[{"type":"role","position":{"start":{"line":62}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":63}},"children":[{"type":"role","position":{"start":{"line":63}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":64}},"children":[{"type":"role","position":{"start":{"line":64}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Insert Data into MongoDB\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   languages:\n     go \n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n   result_description:\n     In this guide, you will insert data into MongoDB.\n   time: 15\n   prerequisites:\n     .. include:: /includes/prereqs_read_CRUD.rst\n   check_your_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n     .. include:: /includes/steps/insert_server.rst\n   summary:\n     If you have successfully completed this guide, you have created your first MongoDB data.\n     In the next guide, you will check your work by retrieving the information you just saved.\n   whats_next:\n      In this guide, you will read all documents from a collection in the MongoDB database.\n\n      * :doc:`Read Data from MongoDB </server/read>`\n   seealso:\n     For other CRUD guides:\n\n     - :doc:`/server/read`\n     - :doc:`/server/read_operators`\n     - :doc:`/server/read_queries`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"includes/driver-example-query-7":{"_id":"guides/andrew/master/includes/driver-example-query-7","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( {} )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Select the "},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"test","position":{"start":{"line":119}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":" database in the list of available databases."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Then select the "},{"type":"role","position":{"start":{"line":2}},"name":"guilabel","label":{"type":"text","value":"inventory","position":{"start":{"line":121}}},"children":[]},{"type":"text","position":{"start":{"line":2}},"value":" collection to view all documents in the collection."}]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{},\n)\n"}]},{"type":"directive","position":{"start":{"line":23}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":23}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({})"}]},{"type":"directive","position":{"start":{"line":31}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":31}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap the call and run it in an asyncio loop:"}]},{"type":"code","position":{"start":{"line":8}},"lang":"python","copyable":true,"value":"async def do_find():\n    cursor = db.inventory.find({})\n    async for doc in cursor:\n       pprint.pprint(doc)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_find())"}]},{"type":"directive","position":{"start":{"line":51}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":51}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to create the MongoCollection object you would like to query against."}]},{"type":"code","position":{"start":{"line":2}},"lang":"sh","copyable":true,"value":"MongoCollection<Document> collection = db.getCollection(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Then query the collection for all documents by passing an empty document\nto the find() method."}]},{"type":"code","lang":"java","copyable":false,"value":"FindIterable<Document> findIterable = collection.find(new Document());"}]},{"type":"directive","position":{"start":{"line":69}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":69}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({});"}]},{"type":"directive","position":{"start":{"line":77}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":77}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Empty;\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( {} )\n\n     - id: compass\n       content: |\n\n         Select the :guilabel:`test` database in the list of available databases.\n\n         Then select the :guilabel:`inventory` collection to view all documents in the collection.\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n         For completeness, this is how you might wrap the call and run it in an asyncio loop:\n\n         .. code-block:: python\n            \n            async def do_find():\n                cursor = db.inventory.find({})\n                async for doc in cursor:\n                   pprint.pprint(doc)\n\n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_find())\n\n     - id: java-sync\n       content: |\n \n         First you will need to create the MongoCollection object you would like to query against.\n\n         .. code-block:: sh\n\n            MongoCollection<Document> collection = db.getCollection(\"inventory\");\n          \n         Then query the collection for all documents by passing an empty document\n         to the find() method.\n         \n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 7\n            :end-before: End Example 7\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 7\n     #       :end-before: End Example 7\n\n     #- id: perl\n     #  content: |\n     #   .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 7\n     #       :end-before: End Example 7\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 7\n     #       :end-before: End Example 7\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 7\n     #       :end-before: End Example 7\n\n\n","static_assets":[]},"includes/find_all":{"_id":"guides/andrew/master/includes/find_all","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/driver-example-query-7.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}],"position":{"start":{"line":0}}},"source":".. include:: /includes/driver-example-query-7.rst","static_assets":[]},"for cursor.Next(context.TODO()) {\n    elem := &bson.D{}\n    if err := cursor.Decode(elem); err != nil {\n            log.Fatal(err)\n    }\n    // ideally, you would do something with elem....\n    // but for now just print it to the console\n    fmt.Println(elem)\n}":{},"includes/iterate_all_noshellcursor":{"_id":"guides/andrew/master/includes/iterate_all_noshellcursor","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"This query does not require cursor iteration in "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"mongo"}]},{"type":"text","position":{"start":{"line":0}},"value":" shell\nbecause the shell returns up to 20 results."}]}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You will see a list of all of the documents that match your\ncriteria in the query window."}]}]},{"type":"directive","position":{"start":{"line":14}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":14}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"from pprint import pprint\n\nfor inventory in cursor:\n     pprint(inventory)"}]},{"type":"directive","position":{"start":{"line":24}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":24}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"for cursor.Next(context.TODO()) {\n    elem := &bson.D{}\n    if err := cursor.Decode(elem); err != nil {\n            log.Fatal(err)\n    }\n    // ideally, you would do something with elem....\n    // but for now just print it to the console\n    fmt.Println(elem)\n}"}]},{"type":"directive","position":{"start":{"line":40}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":40}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the code snippet above you may have noticed the code that\niterates the results and prints them to the command line:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"python","copyable":true,"value":"async for doc in cursor:\n    print(doc)"}]},{"type":"directive","position":{"start":{"line":51}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":51}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You can implement a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"com.mongodb.Block"}]},{"type":"text","position":{"start":{"line":0}},"value":" to print the results\nof the iteration"}]},{"type":"code","position":{"start":{"line":3}},"lang":"java","copyable":true,"value":"Block<Document> printBlock = new Block<Document>() {\n    @Override\n    public void apply(final Document document) {\n        System.out.println(document.toJson());\n    }\n};"},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"Then iterate the cursor for documents, passing the\n"},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"printBlock"}]},{"type":"text","position":{"start":{"line":12}},"value":" as a parameter."}]},{"type":"code","position":{"start":{"line":15}},"lang":"java","copyable":true,"value":"findIterable.forEach(printBlock);"}]},{"type":"directive","position":{"start":{"line":73}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":73}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"function iterateFunc(doc) {\n   console.log(JSON.stringify(doc, null, 4));\n}\n\nfunction errorFunc(error) {\n   console.log(error);\n}\n\ncursor.forEach(iterateFunc, errorFunc);"}]},{"type":"directive","position":{"start":{"line":89}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":89}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"foreach (var doc in result) {\n   Console.WriteLine(doc.ToJson());\n}"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         This query does not require cursor iteration in ``mongo`` shell\n         because the shell returns up to 20 results.\n\n     - id: compass\n       content: |\n\n         You will see a list of all of the documents that match your\n         criteria in the query window.\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            from pprint import pprint\n                \n            for inventory in cursor:\n                 pprint(inventory)\n\n     - id: go\n       content: |\n         \n         .. code-block:: go\n          \n            for cursor.Next(context.TODO()) {\n                elem := &bson.D{}\n                if err := cursor.Decode(elem); err != nil {\n                        log.Fatal(err)\n                }\n                // ideally, you would do something with elem....\n                // but for now just print it to the console\n                fmt.Println(elem)\n            }\n\n\n     - id: motor\n       content: |\n\n         In the code snippet above you may have noticed the code that\n         iterates the results and prints them to the command line:\n         \n         .. code-block:: python\n\n            async for doc in cursor:\n                print(doc)\n\n     - id: java-sync\n       content: |\n         \n         You can implement a ``com.mongodb.Block`` to print the results\n         of the iteration\n         \n         .. code-block:: java\n         \n            Block<Document> printBlock = new Block<Document>() {\n                @Override\n                public void apply(final Document document) {\n                    System.out.println(document.toJson());\n                }\n            };\n         \n         Then iterate the cursor for documents, passing the\n         ``printBlock`` as a parameter.\n         \n         .. code-block:: java\n       \n            findIterable.forEach(printBlock);\n\n     - id: nodejs\n       content: |\n         .. code-block:: javascript\n\n            function iterateFunc(doc) {\n               console.log(JSON.stringify(doc, null, 4));\n            }\n\n            function errorFunc(error) {\n               console.log(error);\n            }\n            \n            cursor.forEach(iterateFunc, errorFunc);\n            \n\n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            foreach (var doc in result) {\n               Console.WriteLine(doc.ToJson());\n            }\n\n","static_assets":[]},"images/compass-find-all.png#153311d5e645d65077fb8ed70defb1f3988b085405ad67c33755678430bece41":{},"includes/results_read1":{"_id":"guides/andrew/master/includes/results_read1","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":1}},"name":"note","argument":[{"type":"text","position":{"start":{"line":1}},"value":"Your "},{"type":"role","position":{"start":{"line":1}},"name":"method","target":"ObjectId","children":[]},{"type":"text","position":{"start":{"line":1}},"value":" values will differ from those shown."}],"children":[]},{"type":"directive","position":{"start":{"line":3}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5a9854915c8eb0d368732649\"),\n  \"item\" : \"canvas\",\n  \"qty\" : 100,\n  \"tags\" : [ \"cotton\" ],\n  \"size\" : {\n              \"h\" : 28,\n              \"w\" : 35.5,\n              \"uom\" : \"cm\"\n           }\n}"}]},{"type":"directive","position":{"start":{"line":22}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":22}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-all.png"}],"options":{"alt":"Screenshot of Compass result grid","figwidth":"500px","checksum":"153311d5e645d65077fb8ed70defb1f3988b085405ad67c33755678430bece41"},"children":[]}]},{"type":"directive","position":{"start":{"line":29}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":29}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada5bdeaea650851c715601'),\nu'item': u'canvas',\nu'qty': 101,\nu'size': {u'h': 28, u'uom': u'cm', u'w': 35.5},\nu'tags': [u'cotton']}"}]},{"type":"directive","position":{"start":{"line":40}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":40}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3cedaaca9a5662c1238181\")} {item canvas} {qty 100} {tags [cotton]} {size [{h 28} {w 35.5} {uom cm}]}]"}]},{"type":"directive","position":{"start":{"line":47}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":47}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb4ee0aea650d05134bf62'), 'item': 'canvas', 'qty': 100, 'tags': ['cotton'], 'size': {'h': 28, 'w': 35.5, 'uom': 'cm'}}"}]},{"type":"directive","position":{"start":{"line":54}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":54}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada85ae9b267e9ac4d84105\" }, \"item\" : \"canvas\", \"qty\" : 100, \"tags\" : [\"cotton\"], \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" } }"}]},{"type":"directive","position":{"start":{"line":61}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":61}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade4124aac4f92cf89f53aa,\n  item: 'journal',\n  qty: 25,\n  size: { h: 14, w: 21, uom: 'cm' },\n  status: 'A' }"}]},{"type":"directive","position":{"start":{"line":71}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":71}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade1ebd9299811bc223e797\"), \"item\" : \"canvas\", \"qty\" : 100, \"tags\" : [\"cotton\"], \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" } #}"}]}]}],"position":{"start":{"line":0}}},"source":"\n.. note:: Your :method:`ObjectId` values will differ from those shown.\n\n.. tabs-drivers::\n\n   tabs:\n     \n     - id: shell\n       content: |\n\n         .. code-block:: javascript\n  \n            { \"_id\" : ObjectId(\"5a9854915c8eb0d368732649\"), \n              \"item\" : \"canvas\", \n              \"qty\" : 100, \n              \"tags\" : [ \"cotton\" ], \n              \"size\" : { \n                          \"h\" : 28, \n                          \"w\" : 35.5, \n                          \"uom\" : \"cm\" \n                       } \n            }\n\n     - id: compass\n       content: |\n       \n         .. figure:: /images/compass-find-all.png\n            :alt: Screenshot of Compass result grid\n            :figwidth: 500px\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            {u'_id': ObjectId('5ada5bdeaea650851c715601'),\n            u'item': u'canvas',\n            u'qty': 101,\n            u'size': {u'h': 28, u'uom': u'cm', u'w': 35.5},\n            u'tags': [u'cotton']}\n\n     - id: go\n       content: |\n         \n         .. code-block:: go\n    \n            &[{_id ObjectID(\"5c3cedaaca9a5662c1238181\")} {item canvas} {qty 100} {tags [cotton]} {size [{h 28} {w 35.5} {uom cm}]}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5adb4ee0aea650d05134bf62'), 'item': 'canvas', 'qty': 100, 'tags': ['cotton'], 'size': {'h': 28, 'w': 35.5, 'uom': 'cm'}}\n\n     - id: java-sync\n       content: |\n         \n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada85ae9b267e9ac4d84105\" }, \"item\" : \"canvas\", \"qty\" : 100, \"tags\" : [\"cotton\"], \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" } }\n\n     - id: nodejs\n       content: |\n         .. code-block:: javascript\n            \n            { _id: 5ade4124aac4f92cf89f53aa,\n              item: 'journal',\n              qty: 25,\n              size: { h: 14, w: 21, uom: 'cm' },\n              status: 'A' }\n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade1ebd9299811bc223e797\"), \"item\" : \"canvas\", \"qty\" : 100, \"tags\" : [\"cotton\"], \"size\" : { \"h\" : 28, \"w\" : 35.5, \"uom\" : \"cm\" } #}\n","static_assets":["153311d5e645d65077fb8ed70defb1f3988b085405ad67c33755678430bece41"]},"includes/steps/read_server":{"_id":"guides/andrew/master/includes/steps/read_server","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance."}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}],"id":"switch-to-the-test-database"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the database you wish to query. In this case we will be\nusing "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Retrieve all documents in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection."}],"id":"retrieve-all-documents-in-the-inventory-collection"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/find_all.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all_noshellcursor.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you loaded the data from "},{"type":"role","position":{"start":{"line":0}},"name":"doc","target":"/server/insert","children":[]},{"type":"text","position":{"start":{"line":0}},"value":", you should\nsee output that resembles the following:"}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/results_read1.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]}]},"source":"title: Connect to your MongoDB instance.\nref: connect\nlevel: 4\nstepnum: 1\ncontent: |\n  .. include:: /includes/drivers_connect.rst\n---\ntitle: Switch to the ``test`` database.\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n  \n  Switch to the database you wish to query. In this case we will be\n  using ``test``.\n  \n  .. include:: /includes/bind_db.rst\n\n---\ntitle: Retrieve all documents in the ``inventory`` collection.\nref: find-all\nlevel: 4\nstepnum: 3\ncontent: |\n  .. include:: /includes/find_all.rst\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 4\ncontent: |\n  .. include:: /includes/iterate_all_noshellcursor.rst\n\n---\ntitle: Check your results.\nref: check-find-all\nlevel: 4\nstepnum: 5\ncontent: |\n  \n  If you loaded the data from :doc:`/server/insert`, you should\n  see output that resembles the following:\n\n  .. include:: /includes/results_read1.rst\n\n  .. include:: /includes/drivers_close_connection.rst\n...\n","static_assets":[]},"server/read":{"_id":"guides/andrew/master/server/read","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"read-data-from-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Read Data from MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"go"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"level","argument":[{"type":"text","position":{"start":{"line":23}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":25}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"You will retrieve data from MongoDB."}]}]},{"type":"directive","position":{"start":{"line":31}},"name":"time","argument":[{"type":"text","position":{"start":{"line":31}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":33}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":35}},"name":"include","argument":[{"type":"text","position":{"start":{"line":35}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":35}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":37}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":39}},"name":"include","argument":[{"type":"text","position":{"start":{"line":39}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":39}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":41}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":43}},"name":"include","argument":[{"type":"text","position":{"start":{"line":43}},"value":"/includes/steps/read_server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":43}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":45}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"If you have successfully completed this guide, you have retrieved\ndata from MongoDB. In the next guide you will use queries to\nfind data in a "},{"type":"role","position":{"start":{"line":47}},"name":"term","target":"collection","children":[]},{"type":"text","position":{"start":{"line":47}},"value":" that matches specified\ncriteria."}]}]},{"type":"directive","position":{"start":{"line":52}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"In the next guide, you'll learn how to retrieve data from MongoDB using criteria."}]},{"type":"list","position":{"start":{"line":56}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":56}},"children":[{"type":"paragraph","position":{"start":{"line":56}},"children":[{"type":"role","position":{"start":{"line":56}},"name":"doc","label":{"type":"text","value":"Read Data from MongoDB with Queries","position":{"start":{"line":51}}},"target":"/server/read_queries","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":58}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":60}},"children":[{"type":"text","position":{"start":{"line":60}},"value":"For other CRUD guides:"}]},{"type":"list","position":{"start":{"line":62}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":62}},"children":[{"type":"paragraph","position":{"start":{"line":62}},"children":[{"type":"role","position":{"start":{"line":62}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":62}},"children":[{"type":"paragraph","position":{"start":{"line":63}},"children":[{"type":"role","position":{"start":{"line":63}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":62}},"children":[{"type":"paragraph","position":{"start":{"line":64}},"children":[{"type":"role","position":{"start":{"line":64}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":62}},"children":[{"type":"paragraph","position":{"start":{"line":65}},"children":[{"type":"role","position":{"start":{"line":65}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":62}},"children":[{"type":"paragraph","position":{"start":{"line":66}},"children":[{"type":"role","position":{"start":{"line":66}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Read Data from MongoDB\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   languages:\n     go\n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n   result_description:\n      You will retrieve data from MongoDB.\n   time: 15\n   prerequisites:\n     .. include:: /includes/prereqs_read_CRUD.rst\n   check_your_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n     .. include:: /includes/steps/read_server.rst\n   summary:\n     If you have successfully completed this guide, you have retrieved\n     data from MongoDB. In the next guide you will use queries to\n     find data in a :term:`collection` that matches specified\n     criteria.\n   whats_next:\n     In the next guide, you'll learn how to retrieve data from MongoDB using criteria.\n\n     * :doc:`Read Data from MongoDB with Queries </server/read_queries>`\n   seealso:\n      For other CRUD guides:\n\n      - :doc:`/server/insert`\n      - :doc:`/server/read_queries`\n      - :doc:`/server/read_operators`\n      - :doc:`/server/update`\n      - :doc:`/server/delete`\n\n","static_assets":[]},"db.collection('inventory').insertMany([\n  { item: \"journal\",\n    qty: 25,\n    size: { h: 14, w: 21, uom: \"cm\" },\n    status: \"A\"},\n  { item: \"notebook\",\n    qty: 50,\n    size: { h: 8.5, w: 11, uom: \"in\" },\n    status: \"A\"},\n  { item: \"paper\",\n    qty: 100,\n    size: { h: 8.5, w: 11, uom: \"in\" },\n    status: \"D\"},\n  { item: \"planner\",\n    qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" },\n    status: \"D\"},\n  { item: \"postcard\",\n    qty: 45,\n    size: { h: 10, w: 15.25, uom: \"cm\" },\n    status: \"A\"}\n])\n.then(function(result) {\n  // process result\n})":{},"includes/driver-example-query-14":{"_id":"guides/andrew/master/includes/driver-example-query-14","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"db.inventory.insertMany( [\n   { \"item\": \"journal\", \"qty\": 25, \"size\": { \"h\": 14, \"w\": 21, \"uom\": \"cm\" }, \"status\": \"A\" },\n   { \"item\": \"notebook\", \"qty\": 50, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"A\" },\n   { \"item\": \"paper\", \"qty\": 100, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"D\" },\n   { \"item\": \"planner\", \"qty\": 75, \"size\": { \"h\": 22.85, \"w\": 30, \"uom\": \"cm\" }, \"status\": \"D\" },\n   { \"item\": \"postcard\", \"qty\": 45, \"size\": { \"h\": 10, \"w\": 15.25, \"uom\": \"cm\" }, \"status\": \"A\" }\n]);"}]},{"type":"directive","position":{"start":{"line":14}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":14}},"value":"compass"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"[\n    { \"item\": \"journal\", \"qty\": 25, \"size\": { \"h\": 14, \"w\": 21, \"uom\": \"cm\" }, \"status\": \"A\" },\n    { \"item\": \"notebook\", \"qty\": 50, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"A\" },\n    { \"item\": \"paper\", \"qty\": 100, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"D\" },\n    { \"item\": \"planner\", \"qty\": 75, \"size\": { \"h\": 22.85, \"w\": 30, \"uom\": \"cm\" }, \"status\": \"D\" },\n    { \"item\": \"postcard\", \"qty\": 45, \"size\": { \"h\": 10, \"w\": 15.25, \"uom\": \"cm\" }, \"status\": \"A\" }\n]"},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"For instructions on inserting documents in MongoDB Compass, see\n"},{"type":"role","position":{"start":{"line":10}},"name":"doc","label":{"type":"text","value":"Insert Documents","position":{"start":{"line":181}}},"target":"/server/insert","children":[]},{"type":"text","position":{"start":{"line":10}},"value":"."}]}]},{"type":"directive","position":{"start":{"line":29}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":29}},"value":"python"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"class","argument":[{"type":"text","position":{"start":{"line":0}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"python","copyable":false,"value":"# Subdocument key order matters in a few of these examples so we have\n# to use bson.son.SON instead of a Python dict.\nfrom bson.son import SON\ndb.inventory.insert_many([\n    {\"item\": \"journal\",\n     \"qty\": 25,\n     \"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")]),\n     \"status\": \"A\"},\n    {\"item\": \"notebook\",\n     \"qty\": 50,\n     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n     \"status\": \"A\"},\n    {\"item\": \"paper\",\n     \"qty\": 100,\n     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n     \"status\": \"D\"},\n    {\"item\": \"planner\",\n     \"qty\": 75,\n     \"size\": SON([(\"h\", 22.85), (\"w\", 30), (\"uom\", \"cm\")]),\n     \"status\": \"D\"},\n    {\"item\": \"postcard\",\n     \"qty\": 45,\n     \"size\": SON([(\"h\", 10), (\"w\", 15.25), (\"uom\", \"cm\")]),\n     \"status\": \"A\"}])"}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"go"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"class","argument":[{"type":"text","position":{"start":{"line":0}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"go","copyable":false,"value":"\ndocs := []interface{}{\n\tbson.D{\n\t\t{\"item\", \"journal\"},\n\t\t{\"qty\", 25},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 14},\n\t\t\t{\"w\", 21},\n\t\t\t{\"uom\", \"cm\"},\n\t\t}},\n\t\t{\"status\", \"A\"},\n\t},\n\tbson.D{\n\t\t{\"item\", \"notebook\"},\n\t\t{\"qty\", 50},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 8.5},\n\t\t\t{\"w\", 11},\n\t\t\t{\"uom\", \"in\"},\n\t\t}},\n\t\t{\"status\", \"A\"},\n\t},\n\tbson.D{\n\t\t{\"item\", \"paper\"},\n\t\t{\"qty\", 100},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 8.5},\n\t\t\t{\"w\", 11},\n\t\t\t{\"uom\", \"in\"},\n\t\t}},\n\t\t{\"status\", \"D\"},\n\t},\n\tbson.D{\n\t\t{\"item\", \"planner\"},\n\t\t{\"qty\", 75},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 22.85},\n\t\t\t{\"w\", 30},\n\t\t\t{\"uom\", \"cm\"},\n\t\t}},\n\t\t{\"status\", \"D\"},\n\t},\n\tbson.D{\n\t\t{\"item\", \"postcard\"},\n\t\t{\"qty\", 45},\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 10},\n\t\t\t{\"w\", 15.25},\n\t\t\t{\"uom\", \"cm\"},\n\t\t}},\n\t\t{\"status\", \"A\"},\n\t},\n}\n\nresult, err := coll.InsertMany(context.Background(), docs)\n"}]},{"type":"directive","position":{"start":{"line":47}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":47}},"value":"motor"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"class","argument":[{"type":"text","position":{"start":{"line":0}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"python","copyable":false,"value":"# Subdocument key order matters in a few of these examples so we have\n# to use bson.son.SON instead of a Python dict.\nfrom bson.son import SON\nawait db.inventory.insert_many([\n    {\"item\": \"journal\",\n     \"qty\": 25,\n     \"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")]),\n     \"status\": \"A\"},\n    {\"item\": \"notebook\",\n     \"qty\": 50,\n     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n     \"status\": \"A\"},\n    {\"item\": \"paper\",\n     \"qty\": 100,\n     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n     \"status\": \"D\"},\n    {\"item\": \"planner\",\n     \"qty\": 75,\n     \"size\": SON([(\"h\", 22.85), (\"w\", 30), (\"uom\", \"cm\")]),\n     \"status\": \"D\"},\n    {\"item\": \"postcard\",\n     \"qty\": 45,\n     \"size\": SON([(\"h\", 10), (\"w\", 15.25), (\"uom\", \"cm\")]),\n     \"status\": \"A\"}])"},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":10}},"lang":"python","copyable":true,"value":"async def do_insert_many():\n    # Subdocument key order matters in a few of these examples so we have\n    # to use bson.son.SON instead of a Python dict.\n    from bson.son import SON\n    await db.inventory.insert_many([\n        {\"item\": \"journal\",\n         \"qty\": 25,\n         \"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")]),\n         \"status\": \"A\"},\n        {\"item\": \"notebook\",\n         \"qty\": 50,\n         \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n         \"status\": \"A\"},\n        {\"item\": \"paper\",\n         \"qty\": 100,\n         \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n         \"status\": \"D\"},\n        {\"item\": \"planner\",\n         \"qty\": 75,\n         \"size\": SON([(\"h\", 22.85), (\"w\", 30), (\"uom\", \"cm\")]),\n         \"status\": \"D\"},\n        {\"item\": \"postcard\",\n         \"qty\": 45,\n         \"size\": SON([(\"h\", 10), (\"w\", 15.25), (\"uom\", \"cm\")]),\n         \"status\": \"A\"}])\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_insert_many())"}]},{"type":"directive","position":{"start":{"line":90}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":90}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to create the MongoCollection object you would like to query against."}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"MongoCollection<Document> collection = db.getCollection(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Now add the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"insertMany"}]},{"type":"text","position":{"start":{"line":6}},"value":" call."}]},{"type":"directive","position":{"start":{"line":8}},"name":"class","argument":[{"type":"text","position":{"start":{"line":8}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"java","copyable":false,"value":"collection.insertMany(asList(\n        Document.parse(\"{ item: 'journal', qty: 25, size: { h: 14, w: 21, uom: 'cm' }, status: 'A' }\"),\n        Document.parse(\"{ item: 'notebook', qty: 50, size: { h: 8.5, w: 11, uom: 'in' }, status: 'A' }\"),\n        Document.parse(\"{ item: 'paper', qty: 100, size: { h: 8.5, w: 11, uom: 'in' }, status: 'D' }\"),\n        Document.parse(\"{ item: 'planner', qty: 75, size: { h: 22.85, w: 30, uom: 'cm' }, status: 'D' }\"),\n        Document.parse(\"{ item: 'postcard', qty: 45, size: { h: 10, w: 15.25, uom: 'cm' }, status: 'A' }\")\n));"}]},{"type":"directive","position":{"start":{"line":108}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":108}},"value":"nodejs"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"class","argument":[{"type":"text","position":{"start":{"line":0}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').insertMany([\n  { item: \"journal\",\n    qty: 25,\n    size: { h: 14, w: 21, uom: \"cm\" },\n    status: \"A\"},\n  { item: \"notebook\",\n    qty: 50,\n    size: { h: 8.5, w: 11, uom: \"in\" },\n    status: \"A\"},\n  { item: \"paper\",\n    qty: 100,\n    size: { h: 8.5, w: 11, uom: \"in\" },\n    status: \"D\"},\n  { item: \"planner\",\n    qty: 75, size: { h: 22.85, w: 30, uom: \"cm\" },\n    status: \"D\"},\n  { item: \"postcard\",\n    qty: 45,\n    size: { h: 10, w: 15.25, uom: \"cm\" },\n    status: \"A\"}\n])\n.then(function(result) {\n  // process result\n})"}]},{"type":"directive","position":{"start":{"line":153}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":153}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to initialize the collection."}]},{"type":"code","position":{"start":{"line":2}},"lang":"c#","copyable":true,"value":"var collection = database.GetCollection<BsonDocument>(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Next create the array of BsonDocuments and pass it to the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"insertMany"}]},{"type":"text","position":{"start":{"line":6}},"value":" call on "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"collection"}]},{"type":"text","position":{"start":{"line":6}},"value":"."}]},{"type":"directive","position":{"start":{"line":8}},"name":"class","argument":[{"type":"text","position":{"start":{"line":8}},"value":"copyable-code"}],"children":[]},{"type":"code","lang":"c#","copyable":false,"value":"var documents = new[]\n{\n    new BsonDocument\n    {\n        { \"item\", \"journal\" },\n        { \"qty\", 25 },\n        { \"size\", new BsonDocument { { \"h\", 14 }, { \"w\", 21 }, { \"uom\", \"cm\" } } },\n        { \"status\", \"A\" }\n    },\n    new BsonDocument\n    {\n        { \"item\", \"notebook\" },\n        { \"qty\", 50 },\n        { \"size\", new BsonDocument { { \"h\", 8.5 }, { \"w\", 11 }, { \"uom\", \"in\" } } },\n        { \"status\", \"A\" }\n    },\n    new BsonDocument\n    {\n        { \"item\", \"paper\" },\n        { \"qty\", 100 },\n        { \"size\", new BsonDocument { { \"h\", 8.5 }, { \"w\", 11 }, { \"uom\", \"in\" } } },\n        { \"status\", \"D\" }\n    },\n    new BsonDocument\n    {\n        { \"item\", \"planner\" },\n        { \"qty\", 75 },\n        { \"size\", new BsonDocument { { \"h\", 22.85 }, { \"w\", 30 }, { \"uom\", \"cm\" } } },\n        { \"status\", \"D\" }\n    },\n    new BsonDocument\n    {\n        { \"item\", \"postcard\" },\n        { \"qty\", 45 },\n        { \"size\", new BsonDocument { { \"h\", 10 }, { \"w\", 15.25 }, { \"uom\", \"cm\" } } },\n        { \"status\", \"A\" } },\n};\ncollection.InsertMany(documents);"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            db.inventory.insertMany( [\n               { \"item\": \"journal\", \"qty\": 25, \"size\": { \"h\": 14, \"w\": 21, \"uom\": \"cm\" }, \"status\": \"A\" },\n               { \"item\": \"notebook\", \"qty\": 50, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"A\" },\n               { \"item\": \"paper\", \"qty\": 100, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"D\" },\n               { \"item\": \"planner\", \"qty\": 75, \"size\": { \"h\": 22.85, \"w\": 30, \"uom\": \"cm\" }, \"status\": \"D\" },\n               { \"item\": \"postcard\", \"qty\": 45, \"size\": { \"h\": 10, \"w\": 15.25, \"uom\": \"cm\" }, \"status\": \"A\" }\n            ]);\n\n     - id: compass\n       content: |\n         .. code-block:: javascript\n\n           [\n               { \"item\": \"journal\", \"qty\": 25, \"size\": { \"h\": 14, \"w\": 21, \"uom\": \"cm\" }, \"status\": \"A\" },\n               { \"item\": \"notebook\", \"qty\": 50, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"A\" },\n               { \"item\": \"paper\", \"qty\": 100, \"size\": { \"h\": 8.5, \"w\": 11, \"uom\": \"in\" }, \"status\": \"D\" },\n               { \"item\": \"planner\", \"qty\": 75, \"size\": { \"h\": 22.85, \"w\": 30, \"uom\": \"cm\" }, \"status\": \"D\" },\n               { \"item\": \"postcard\", \"qty\": 45, \"size\": { \"h\": 10, \"w\": 15.25, \"uom\": \"cm\" }, \"status\": \"A\" }\n           ]\n\n         For instructions on inserting documents in MongoDB Compass, see\n         :doc:`Insert Documents </server/insert>`.\n\n     - id: python\n       content: |\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 14\n            :end-before: End Example 14\n\n     - id: go\n       content: |\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 14\n            :end-before: End Example 14\n\n     - id: motor\n       content: |\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 14\n            :end-before: End Example 14\n        \n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_insert_many():\n                # Subdocument key order matters in a few of these examples so we have\n                # to use bson.son.SON instead of a Python dict.\n                from bson.son import SON\n                await db.inventory.insert_many([\n                    {\"item\": \"journal\",\n                     \"qty\": 25,\n                     \"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")]),\n                     \"status\": \"A\"},\n                    {\"item\": \"notebook\",\n                     \"qty\": 50,\n                     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n                     \"status\": \"A\"},\n                    {\"item\": \"paper\",\n                     \"qty\": 100,\n                     \"size\": SON([(\"h\", 8.5), (\"w\", 11), (\"uom\", \"in\")]),\n                     \"status\": \"D\"},\n                    {\"item\": \"planner\",\n                     \"qty\": 75,\n                     \"size\": SON([(\"h\", 22.85), (\"w\", 30), (\"uom\", \"cm\")]),\n                     \"status\": \"D\"},\n                    {\"item\": \"postcard\",\n                     \"qty\": 45,\n                     \"size\": SON([(\"h\", 10), (\"w\", 15.25), (\"uom\", \"cm\")]),\n                     \"status\": \"A\"}])\n    \n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_insert_many())\n\n     - id: java-sync\n       content: |\n\n         First you will need to create the MongoCollection object you would like to query against.\n\n         .. code-block:: java\n\n            MongoCollection<Document> collection = db.getCollection(\"inventory\");\n\n         Now add the ``insertMany`` call.\n\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 14\n            :end-before: End Example 14\n\n     - id: nodejs\n       content: |\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 14\n            :end-before: End Example 14\n\n     #- id: php\n     #  content: |\n     #    .. class:: copyable-code\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 14\n     #       :end-before: End Example 14\n\n     #- id: perl\n     #  content: |\n     #    .. class:: copyable-code\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 14\n     #       :end-before: End Example 14\n\n     #- id: ruby\n     #  content: |\n     #    .. class:: copyable-code\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 6\n     #       :start-after: Start Example 14\n     #       :end-before: End Example 14\n\n     #- id: scala\n     #  content: |\n     #    .. class:: copyable-code\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 14\n     #       :end-before: End Example 14\n\n     - id: csharp\n       content: |\n\n         First you will need to initialize the collection.\n\n         .. code-block:: c#\n\n            var collection = database.GetCollection<BsonDocument>(\"inventory\");\n\n         Next create the array of BsonDocuments and pass it to the ``insertMany`` call on ``collection``.\n\n         .. class:: copyable-code\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 14\n            :end-before: End Example 14\n","static_assets":[]},"includes/driver-example-query-9":{"_id":"guides/andrew/master/includes/driver-example-query-9","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { status: \"D\" } )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":113}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ status: \"D\" }"}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{{\"status\", \"D\"}},\n)\n"}]},{"type":"directive","position":{"start":{"line":26}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":26}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"status\": \"D\"})"}]},{"type":"directive","position":{"start":{"line":34}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":34}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"status\": \"D\"})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_status():\n    cursor = db.inventory.find({\"status\": \"D\"})\n    async for doc in cursor:\n        åpprint.pprint(doc)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_status())"}]},{"type":"directive","position":{"start":{"line":55}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":55}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(eq(\"status\", \"D\"));"}]},{"type":"directive","position":{"start":{"line":64}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":64}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ status: \"D\" });"}]},{"type":"directive","position":{"start":{"line":104}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":104}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"status\", \"D\");\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { status: \"D\" } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { status: \"D\" }\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 9\n            :end-before: End Example 9\n\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 9\n            :end-before: End Example 9\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 9\n            :end-before: End Example 9\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_retrieve_status():\n                cursor = db.inventory.find({\"status\": \"D\"})\n                async for doc in cursor:\n                    åpprint.pprint(doc)\n            \n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_status())\n\n     - id: java-sync\n       content: |\n         \n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 9\n            :end-before: End Example 9\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 9\n            :end-before: End Example 9\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 9\n     #       :end-before: End Example 9\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 9\n     #       :end-before: End Example 9\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 9\n     #       :end-before: End Example 9\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 9\n     #       :end-before: End Example 9\n\n     - id: csharp\n       content: |\n    \n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 9\n            :end-before: End Example 9\n","static_assets":[]},"includes/iterate_all":{"_id":"guides/andrew/master/includes/iterate_all","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"By default, the shell will only show the first 20 documents\nand return a cursor. This is adequate when the result set only\ncontains a few documents."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"If your result set is larger, to see "},{"type":"emphasis","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"all"}]},{"type":"text","position":{"start":{"line":4}},"value":" of the results of\nyour query, iterate the cursor."}]},{"type":"code","position":{"start":{"line":7}},"lang":"sh","copyable":true,"value":"while (myCursor.hasNext()) {\n    print(tojson(myCursor.next()));\n}"},{"type":"directive","position":{"start":{"line":13}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You can also manually iterate through the results by\ntyping "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"it"}]},{"type":"text","position":{"start":{"line":0}},"value":" when prompted by the shell."}]}]}]},{"type":"directive","position":{"start":{"line":21}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":21}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You will see a list of all of the documents that match your\ncriteria in the query window."}]}]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"from pprint import pprint\n\nfor inventory in cursor:\n     pprint(inventory)"}]},{"type":"directive","position":{"start":{"line":37}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":37}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the code snippet above you may have noticed the code that\niterates the results and prints them to the command line:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"python","copyable":true,"value":"async for doc in cursor:\n    print(doc)"}]},{"type":"directive","position":{"start":{"line":48}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":48}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate the results and print them to the command line:"}]},{"type":"code","position":{"start":{"line":2}},"lang":"go","copyable":true,"value":"for cursor.Next(context.TODO()) {\n    elem := &bson.D{}\n    if err := cursor.Decode(elem); err != nil {\n            log.Fatal(err)\n    }\n    // ideally, you would do something with elem....\n    // but for now just print it to the console\n    fmt.Println(elem)\n}"}]},{"type":"directive","position":{"start":{"line":65}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":65}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You can implement a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"com.mongodb.Block"}]},{"type":"text","position":{"start":{"line":0}},"value":" to print the results\nof the iteration"}]},{"type":"code","position":{"start":{"line":3}},"lang":"java","copyable":true,"value":"Block<Document> printBlock = new Block<Document>() {\n    @Override\n    public void apply(final Document document) {\n        System.out.println(document.toJson());\n    }\n};"},{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"Then iterate the cursor for documents, passing the\n"},{"type":"literal","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"printBlock"}]},{"type":"text","position":{"start":{"line":12}},"value":" as a parameter."}]},{"type":"code","position":{"start":{"line":15}},"lang":"java","copyable":true,"value":"findIterable.forEach(printBlock);"}]},{"type":"directive","position":{"start":{"line":87}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":87}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"function iterateFunc(doc) {\n   console.log(JSON.stringify(doc, null, 4));\n}\n\nfunction errorFunc(error) {\n   console.log(error);\n}\n\ncursor.forEach(iterateFunc, errorFunc);"}]},{"type":"directive","position":{"start":{"line":101}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":101}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"foreach (var doc in result) {\n   Console.WriteLine(doc.ToJson());\n}"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         By default, the shell will only show the first 20 documents\n         and return a cursor. This is adequate when the result set only\n         contains a few documents.\n\n         If your result set is larger, to see *all* of the results of\n         your query, iterate the cursor.\n         \n         .. code-block:: sh\n\n            while (myCursor.hasNext()) {\n                print(tojson(myCursor.next()));\n            }\n\n         .. note:: You can also manually iterate through the results by\n            typing ``it`` when prompted by the shell.\n\n     - id: compass\n       content: |\n\n         You will see a list of all of the documents that match your\n         criteria in the query window.\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            from pprint import pprint\n                \n            for inventory in cursor:\n                 pprint(inventory)   \n\n     - id: motor\n       content: |\n\n         In the code snippet above you may have noticed the code that\n         iterates the results and prints them to the command line:\n         \n         .. code-block:: python\n\n            async for doc in cursor:\n                print(doc)\n\n     - id: go\n       content: |\n\n         Iterate the results and print them to the command line:\n         \n         .. code-block:: go\n          \n            for cursor.Next(context.TODO()) {\n                elem := &bson.D{}\n                if err := cursor.Decode(elem); err != nil {\n                        log.Fatal(err)\n                }\n                // ideally, you would do something with elem....\n                // but for now just print it to the console\n                fmt.Println(elem)\n            }\n            \n     - id: java-sync\n       content: |\n\n         You can implement a ``com.mongodb.Block`` to print the results\n         of the iteration\n         \n         .. code-block:: java\n         \n            Block<Document> printBlock = new Block<Document>() {\n                @Override\n                public void apply(final Document document) {\n                    System.out.println(document.toJson());\n                }\n            };\n         \n         Then iterate the cursor for documents, passing the\n         ``printBlock`` as a parameter.\n         \n         .. code-block:: java\n       \n            findIterable.forEach(printBlock);\n\n     - id: nodejs\n       content: |\n         .. code-block:: javascript\n\n            function iterateFunc(doc) {\n               console.log(JSON.stringify(doc, null, 4));\n            }\n\n            function errorFunc(error) {\n               console.log(error);\n            }\n            \n            cursor.forEach(iterateFunc, errorFunc);\n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            foreach (var doc in result) {\n               Console.WriteLine(doc.ToJson());\n            }\n\n     #- id: php\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       foreach ( $cursor as $id => $value )\n     #       {\n     #           var_dump( $value );\n     #       }\n\n     #- id: perl\n     #  content: |\n     #    \n     #    perl doesn't have native support for JSON, for this example,\n     #    you can download the ``JSON`` module from cpan by running\n\n     #    .. code-block:: sh\n\n     #       cpan install JSON\n\n     #    .. code-block:: sh\n     #    \n     #       use JSON;\n\n     #       my $JSON = JSON->new->utf8;\n     #       $JSON->convert_blessed(1);\n     #       \n     #       while (my $doc = $cursor->next) {\n     #          my $object = $JSON->encode($doc);\n     #          print \"$object\\n\";\n     #       }\n\n     #- id: ruby\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       cursor.each do |doc|\n     #          puts doc\n     #       end\n\n     #- id: scala\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       collection.find().subscribe((doc: Document) => println(doc.toJson()))\n           \n","static_assets":[]},"images/compass-find-filter-inventory.png#b9475fadd30cfad875ef02310a006d9f3f896665ebc437e7edc8623e18be5e30":{},"includes/results_read2":{"_id":"guides/andrew/master/includes/results_read2","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[{"type":"text","position":{"start":{"line":0}},"value":"Your "},{"type":"role","position":{"start":{"line":0}},"name":"method","target":"ObjectId","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" values will differ from those shown."}],"children":[]},{"type":"directive","position":{"start":{"line":2}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":4}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":4}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{\n item: \"paper\",\n qty: 100,\n size: {\n   h: 8.5,\n   w: 11,\n   uom: \"in\"\n   },\n status: \"D\"\n},\n{\n item: \"planner\",\n qty: 75,\n size: {\n   h: 22.85,\n   w: 30,\n   uom: \"cm\"\n   },\n status: \"D\"\n}"}]},{"type":"directive","position":{"start":{"line":30}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":30}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-filter-inventory.png"}],"options":{"checksum":"b9475fadd30cfad875ef02310a006d9f3f896665ebc437e7edc8623e18be5e30"},"children":[]}]},{"type":"directive","position":{"start":{"line":35}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":35}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada8c109b267e9d1ade903a'),\n u'item': u'paper',\n u'qty': 100,\n u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n u'status': u'D'}\n{u'_id': ObjectId('5ada8c109b267e9d1ade903b'),\n u'item': u'planner',\n u'qty': 75,\n u'size': {u'h': 22.85, u'uom': u'cm', u'w': 30},\n u'status': u'D'}"}]},{"type":"directive","position":{"start":{"line":50}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":50}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3cf48cb05a4e6e614ce60c\")} {item paper} {qty 100} {size [{h 8.5} {w 11} {uom in}]} {status D}]\n\n&[{_id ObjectID(\"5c3cf48cb05a4e6e614ce60d\")} {item planner} {qty 75} {size [{h 22.85} {w 30} {uom cm}]} {status D}]"}]},{"type":"directive","position":{"start":{"line":59}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":59}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb5140aea650d18e402f19'),\n 'item': 'paper',\n 'qty': 100,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'D'}\n{'_id': ObjectId('5adb5140aea650d18e402f1a'),\n 'item': 'planner',\n 'qty': 75,\n 'size': {'h': 22.85, 'uom': 'cm', 'w': 30},\n 'status': 'D'}"}]},{"type":"directive","position":{"start":{"line":75}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":75}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bc\" }, \"item\" : \"planner\", \"qty\" : 75, \"size\" : { \"h\" : 22.85, \"w\" : 30, \"uom\" : \"cm\" }, \"status\" : \"D\" }"}]},{"type":"directive","position":{"start":{"line":83}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":83}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade424c84c9ca2d56d31699,\n  item: 'paper',\n  qty: 100,\n  size: { h: 8.5, w: 11, uom: 'in' },\n  status: 'D' }\n{ _id: 5ade424c84c9ca2d56d3169a,\n  item: 'planner',\n  qty: 75,\n  size: { h: 22.85, w: 30, uom: 'cm' },\n  status: 'D' }"}]},{"type":"directive","position":{"start":{"line":132}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":132}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade239b5923f61e2db8541e\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n{ \"_id\" : ObjectId(\"5ade239b5923f61e2db8541f\"), \"item\" : \"planner\", \"qty\" : 75, \"size\" : { \"h\" : 22.850000000000001, \"w\" : 30, \"uom\" : \"cm\" }, \"status\" : \"D\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. note:: Your :method:`ObjectId` values will differ from those shown.\n\n.. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         .. code-block:: javascript\n      \n            {\n             item: \"paper\",\n             qty: 100,\n             size: {\n               h: 8.5,\n               w: 11,\n               uom: \"in\"\n               },\n             status: \"D\"\n            },\n            {\n             item: \"planner\",\n             qty: 75,\n             size: {\n               h: 22.85,\n               w: 30,\n               uom: \"cm\"\n               },\n             status: \"D\"\n            }\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-filter-inventory.png\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n           {u'_id': ObjectId('5ada8c109b267e9d1ade903a'),\n            u'item': u'paper',\n            u'qty': 100,\n            u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n            u'status': u'D'}\n           {u'_id': ObjectId('5ada8c109b267e9d1ade903b'),\n            u'item': u'planner',\n            u'qty': 75,\n            u'size': {u'h': 22.85, u'uom': u'cm', u'w': 30},\n            u'status': u'D'}\n     - id: go\n       content: |\n\n         .. code-block:: go\n           \n            &[{_id ObjectID(\"5c3cf48cb05a4e6e614ce60c\")} {item paper} {qty 100} {size [{h 8.5} {w 11} {uom in}]} {status D}]\n           \n            &[{_id ObjectID(\"5c3cf48cb05a4e6e614ce60d\")} {item planner} {qty 75} {size [{h 22.85} {w 30} {uom cm}]} {status D}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5adb5140aea650d18e402f19'),\n             'item': 'paper',\n             'qty': 100,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'D'}\n            {'_id': ObjectId('5adb5140aea650d18e402f1a'),\n             'item': 'planner',\n             'qty': 75,\n             'size': {'h': 22.85, 'uom': 'cm', 'w': 30},\n             'status': 'D'}\n\n     - id: java-sync\n       content: |\n           \n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bc\" }, \"item\" : \"planner\", \"qty\" : 75, \"size\" : { \"h\" : 22.85, \"w\" : 30, \"uom\" : \"cm\" }, \"status\" : \"D\" }\n\n     - id: nodejs\n       content: |\n\n         .. code-block:: javascript\n            \n            { _id: 5ade424c84c9ca2d56d31699,\n              item: 'paper',\n              qty: 100,\n              size: { h: 8.5, w: 11, uom: 'in' },\n              status: 'D' }\n            { _id: 5ade424c84c9ca2d56d3169a,\n              item: 'planner',\n              qty: 75,\n              size: { h: 22.85, w: 30, uom: 'cm' },\n              status: 'D' }\n\n            \n     #- id: php\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       foreach ( $cursor as $id => $value )\n     #       {\n     #           var_dump( $value );\n     #       }\n\n     #- id: perl\n     #  content: |\n     #    .. code-block:: sh\n     #    \n     #       while (my $doc = $cursor->next) {\n     #           print $doc .\"\\n\";\n     #       } \n\n     #- id: ruby\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       cursor.each do |doc|\n     #          puts doc\n     #       end\n\n     #- id: scala\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       collection.find().subscribe((doc: Document) => println(doc.toJson()))\n           \n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade239b5923f61e2db8541e\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n            { \"_id\" : ObjectId(\"5ade239b5923f61e2db8541f\"), \"item\" : \"planner\", \"qty\" : 75, \"size\" : { \"h\" : 22.850000000000001, \"w\" : 30, \"uom\" : \"cm\" }, \"status\" : \"D\" }","static_assets":["b9475fadd30cfad875ef02310a006d9f3f896665ebc437e7edc8623e18be5e30"]},"includes/steps/read_server_query":{"_id":"guides/andrew/master/includes/steps/read_server_query","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance."}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" Database"}],"id":"switch-to-the-test-database"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Load more data into MongoDB."}],"id":"load-more-data-into-mongodb"},{"type":"directive","position":{"start":{"line":0}},"name":"tip","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"If you have already "},{"type":"role","position":{"start":{"line":2}},"name":"doc","label":{"type":"text","value":"imported data into your database","position":{"start":{"line":6}}},"target":"/server/import","children":[]},{"type":"text","position":{"start":{"line":2}},"value":" using "},{"type":"role","position":{"start":{"line":2}},"name":"program","target":"mongoimport","children":[]},{"type":"text","position":{"start":{"line":2}},"value":", you can skip\nthis step."}]}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Before you can write queries to extract data in a meaningful way, you'll need\nto add more data to your database. You can do that by running the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"insertMany()"}]},{"type":"text","position":{"start":{"line":6}},"value":"\nnethod:"}]},{"type":"directive","position":{"start":{"line":10}},"name":"include","argument":[{"type":"text","position":{"start":{"line":10}},"value":"/includes/driver-example-query-14.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":10}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Retrieve specific documents in a collection."}],"id":"retrieve-specific-documents-in-a-collection"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"You can retrieve specific documents from a collection by applying\nfilter criteria."}]},{"type":"paragraph","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"To specify filter criteria, pass a JSON document containing the\ncriteria you are searching for to the "},{"type":"literal","position":{"start":{"line":3}},"children":[{"type":"text","position":{"start":{"line":3}},"value":"find"}]},{"type":"text","position":{"start":{"line":3}},"value":" method."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"The following example illustrate using a status of \"D\" as criteria\nfor narrowing a find on a collection."}]},{"type":"directive","position":{"start":{"line":9}},"name":"include","argument":[{"type":"text","position":{"start":{"line":9}},"value":"/includes/driver-example-query-9.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":9}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Note that all records return have a status of \"D\"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/results_read2.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]}]}]}]},"source":"stepnum: 1\ninherit:\n  file: steps-read_server.yaml\n  ref: connect\n\n---\ntitle: Switch to the ``test`` Database\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n\n  .. include:: /includes/bind_db.rst\n\n---\ntitle: Load more data into MongoDB.\nref: process-mongodb\nlevel: 4\nstepnum: 3\ncontent: |\n\n  .. tip:: \n     \n     If you have already :doc:`imported data into your database\n     </server/import>` using :program:`mongoimport`, you can skip\n     this step.\n\n  Before you can write queries to extract data in a meaningful way, you'll need\n  to add more data to your database. You can do that by running the ``insertMany()``\n  nethod:\n\n  .. include:: /includes/driver-example-query-14.rst\n\n---\ntitle: Retrieve specific documents in a collection.\nref: query-one\nlevel: 4\nstepnum: 4\ncontent: |\n\n  You can retrieve specific documents from a collection by applying\n  filter criteria.\n\n  To specify filter criteria, pass a JSON document containing the\n  criteria you are searching for to the ``find`` method.\n\n  The following example illustrate using a status of \"D\" as criteria\n  for narrowing a find on a collection.\n\n  .. include:: /includes/driver-example-query-9.rst\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 5\ncontent: |\n\n  .. include:: /includes/iterate_all.rst\n\n---\ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 6\ncontent: |\n\n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Note that all records return have a status of \"D\".\n\n  .. include:: /includes/results_read2.rst\n...\n","static_assets":[]},"includes/driver-example-query-15":{"_id":"guides/andrew/master/includes/driver-example-query-15","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { size: { h: 14, w: 21, uom: \"cm\" } } )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":121}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ size: { h: 14, w: 21, uom: \"cm\" } }"}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find(\n    {\"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")])})"}]},{"type":"directive","position":{"start":{"line":26}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":26}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"size\", bson.D{\n\t\t\t{\"h\", 14},\n\t\t\t{\"w\", 21},\n\t\t\t{\"uom\", \"cm\"},\n\t\t}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":34}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":34}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find(\n    {\"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")])})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_embedded():\n    cursor = db.inventory.find(\n    {\"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")])})\n    async for doc in cursor:\n        pprint.pprint(doc)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_embedded())"}]},{"type":"directive","position":{"start":{"line":56}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":56}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to create the MongoCollection object you would like to query against."}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"MongoCollection<Document> collection = db.getCollection(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Now add the query."}]},{"type":"code","lang":"java","copyable":false,"value":"FindIterable<Document> findIterable = collection.find(eq(\"size\", Document.parse(\"{ h: 14, w: 21, uom: 'cm' }\")));"}]},{"type":"directive","position":{"start":{"line":73}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":73}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  size: { h: 14, w: 21, uom: \"cm\" }\n});"}]},{"type":"directive","position":{"start":{"line":113}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":113}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"size\", new BsonDocument { { \"h\", 14 }, { \"w\", 21 }, { \"uom\", \"cm\" } });\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { size: { h: 14, w: 21, uom: \"cm\" } } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n     \n         .. code-block:: javascript\n\n            { size: { h: 14, w: 21, uom: \"cm\" } }\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 15\n            :end-before: End Example 15\n\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 15\n            :end-before: End Example 15\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 15\n            :end-before: End Example 15\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_retrieve_embedded():\n                cursor = db.inventory.find(\n                {\"size\": SON([(\"h\", 14), (\"w\", 21), (\"uom\", \"cm\")])})\n                async for doc in cursor:\n                    pprint.pprint(doc)\n   \n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_embedded())\n\n     - id: java-sync\n       content: |\n\n         First you will need to create the MongoCollection object you would like to query against.\n\n         .. code-block:: java\n\n            MongoCollection<Document> collection = db.getCollection(\"inventory\");\n\n         Now add the query.\n         \n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 15\n            :end-before: End Example 15\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 15\n            :end-before: End Example 15\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 15\n     #       :end-before: End Example 15\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 15\n     #       :end-before: End Example 15\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 15\n     #       :end-before: End Example 15\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 15\n     #       :end-before: End Example 15\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 15\n            :end-before: End Example 15\n","static_assets":[]},"images/compass-match-embedded.png#9f3b567c0f2c1990e20140d322dad9b6f10db04fa2242d74852e09088a2b1ffd":{},"includes/results_read3":{"_id":"guides/andrew/master/includes/results_read3","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[{"type":"text","position":{"start":{"line":0}},"value":"Your "},{"type":"role","position":{"start":{"line":0}},"name":"method","target":"ObjectId","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" values will differ from those shown."}],"children":[]},{"type":"directive","position":{"start":{"line":2}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":4}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":4}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-match-embedded.png"}],"options":{"checksum":"9f3b567c0f2c1990e20140d322dad9b6f10db04fa2242d74852e09088a2b1ffd"},"children":[]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada625baea65088bf0aa131'),\n u'item': u'journal',\n u'qty': 25,\n u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n u'status': u'A'}"}]},{"type":"directive","position":{"start":{"line":28}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":28}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3cf740723ebcfd6eefa7ef\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]"}]},{"type":"directive","position":{"start":{"line":35}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":35}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb5140aea650d18e402f17'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":46}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":46}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":53}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":53}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade424c84c9ca2d56d31697,\n  item: 'journal',\n  qty: 25,\n  size: { h: 14, w: 21, uom: 'cm' },\n  status: 'A' }"}]},{"type":"directive","position":{"start":{"line":98}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":98}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade248f6847901ef531c3ff\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }å"}]}]}],"position":{"start":{"line":0}}},"source":".. note:: Your :method:`ObjectId` values will differ from those shown.\n\n.. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         \n         .. code-block:: javascript\n\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-match-embedded.png\n\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            {u'_id': ObjectId('5ada625baea65088bf0aa131'),\n             u'item': u'journal',\n             u'qty': 25,\n             u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n             u'status': u'A'}\n\n     - id: go\n       content: |\n\n         .. code-block:: go\n\n            &[{_id ObjectID(\"5c3cf740723ebcfd6eefa7ef\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5adb5140aea650d18e402f17'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n\n     - id: java-sync\n       content: |\n         \n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: nodejs\n       content: |\n\n         .. code-block:: javascript\n            \n            { _id: 5ade424c84c9ca2d56d31697,\n              item: 'journal',\n              qty: 25,\n              size: { h: 14, w: 21, uom: 'cm' },\n              status: 'A' }\n\n            \n     #- id: php\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       foreach ( $cursor as $id => $value )\n     #       {\n     #           var_dump( $value );\n     #       }\n\n     #- id: perl\n     #  content: |\n\n     #    .. note:: The MongoDB perl driver does not support insertion order. As a result your query results may not match what is expected.\n     #    \n     #    .. code-block:: sh\n     #    \n     #       \n\n     #- id: ruby\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       cursor.each do |doc|\n     #          puts doc\n     #       end\n\n     #- id: scala\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       collection.find().subscribe((doc: Document) => println(doc.toJson()))\n           \n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade248f6847901ef531c3ff\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }å","static_assets":["9f3b567c0f2c1990e20140d322dad9b6f10db04fa2242d74852e09088a2b1ffd"]},"includes/steps/read_embedded":{"_id":"guides/andrew/master/includes/steps/read_embedded","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Retrieve specific documents in a collection based on the contents of an embedded document."}],"id":"retrieve-specific-documents-in-a-collection-based-on-the-contents-of-an-embedded-document"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you wish to select documents that match all of the fields in an\nembedded JSON object, specify an exact match of the embedded document,\nincluding all of the fields and values in that embedded document in the\norder in which they appear in the collection."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"For example, the following query selects all documents where the\n"},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"size"}]},{"type":"text","position":{"start":{"line":5}},"value":" field equals the document "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"{ \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\"}"}]},{"type":"text","position":{"start":{"line":5}},"value":":"}]},{"type":"directive","position":{"start":{"line":8}},"name":"include","argument":[{"type":"text","position":{"start":{"line":8}},"value":"/includes/driver-example-query-15.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":8}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all_noshellcursor.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Note that the record matches the selection\ncriteria exactly."}]},{"type":"directive","position":{"start":{"line":4}},"name":"include","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/includes/results_read3.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":4}},"children":[]}]}]}]}]},"source":"title: Retrieve specific documents in a collection based on the contents of an embedded document.\nref: query-one\nlevel: 4\nstepnum: 1\ncontent: |\n\n  If you wish to select documents that match all of the fields in an\n  embedded JSON object, specify an exact match of the embedded document,\n  including all of the fields and values in that embedded document in the\n  order in which they appear in the collection.\n\n  For example, the following query selects all documents where the\n  ``size`` field equals the document ``{ \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\"}``:\n  \n  .. include:: /includes/driver-example-query-15.rst\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 2\ncontent: |\n  \n  .. include:: /includes/iterate_all_noshellcursor.rst\n\n---\ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 3\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Note that the record matches the selection\n  criteria exactly.\n\n  .. include:: /includes/results_read3.rst\n...","static_assets":[]},"includes/driver-example-query-17":{"_id":"guides/andrew/master/includes/driver-example-query-17","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { \"size.uom\": \"in\" } )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":120}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ \"size.uom\": \"in\" }"}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"size.uom\": \"in\"})"}]},{"type":"directive","position":{"start":{"line":25}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":25}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{{\"size.uom\", \"in\"}},\n)\n"}]},{"type":"directive","position":{"start":{"line":33}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":33}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"size.uom\": \"in\"})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_embedded_dot():\n    cursor = db.inventory.find({\"size.uom\": \"in\"})\n    async for doc in cursor:\n        pprint.pprint(doc)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_embedded_dot())"}]},{"type":"directive","position":{"start":{"line":55}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":55}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to create the MongoCollection object you would like to query against."}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"MongoCollection<Document> collection = db.getCollection(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Now add the query."}]},{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(eq(\"size.uom\", \"in\"));"}]},{"type":"directive","position":{"start":{"line":72}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":72}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  \"size.uom\": \"in\"\n});"}]},{"type":"directive","position":{"start":{"line":112}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":112}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"size.uom\", \"in\");\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { \"size.uom\": \"in\" } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { \"size.uom\": \"in\" }\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 17\n            :end-before: End Example 17\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 17\n            :end-before: End Example 17\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 17\n            :end-before: End Example 17\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_retrieve_embedded_dot():\n                cursor = db.inventory.find({\"size.uom\": \"in\"})\n                async for doc in cursor:\n                    pprint.pprint(doc)\n\n\n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_embedded_dot())\n\n     - id: java-sync\n       content: |\n       \n         First you will need to create the MongoCollection object you would like to query against.\n\n         .. code-block:: java\n\n            MongoCollection<Document> collection = db.getCollection(\"inventory\");\n         \n         Now add the query.\n         \n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 17\n            :end-before: End Example 17\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 17\n            :end-before: End Example 17\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 17\n     #       :end-before: End Example 17\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 17\n     #       :end-before: End Example 17\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 17\n     #       :end-before: End Example 17\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 17\n     #       :end-before: End Example 17\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 17\n            :end-before: End Example 17\n","static_assets":[]},"images/compass-find-nested-field.png#12465b05342aaaca9f1f2ab33b17a58e3113c377d10adaf7492ef1f9f0108cd5":{},"includes/results_read4":{"_id":"guides/andrew/master/includes/results_read4","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[{"type":"text","position":{"start":{"line":0}},"value":"Your "},{"type":"role","position":{"start":{"line":0}},"name":"method","target":"ObjectId","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" values will differ from those shown."}],"children":[]},{"type":"directive","position":{"start":{"line":2}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":4}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":4}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93b\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }"}]},{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-nested-field.png"}],"options":{"checksum":"12465b05342aaaca9f1f2ab33b17a58e3113c377d10adaf7492ef1f9f0108cd5"},"children":[]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada625baea65088bf0aa132'),\n u'item': u'notebook',\n u'qty': 50,\n u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n u'status': u'A'}\n{u'_id': ObjectId('5ada625baea65088bf0aa133'),\n u'item': u'paper',\n u'qty': 100,\n u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n u'status': u'D'}"}]},{"type":"directive","position":{"start":{"line":33}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":33}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3cfb2b62883946fc77553b\")} {item notebook} {qty 50} {size [{h 8.5} {w 11} {uom in}]} {status A}]\n&[{_id ObjectID(\"5c3cfb2b62883946fc77553c\")} {item paper} {qty 100} {size [{h 8.5} {w 11} {uom in}]} {status D}]"}]},{"type":"directive","position":{"start":{"line":41}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":41}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb5140aea650d18e402f18'),\n 'item': 'notebook',\n 'qty': 50,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'A'}\n{'_id': ObjectId('5adb5140aea650d18e402f19'),\n 'item': 'paper',\n 'qty': 100,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'D'}"}]},{"type":"directive","position":{"start":{"line":57}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":57}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create a method to print the results of the iteration"}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393ba\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }"}]},{"type":"directive","position":{"start":{"line":66}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":66}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade424c84c9ca2d56d31698,\n  item: 'notebook',\n  qty: 50,\n  size: { h: 8.5, w: 11, uom: 'in' },\n  status: 'A' }\n{ _id: 5ade424c84c9ca2d56d31699,\n  item: 'paper',\n  qty: 100,\n  size: { h: 8.5, w: 11, uom: 'in' },\n  status: 'D' }"}]},{"type":"directive","position":{"start":{"line":115}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":115}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade2538321fd31f43ea1f56\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ade2538321fd31f43ea1f57\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. note:: Your :method:`ObjectId` values will differ from those shown.\n\n.. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         .. code-block:: javascript\n\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93b\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-nested-field.png\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            {u'_id': ObjectId('5ada625baea65088bf0aa132'),\n             u'item': u'notebook',\n             u'qty': 50,\n             u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n             u'status': u'A'}\n            {u'_id': ObjectId('5ada625baea65088bf0aa133'),\n             u'item': u'paper',\n             u'qty': 100,\n             u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n             u'status': u'D'}\n\n     - id: go\n       content: |\n         \n         .. code-block:: go\n\n            &[{_id ObjectID(\"5c3cfb2b62883946fc77553b\")} {item notebook} {qty 50} {size [{h 8.5} {w 11} {uom in}]} {status A}]\n            &[{_id ObjectID(\"5c3cfb2b62883946fc77553c\")} {item paper} {qty 100} {size [{h 8.5} {w 11} {uom in}]} {status D}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n         \n            {'_id': ObjectId('5adb5140aea650d18e402f18'),\n             'item': 'notebook',\n             'qty': 50,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'A'}\n            {'_id': ObjectId('5adb5140aea650d18e402f19'),\n             'item': 'paper',\n             'qty': 100,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'D'}\n\n     - id: java-sync\n       content: |\n         Create a method to print the results of the iteration \n\n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393ba\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n\n     - id: nodejs\n       content: |\n\n         .. code-block:: javascript\n            \n            { _id: 5ade424c84c9ca2d56d31698,\n              item: 'notebook',\n              qty: 50,\n              size: { h: 8.5, w: 11, uom: 'in' },\n              status: 'A' }\n            { _id: 5ade424c84c9ca2d56d31699,\n              item: 'paper',\n              qty: 100,\n              size: { h: 8.5, w: 11, uom: 'in' },\n              status: 'D' }\n\n            \n     #- id: php\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       foreach ( $cursor as $id => $value )\n     #       {\n     #           var_dump( $value );\n     #       }\n\n     #- id: perl\n     #  content: |\n     #    .. code-block:: sh\n     #    \n     #       while (my $doc = $cursor->next) {\n     #           print $doc .\"\\n\";\n     #       } \n\n     #- id: ruby\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       cursor.each do |doc|\n     #          puts doc\n     #       end\n\n     #- id: scala\n     #  content: |\n     #    .. code-block:: sh\n     #       \n     #       collection.find().subscribe((doc: Document) => println(doc.toJson()))\n           \n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade2538321fd31f43ea1f56\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ade2538321fd31f43ea1f57\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n","static_assets":["12465b05342aaaca9f1f2ab33b17a58e3113c377d10adaf7492ef1f9f0108cd5"]},"includes/steps/read_embedded_dot":{"_id":"guides/andrew/master/includes/steps/read_embedded_dot","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Retrieve specific documents in a collection with dot notation."}],"id":"retrieve-specific-documents-in-a-collection-with-dot-notation"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you wish to select documents that exactly match just one of the\nfields in an embedded JSON object, use  "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":1}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":".\n("},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"\"field.nestedField\""}]},{"type":"text","position":{"start":{"line":0}},"value":")."}]},{"type":"paragraph","position":{"start":{"line":4}},"children":[{"type":"text","position":{"start":{"line":4}},"value":"When querying using "},{"type":"role","position":{"start":{"line":4}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":5}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":4}},"value":"., the field and nested field names must be\ninside quotation marks."}]},{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"The following example selects all documents where the field "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"uom"}]},{"type":"text","position":{"start":{"line":7}},"value":"\nnested in the "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"size"}]},{"type":"text","position":{"start":{"line":7}},"value":" field equals "},{"type":"literal","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"\"in\""}]},{"type":"text","position":{"start":{"line":7}},"value":":"}]},{"type":"directive","position":{"start":{"line":10}},"name":"include","argument":[{"type":"text","position":{"start":{"line":10}},"value":"/includes/driver-example-query-17.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":10}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Note that the result record has a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":" of "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"in"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/results_read4.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]}]},"source":"title: Retrieve specific documents in a collection with dot notation.\nref: query-one\nlevel: 4\nstepnum: 1\ncontent: |\n  \n  If you wish to select documents that exactly match just one of the\n  fields in an embedded JSON object, use  :ref:`dot notation <document-dot-notation>`.\n  (``\"field.nestedField\"``).\n\n  When querying using :ref:`dot notation <document-dot-notation>`., the field and nested field names must be\n  inside quotation marks.\n  \n  The following example selects all documents where the field ``uom``\n  nested in the ``size`` field equals ``\"in\"``:\n\n  .. include:: /includes/driver-example-query-17.rst\n\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 2\ncontent: |\n  .. include:: /includes/iterate_all.rst\n\n---\ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 3\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Note that the result record has a ``uom`` of ``in``.\n\n  .. include:: /includes/results_read4.rst\n  \n  .. include:: /includes/drivers_close_connection.rst\n...\n","static_assets":[]},"server/read_queries":{"_id":"guides/andrew/master/server/read_queries","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"read-data-from-mongodb-with-queries","children":[{"type":"text","position":{"start":{"line":5}},"value":"Read Data from MongoDB With Queries"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"go"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"level","argument":[{"type":"text","position":{"start":{"line":23}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":25}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"In the first "},{"type":"role","position":{"start":{"line":29}},"name":"doc","target":"/server/read","children":[]},{"type":"text","position":{"start":{"line":29}},"value":" guide, you retrieved a\ndocument from the "},{"type":"literal","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":29}},"value":" collection. In this guide, you\nwill:"}]},{"type":"list","position":{"start":{"line":33}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"use the "},{"type":"literal","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"insertMany"}]},{"type":"text","position":{"start":{"line":33}},"value":" command to insert more documents into the collection"}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":34}},"children":[{"type":"text","position":{"start":{"line":34}},"value":"query the documents"}]}]}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"time","argument":[{"type":"text","position":{"start":{"line":36}},"value":"30"}],"children":[]},{"type":"directive","position":{"start":{"line":38}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":40}},"name":"include","argument":[{"type":"text","position":{"start":{"line":40}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":40}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":42}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":44}},"name":"include","argument":[{"type":"text","position":{"start":{"line":44}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":44}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":46}},"name":"procedure","argument":[],"children":[{"type":"section","position":{"start":{"line":49}},"children":[{"type":"heading","position":{"start":{"line":49}},"id":"import-data-and-query-it","children":[{"type":"text","position":{"start":{"line":49}},"value":"Import Data and Query It"}]},{"type":"paragraph","position":{"start":{"line":51}},"children":[{"type":"text","position":{"start":{"line":51}},"value":"In the first part of this guide, you will insert more documents and\nretrieve some of these documents from MongoDB using a simple query."}]},{"type":"directive","position":{"start":{"line":54}},"name":"include","argument":[{"type":"text","position":{"start":{"line":54}},"value":"/includes/steps/read_server_query.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":54}},"children":[]}]}]},{"type":"section","position":{"start":{"line":58}},"children":[{"type":"heading","position":{"start":{"line":58}},"id":"query-data-using-embedded-documents-as-criteria","children":[{"type":"text","position":{"start":{"line":58}},"value":"Query Data Using Embedded Documents as Criteria"}]},{"type":"paragraph","position":{"start":{"line":60}},"children":[{"type":"text","position":{"start":{"line":60}},"value":"Now that you have an understanding of how to retrieve data using\nquery documents, you will now query against embedded documents."}]},{"type":"directive","position":{"start":{"line":63}},"name":"include","argument":[{"type":"text","position":{"start":{"line":63}},"value":"/includes/steps/read_embedded.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":63}},"children":[]}]}]},{"type":"section","position":{"start":{"line":66}},"children":[{"type":"heading","position":{"start":{"line":66}},"id":"query-data-using-embedded-documents-with-dot-notation","children":[{"type":"text","position":{"start":{"line":66}},"value":"Query Data Using Embedded Documents With Dot Notation"}]},{"type":"paragraph","position":{"start":{"line":68}},"children":[{"type":"text","position":{"start":{"line":68}},"value":"Now you will explore how to query embedded documents using "},{"type":"literal","position":{"start":{"line":68}},"children":[{"type":"text","position":{"start":{"line":68}},"value":"dot notation"}]},{"type":"text","position":{"start":{"line":68}},"value":"."}]},{"type":"directive","position":{"start":{"line":70}},"name":"include","argument":[{"type":"text","position":{"start":{"line":70}},"value":"/includes/steps/read_embedded_dot.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":70}},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":72}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":74}},"children":[{"type":"text","position":{"start":{"line":74}},"value":"If you have successfully completed this guide, you have retrieved data from MongoDB\nusing specific criteria as expressed in MongoDB's query syntax. You have also used\nthe embedded document query syntax to retrieve documents based on embedded fields."}]}]},{"type":"directive","position":{"start":{"line":78}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":80}},"children":[{"type":"text","position":{"start":{"line":80}},"value":"In the next guide, you'll learn how to read data from MongoDB using operators and compound queries."}]},{"type":"list","position":{"start":{"line":82}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":82}},"children":[{"type":"paragraph","position":{"start":{"line":82}},"children":[{"type":"role","position":{"start":{"line":82}},"name":"doc","label":{"type":"text","value":"Read Data using Operators and Compound Queries","position":{"start":{"line":77}}},"target":"/server/read_operators","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":84}},"name":"seealso","argument":[],"children":[{"type":"list","position":{"start":{"line":86}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":86}},"children":[{"type":"paragraph","position":{"start":{"line":86}},"children":[{"type":"role","position":{"start":{"line":86}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":86}},"children":[{"type":"paragraph","position":{"start":{"line":87}},"children":[{"type":"role","position":{"start":{"line":87}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":86}},"children":[{"type":"paragraph","position":{"start":{"line":88}},"children":[{"type":"role","position":{"start":{"line":88}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":86}},"children":[{"type":"paragraph","position":{"start":{"line":89}},"children":[{"type":"role","position":{"start":{"line":89}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":86}},"children":[{"type":"paragraph","position":{"start":{"line":90}},"children":[{"type":"role","position":{"start":{"line":90}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Read Data from MongoDB With Queries\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   languages:\n     go\n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n   result_description:\n\n      In the first :doc:`/server/read` guide, you retrieved a\n      document from the ``inventory`` collection. In this guide, you\n      will:\n\n      - use the ``insertMany`` command to insert more documents into the collection\n      - query the documents\n\n   time: 30\n   prerequisites:\n     .. include:: /includes/prereqs_read_CRUD.rst\n   check_your_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n\n     Import Data and Query It\n     ~~~~~~~~~~~~~~~~~~~~~~~~\n\n     In the first part of this guide, you will insert more documents and\n     retrieve some of these documents from MongoDB using a simple query.\n\n     .. include:: /includes/steps/read_server_query.rst\n\n\n     Query Data Using Embedded Documents as Criteria\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n     Now that you have an understanding of how to retrieve data using\n     query documents, you will now query against embedded documents.\n\n     .. include:: /includes/steps/read_embedded.rst\n\n     Query Data Using Embedded Documents With Dot Notation\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n     Now you will explore how to query embedded documents using ``dot notation``.\n\n     .. include:: /includes/steps/read_embedded_dot.rst\n\n   summary:\n\n     If you have successfully completed this guide, you have retrieved data from MongoDB\n     using specific criteria as expressed in MongoDB's query syntax. You have also used\n     the embedded document query syntax to retrieve documents based on embedded fields.\n\n   whats_next:\n     In the next guide, you'll learn how to read data from MongoDB using operators and compound queries.\n\n     * :doc:`Read Data using Operators and Compound Queries </server/read_operators>`\n   seealso:\n     - :doc:`/server/insert`\n     - :doc:`/server/read`\n     - :doc:`/server/read_operators`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"includes/driver-example-query-18":{"_id":"guides/andrew/master/includes/driver-example-query-18","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { \"size.h\": { $lt: 15 } } )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":121}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ \"size.h\": { $lt: 15 } }"}]},{"type":"directive","position":{"start":{"line":19}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":19}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})"}]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"size.h\", bson.D{\n\t\t\t{\"$lt\", 15},\n\t\t}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":35}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":35}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_operator():\n    cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})\n    async for doc in cursor:\n        pprint.pprint(doc)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_operator())"}]},{"type":"directive","position":{"start":{"line":56}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":56}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"First you will need to create the MongoCollection object you would like to query against."}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"MongoCollection<Document> collection = db.getCollection(\"inventory\");"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Next pass the query document to the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"collection.find()"}]},{"type":"text","position":{"start":{"line":6}},"value":" method."}]},{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(lt(\"size.h\", 15));"}]},{"type":"directive","position":{"start":{"line":73}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":73}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  \"size.h\": { $lt: 15 }\n});"}]},{"type":"directive","position":{"start":{"line":113}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":113}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Lt(\"size.h\", 15);\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { \"size.h\": { $lt: 15 } } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { \"size.h\": { $lt: 15 } }\n\n\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 18\n            :end-before: End Example 18\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 18\n            :end-before: End Example 18\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 18\n            :end-before: End Example 18\n         \n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_retrieve_operator():\n                cursor = db.inventory.find({\"size.h\": {\"$lt\": 15}})\n                async for doc in cursor:\n                    pprint.pprint(doc)\n            \n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_operator())    \n\n     - id: java-sync\n       content: |\n       \n         First you will need to create the MongoCollection object you would like to query against.\n\n         .. code-block:: java\n\n            MongoCollection<Document> collection = db.getCollection(\"inventory\");\n            \n         Next pass the query document to the ``collection.find()`` method.\n          \n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 18\n            :end-before: End Example 18\n            \n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 18\n            :end-before: End Example 18\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 18\n     #       :end-before: End Example 18\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 18\n     #       :end-before: End Example 18\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 18\n     #       :end-before: End Example 18\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 18\n     #       :end-before: End Example 18\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 18\n            :end-before: End Example 18\n","static_assets":[]},"images/compass-find-nested-query-op.png#f01dfa1d815f4b134d6c96af8b3dd688a4ee92cfff38e62518eace2cb445147a":{},"includes/results_read5":{"_id":"guides/andrew/master/includes/results_read5","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93b\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-nested-query-op.png"}],"options":{"checksum":"f01dfa1d815f4b134d6c96af8b3dd688a4ee92cfff38e62518eace2cb445147a"},"children":[]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada625baea65088bf0aa131'),\n u'item': u'journal',\n u'qty': 25,\n u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n u'status': u'A'}\n{u'_id': ObjectId('5ada625baea65088bf0aa132'),\n u'item': u'notebook',\n u'qty': 50,\n u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n u'status': u'A'}\n{u'_id': ObjectId('5ada625baea65088bf0aa133'),\n u'item': u'paper',\n u'qty': 100,\n u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n u'status': u'D'}\n{u'_id': ObjectId('5ada625baea65088bf0aa135'),\n u'item': u'postcard',\n u'qty': 45,\n u'size': {u'h': 10, u'uom': u'cm', u'w': 15.25},\n u'status': u'A'}"}]},{"type":"directive","position":{"start":{"line":43}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":43}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb5140aea650d18e402f17'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}\n{'_id': ObjectId('5adb5140aea650d18e402f18'),\n 'item': 'notebook',\n 'qty': 50,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'A'}\n{'_id': ObjectId('5adb5140aea650d18e402f19'),\n 'item': 'paper',\n 'qty': 100,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'D'}\n{'_id': ObjectId('5adb5140aea650d18e402f1b'),\n 'item': 'postcard',\n 'qty': 45,\n 'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":69}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":69}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Create a method to print the results of the iteration"}]},{"type":"code","position":{"start":{"line":2}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393ba\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bd\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":80}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":80}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade424c84c9ca2d56d31697,\n  item: 'journal',\n  qty: 25,\n  size: { h: 14, w: 21, uom: 'cm' },\n  status: 'A' }\n{ _id: 5ade424c84c9ca2d56d31698,\n  item: 'notebook',\n  qty: 50,\n  size: { h: 8.5, w: 11, uom: 'in' },\n  status: 'A' }\n{ _id: 5ade424c84c9ca2d56d31699,\n  item: 'paper',\n  qty: 100,\n  size: { h: 8.5, w: 11, uom: 'in' },\n  status: 'D' }\n{ _id: 5ade424c84c9ca2d56d3169b,\n  item: 'postcard',\n  qty: 45,\n  size: { h: 10, w: 15.25, uom: 'cm' },\n  status: 'A' }"}]},{"type":"directive","position":{"start":{"line":105}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":105}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2750\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2751\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2752\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n{ \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2754\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         \n         .. code-block:: javascript\n\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93b\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-nested-query-op.png\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n          \n            {u'_id': ObjectId('5ada625baea65088bf0aa131'),\n             u'item': u'journal',\n             u'qty': 25,\n             u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n             u'status': u'A'}\n            {u'_id': ObjectId('5ada625baea65088bf0aa132'),\n             u'item': u'notebook',\n             u'qty': 50,\n             u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n             u'status': u'A'}\n            {u'_id': ObjectId('5ada625baea65088bf0aa133'),\n             u'item': u'paper',\n             u'qty': 100,\n             u'size': {u'h': 8.5, u'uom': u'in', u'w': 11},\n             u'status': u'D'}\n            {u'_id': ObjectId('5ada625baea65088bf0aa135'),\n             u'item': u'postcard',\n             u'qty': 45,\n             u'size': {u'h': 10, u'uom': u'cm', u'w': 15.25},\n             u'status': u'A'}\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5adb5140aea650d18e402f17'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n            {'_id': ObjectId('5adb5140aea650d18e402f18'),\n             'item': 'notebook',\n             'qty': 50,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'A'}\n            {'_id': ObjectId('5adb5140aea650d18e402f19'),\n             'item': 'paper',\n             'qty': 100,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'D'}\n            {'_id': ObjectId('5adb5140aea650d18e402f1b'),\n             'item': 'postcard',\n             'qty': 45,\n             'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n             'status': 'A'}\n             \n     - id: java-sync\n       content: |\n         Create a method to print the results of the iteration \n         \n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393ba\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bb\" }, \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393bd\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: nodejs\n       content: |\n         .. code-block:: javascript\n            \n            { _id: 5ade424c84c9ca2d56d31697,\n              item: 'journal',\n              qty: 25,\n              size: { h: 14, w: 21, uom: 'cm' },\n              status: 'A' }\n            { _id: 5ade424c84c9ca2d56d31698,\n              item: 'notebook',\n              qty: 50,\n              size: { h: 8.5, w: 11, uom: 'in' },\n              status: 'A' }\n            { _id: 5ade424c84c9ca2d56d31699,\n              item: 'paper',\n              qty: 100,\n              size: { h: 8.5, w: 11, uom: 'in' },\n              status: 'D' }\n            { _id: 5ade424c84c9ca2d56d3169b,\n              item: 'postcard',\n              qty: 45,\n              size: { h: 10, w: 15.25, uom: 'cm' },\n              status: 'A' }\n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2750\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2751\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2752\"), \"item\" : \"paper\", \"qty\" : 100, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"D\" }\n            { \"_id\" : ObjectId(\"5ade261a9270d01f8c3d2754\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }","static_assets":["f01dfa1d815f4b134d6c96af8b3dd688a4ee92cfff38e62518eace2cb445147a"]},"includes/steps/read_operators":{"_id":"guides/andrew/master/includes/steps/read_operators","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance."}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}],"id":"switch-to-the-test-database"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the database you wish\nto query. In this case we will be using\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":"."}]},{"type":"directive","position":{"start":{"line":4}},"name":"include","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":4}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Select documents using the less-than operator."}],"id":"select-documents-using-the-less-than-operator"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following example retrieves all documents from the inventory\ncollection where the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size.h"}]},{"type":"text","position":{"start":{"line":0}},"value":" field is less than 15. MongoDB uses\n"},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":1}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" to specify fields within\nembedded documents. "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size.h"}]},{"type":"text","position":{"start":{"line":0}},"value":" refers to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"h"}]},{"type":"text","position":{"start":{"line":0}},"value":" field in the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document."}]},{"type":"directive","position":{"start":{"line":6}},"name":"include","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/includes/driver-example-query-18.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":6}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Note that the records have a height (\"size.h\") of\nless than 15."}]},{"type":"directive","position":{"start":{"line":4}},"name":"include","argument":[{"type":"text","position":{"start":{"line":4}},"value":"/includes/results_read5.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":4}},"children":[]}]}]}]}]},"source":"stepnum: 1\ninherit:\n  file: steps-read_server.yaml\n  ref: connect\n---\ntitle: Switch to the ``test`` database.\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n  Switch to the database you wish\n  to query. In this case we will be using\n  ``test``.\n  \n  .. include:: /includes/bind_db.rst\n\n---\ntitle: Select documents using the less-than operator.\nref: in_operator\nlevel: 4\nstepnum: 3\ncontent: |\n  The following example retrieves all documents from the inventory\n  collection where the ``size.h`` field is less than 15. MongoDB uses\n  :ref:`dot notation <document-dot-notation>` to specify fields within\n  embedded documents. ``size.h`` refers to the ``h`` field in the\n  ``size`` document.\n  \n  .. include:: /includes/driver-example-query-18.rst\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 4\ncontent: | \n  .. include:: /includes/iterate_all.rst\n--- \ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 5\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Note that the records have a height (\"size.h\") of\n  less than 15.\n  \n  .. include:: /includes/results_read5.rst\n...\n","static_assets":[]},"includes/driver-example-query-11":{"_id":"guides/andrew/master/includes/driver-example-query-11","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )"}]},{"type":"directive","position":{"start":{"line":8}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":8}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":111}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ status: \"A\", qty: { $lt: 30 } }"}]},{"type":"directive","position":{"start":{"line":18}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":18}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"}]},{"type":"directive","position":{"start":{"line":26}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":26}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"status\", \"A\"},\n\t\t{\"qty\", bson.D{{\"$lt\", 30}}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":35}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":35}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_implied_and():\n   cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})\n   async for doc in cursor:\n       pprint.pprint\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_implied_and())"}]},{"type":"directive","position":{"start":{"line":55}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":55}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(and(eq(\"status\", \"A\"), lt(\"qty\", 30)));"}]},{"type":"directive","position":{"start":{"line":63}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":63}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  status: \"A\", \n  qty: { $lt: 30 }\n});"}]},{"type":"directive","position":{"start":{"line":103}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":103}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var builder = Builders<BsonDocument>.Filter;\nvar filter = builder.And(builder.Eq(\"status\", \"A\"), builder.Lt(\"qty\", 30));\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { status: \"A\", qty: { $lt: 30 } } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { status: \"A\", qty: { $lt: 30 } }\n\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 11\n            :end-before: End Example 11\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 11\n            :end-before: End Example 11\n\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 11\n            :end-before: End Example 11\n \n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n            \n            async def do_retrieve_implied_and():\n               cursor = db.inventory.find({\"status\": \"A\", \"qty\": {\"$lt\": 30}})\n               async for doc in cursor:\n                   pprint.pprint\n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_implied_and())\n\n     - id: java-sync\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 11\n            :end-before: End Example 11\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 11\n            :end-before: End Example 11\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 11\n     #       :end-before: End Example 11\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 11\n     #       :end-before: End Example 11\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 11\n     #       :end-before: End Example 11\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 11\n     #       :end-before: End Example 11\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 11\n            :end-before: End Example 11\n","static_assets":[]},"images/compass-find-filter-and.png#7fa8224f9537968961cf2786ae2c0f465207a8cf76f6c786391b2d45316aba9a":{},"includes/results_read5a":{"_id":"guides/andrew/master/includes/results_read5a","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":10}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":10}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-filter-and.png"}],"options":{"checksum":"7fa8224f9537968961cf2786ae2c0f465207a8cf76f6c786391b2d45316aba9a"},"children":[]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada625baea65088bf0aa131'),\n u'item': u'journal',\n u'qty': 25,\n u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n u'status': u'A'}"}]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3d03fdd183362f86fdd0d6\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]"}]},{"type":"directive","position":{"start":{"line":33}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":33}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5adb5140aea650d18e402f17'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":44}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":44}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":51}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":51}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ _id: 5ade424c84c9ca2d56d31697,\n  item: 'journal',\n  qty: 25,\n  size: { h: 14, w: 21, uom: 'cm' },\n  status: 'A' }"}]},{"type":"directive","position":{"start":{"line":63}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":63}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade26de3d3a851fcd9c95da\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         \n         .. code-block:: javascript\n\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-filter-and.png\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n\n            {u'_id': ObjectId('5ada625baea65088bf0aa131'),\n             u'item': u'journal',\n             u'qty': 25,\n             u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n             u'status': u'A'}\n\n\n     - id: go\n       content: |\n         .. code-block:: go\n\n            &[{_id ObjectID(\"5c3d03fdd183362f86fdd0d6\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5adb5140aea650d18e402f17'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n\n     - id: java-sync\n       content: |\n         \n         .. code-block:: java\n            \n            { \"_id\" : { \"$oid\" : \"5ada88359b267e9b5bd393b9\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: nodejs\n       content: |\n\n         .. code-block:: javascript\n            \n            { _id: 5ade424c84c9ca2d56d31697,\n              item: 'journal',\n              qty: 25,\n              size: { h: 14, w: 21, uom: 'cm' },\n              status: 'A' }\n\n            \n     - id: csharp\n       content: |\n         \n         .. code-block:: c#\n         \n            { \"_id\" : ObjectId(\"5ade26de3d3a851fcd9c95da\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }","static_assets":["7fa8224f9537968961cf2786ae2c0f465207a8cf76f6c786391b2d45316aba9a"]},"includes/extracts/query-12-intro-OR-shell":{"_id":"guides/andrew/master/includes/extracts/query-12-intro-OR-shell","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"extract","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Using the "},{"type":"role","position":{"start":{"line":0}},"name":"query","target":"~op.$or","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" query operator, specify a\ncompound query that joins each clause with a logical "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"OR"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nconjunction so that the query selects the documents in the\ncollection that match at least one condition."}]}]},"source":"ref: _base\ncontent: |\n  Using the {{link}} {{op}}, specify a\n  compound query that joins each clause with a logical ``OR``\n  conjunction so that the query selects the documents in the\n  collection that match at least one condition.\n---\nref: query-12-intro-OR-shell\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":query:`~op.$or`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \"``$or``\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-java\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \":java-sync-api:`OR <com/mongodb/QueryOperators.html#OR>`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-csharp\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":csharp-api:`Or<M_MongoDB_Driver_FilterDefinitionBuilder_1_Or>`\"\n  op: \"filter method\"\n...\n","static_assets":[]},"includes/extracts/query-12-intro-OR":{"_id":"guides/andrew/master/includes/extracts/query-12-intro-OR","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"extract","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Using the  query operator, specify a\ncompound query that joins each clause with a logical "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"OR"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nconjunction so that the query selects the documents in the\ncollection that match at least one condition."}]}]},"source":"ref: _base\ncontent: |\n  Using the {{link}} {{op}}, specify a\n  compound query that joins each clause with a logical ``OR``\n  conjunction so that the query selects the documents in the\n  collection that match at least one condition.\n---\nref: query-12-intro-OR-shell\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":query:`~op.$or`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \"``$or``\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-java\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \":java-sync-api:`OR <com/mongodb/QueryOperators.html#OR>`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-csharp\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":csharp-api:`Or<M_MongoDB_Driver_FilterDefinitionBuilder_1_Or>`\"\n  op: \"filter method\"\n...\n","static_assets":[]},"includes/extracts/query-12-intro-OR-java":{"_id":"guides/andrew/master/includes/extracts/query-12-intro-OR-java","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"extract","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Using the  query operator, specify a\ncompound query that joins each clause with a logical "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"OR"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nconjunction so that the query selects the documents in the\ncollection that match at least one condition."}]}]},"source":"ref: _base\ncontent: |\n  Using the {{link}} {{op}}, specify a\n  compound query that joins each clause with a logical ``OR``\n  conjunction so that the query selects the documents in the\n  collection that match at least one condition.\n---\nref: query-12-intro-OR-shell\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":query:`~op.$or`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \"``$or``\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-java\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \":java-sync-api:`OR <com/mongodb/QueryOperators.html#OR>`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-csharp\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":csharp-api:`Or<M_MongoDB_Driver_FilterDefinitionBuilder_1_Or>`\"\n  op: \"filter method\"\n...\n","static_assets":[]},"includes/extracts/query-12-intro-OR-csharp":{"_id":"guides/andrew/master/includes/extracts/query-12-intro-OR-csharp","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"extract","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Using the "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://mongodb.github.io/mongo-csharp-driver/2.5/apidocs/html/M_MongoDB_Driver_FilterDefinitionBuilder_1_Or.htm","children":[{"type":"text","position":{"start":{"line":0}},"value":"Or"}]},{"type":"text","position":{"start":{"line":0}},"value":" filter method, specify a\ncompound query that joins each clause with a logical "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"OR"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nconjunction so that the query selects the documents in the\ncollection that match at least one condition."}]}]},"source":"ref: _base\ncontent: |\n  Using the {{link}} {{op}}, specify a\n  compound query that joins each clause with a logical ``OR``\n  conjunction so that the query selects the documents in the\n  collection that match at least one condition.\n---\nref: query-12-intro-OR-shell\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":query:`~op.$or`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \"``$or``\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-java\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  op: \":java-sync-api:`OR <com/mongodb/QueryOperators.html#OR>`\"\n  op: \"query operator\"\n---\nref: query-12-intro-OR-csharp\nsource:\n  file: extracts-driver-query-12.yaml\n  ref: _base\nreplacement:\n  link: \":csharp-api:`Or<M_MongoDB_Driver_FilterDefinitionBuilder_1_Or>`\"\n  op: \"filter method\"\n...\n","static_assets":[]},"includes/driver-query-12-intro":{"_id":"guides/andrew/master/includes/driver-query-12-intro","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR-shell.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":6}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":6}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR-shell.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":10}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":10}},"value":"python"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"motor"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":19}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":19}},"value":"java-sync"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR-java.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":23}},"value":"nodejs"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"csharp"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/extracts/query-12-intro-OR-csharp.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR-shell.rst\n\n     - id: compass\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR-shell.rst\n\n     - id: python\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR.rst\n\n\n     - id: motor\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR.rst\n\n     - id: java-sync\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR-java.rst\n\n     - id: nodejs\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR.rst\n\n     - id: csharp\n       content: |\n         .. include:: /includes/extracts/query-12-intro-OR-csharp.rst\n","static_assets":[]},"includes/driver-example-query-12":{"_id":"guides/andrew/master/includes/driver-example-query-12","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )"}]},{"type":"directive","position":{"start":{"line":9}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":9}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":112}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] }"}]},{"type":"directive","position":{"start":{"line":18}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":18}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find(\n    {\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"}]},{"type":"directive","position":{"start":{"line":27}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":27}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"$or\",\n\t\t\tbson.A{\n\t\t\t\tbson.D{{\"status\", \"A\"}},\n\t\t\t\tbson.D{{\"qty\", bson.D{{\"$lt\", 30}}}},\n\t\t\t}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":35}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":35}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find(\n    {\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_or():\n    cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})\n    async for doc in cursor:\n        pprint.pprint(doc)\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_or())"}]},{"type":"directive","position":{"start":{"line":55}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":55}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(or(eq(\"status\", \"A\"), lt(\"qty\", 30)));"}]},{"type":"directive","position":{"start":{"line":63}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":63}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  $or: [ {status: \"A\" }, { qty: { $lt: 30 } } ]\n});"}]},{"type":"directive","position":{"start":{"line":71}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":71}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var builder = Builders<BsonDocument>.Filter;\nvar filter = builder.Or(builder.Eq(\"status\", \"A\"), builder.Lt(\"qty\", 30));\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { $or: [ { status: \"A\" }, { qty: { $lt: 30 } } ] }\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n            \n            async def do_retrieve_or():\n                cursor = db.inventory.find({\"$or\": [{\"status\": \"A\"}, {\"qty\": {\"$lt\": 30}}]})\n                async for doc in cursor:\n                    pprint.pprint(doc)\n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_or())\n\n     - id: java-sync\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 12\n            :end-before: End Example 12\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 12\n     #       :end-before: End Example 12\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 12\n     #       :end-before: End Example 12\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 12\n     #       :end-before: End Example 12\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 12\n     #       :end-before: End Example 12\n\n","static_assets":[]},"images/compass-find-filter-or.png#531895ed496aee431ab4dfee586f25a1769017eb42a619c66ce6294a4c7165e1":{},"includes/results_read6":{"_id":"guides/andrew/master/includes/results_read6","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":12}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":12}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-filter-or.png"}],"options":{"checksum":"531895ed496aee431ab4dfee586f25a1769017eb42a619c66ce6294a4c7165e1"},"children":[]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5ae14d2e124da839884ff939'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}\n{'_id': ObjectId('5ae14d2e124da839884ff93a'),\n 'item': 'notebook',\n 'qty': 50,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'A'}\n{'_id': ObjectId('5ae14d2e124da839884ff93d'),\n 'item': 'postcard',\n 'qty': 45,\n 'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5ae14d2e124da839884ff939'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}\n '_id': ObjectId('5ae14d2e124da839884ff93a'),\n 'item': 'notebook',\n 'qty': 50,\n 'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n 'status': 'A'}\n '_id': ObjectId('5ae14d2e124da839884ff93d'),\n 'item': 'postcard',\n 'qty': 45,\n 'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":59}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":59}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c17f\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c180\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c183\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":68}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":68}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"[ { _id: 5ae3a1a0fe333febb35af7b3,\n    item: 'journal',\n    qty: 25,\n    size: { h: 14, w: 21, uom: 'cm' },\n    status: 'A' },\n  { _id: 5ae3a1a0fe333febb35af7b4,\n    item: 'notebook',\n    qty: 50,\n    size: { h: 8.5, w: 11, uom: 'in' },\n    status: 'A' },\n  { _id: 5ae3a1a0fe333febb35af7b7,\n    item: 'postcard',\n    qty: 45,\n    size: { h: 10, w: 15.25, uom: 'cm' },\n    status: 'A' } ]"}]},{"type":"directive","position":{"start":{"line":89}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":89}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a29\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a2a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a2d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         \n         .. code-block:: javascript\n            \n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n\n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-filter-or.png\n\n     - id: python\n       content: |\n         \n         .. code-block:: python\n            \n            {'_id': ObjectId('5ae14d2e124da839884ff939'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n            {'_id': ObjectId('5ae14d2e124da839884ff93a'),\n             'item': 'notebook',\n             'qty': 50,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'A'}\n            {'_id': ObjectId('5ae14d2e124da839884ff93d'),\n             'item': 'postcard',\n             'qty': 45,\n             'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n             'status': 'A'}\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n            \n            {'_id': ObjectId('5ae14d2e124da839884ff939'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n             '_id': ObjectId('5ae14d2e124da839884ff93a'),\n             'item': 'notebook',\n             'qty': 50,\n             'size': {'h': 8.5, 'uom': 'in', 'w': 11},\n             'status': 'A'}\n             '_id': ObjectId('5ae14d2e124da839884ff93d'),\n             'item': 'postcard',\n             'qty': 45,\n             'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n             'status': 'A'}\n\n     - id: java-sync\n       content: |\n         \n         .. code-block:: java\n            \n            { \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c17f\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c180\" }, \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ae39ecb124da8e9ed76c183\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: nodejs\n       content: |\n\n         .. code-block:: javascript\n            \n            [ { _id: 5ae3a1a0fe333febb35af7b3,\n                item: 'journal',\n                qty: 25,\n                size: { h: 14, w: 21, uom: 'cm' },\n                status: 'A' },\n              { _id: 5ae3a1a0fe333febb35af7b4,\n                item: 'notebook',\n                qty: 50,\n                size: { h: 8.5, w: 11, uom: 'in' },\n                status: 'A' },\n              { _id: 5ae3a1a0fe333febb35af7b7,\n                item: 'postcard',\n                qty: 45,\n                size: { h: 10, w: 15.25, uom: 'cm' },\n                status: 'A' } ]\n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n            \n            { \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a29\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a2a\"), \"item\" : \"notebook\", \"qty\" : 50, \"size\" : { \"h\" : 8.5, \"w\" : 11, \"uom\" : \"in\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae3a38356cd4decbfea7a2d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }","static_assets":["531895ed496aee431ab4dfee586f25a1769017eb42a619c66ce6294a4c7165e1"]},"includes/steps/read_compound":{"_id":"guides/andrew/master/includes/steps/read_compound","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Write an implied AND query."}],"id":"write-an-implied-and-query"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To write a compound query in MongoDB that matches all of the query\npredicates (i.e. a logical AND), specify all of the fields that you\nwish to match in your find document. By default, MongoDB matches all\nof the fields."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"The following example retrieves all documents in the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":5}},"value":"\ncollection where the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"status"}]},{"type":"text","position":{"start":{"line":5}},"value":" equals "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"\"A\""}]},{"type":"text","position":{"start":{"line":5}},"value":" "},{"type":"strong","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"and"}]},{"type":"text","position":{"start":{"line":5}},"value":" "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"qty"}]},{"type":"text","position":{"start":{"line":5}},"value":" is less\nthan ("},{"type":"role","position":{"start":{"line":5}},"name":"query","target":"$lt","children":[]},{"type":"text","position":{"start":{"line":5}},"value":") "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"30"}]},{"type":"text","position":{"start":{"line":5}},"value":":"}]},{"type":"directive","position":{"start":{"line":9}},"name":"include","argument":[{"type":"text","position":{"start":{"line":9}},"value":"/includes/driver-example-query-11.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":9}},"children":[]}]},{"type":"paragraph","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"MongoDB also provides a "},{"type":"role","position":{"start":{"line":11}},"name":"query","target":"~op.$and","children":[]},{"type":"text","position":{"start":{"line":11}},"value":" logical operator as part of\nits logical query operators, but the \"implied AND\" described above is\na more common pattern."}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all_noshellcursor.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Your results should look something like\nthe JSON below. Note that the record below has a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" of "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"\"A\""}]},{"type":"text","position":{"start":{"line":0}},"value":"\nand a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"qty"}]},{"type":"text","position":{"start":{"line":0}},"value":" less than "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"30"}]},{"type":"text","position":{"start":{"line":0}},"value":" per the criteria in the compound query."}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/results_read5a.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Write an \"or\" query."}],"id":"write-an-or-query"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/driver-query-12-intro.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"The following example retrieves all documents in the collection where\nthe "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"status"}]},{"type":"text","position":{"start":{"line":2}},"value":" equals "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"\"A\""}]},{"type":"text","position":{"start":{"line":2}},"value":" "},{"type":"strong","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"or"}]},{"type":"text","position":{"start":{"line":2}},"value":" "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"qty"}]},{"type":"text","position":{"start":{"line":2}},"value":" is less than\n"},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"30"}]},{"type":"text","position":{"start":{"line":2}},"value":":"}]},{"type":"directive","position":{"start":{"line":6}},"name":"include","argument":[{"type":"text","position":{"start":{"line":6}},"value":"/includes/driver-example-query-12.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":6}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over rhe results."}],"id":"iterate-over-rhe-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned. Note that the record has a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" of "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"\"A\""}]},{"type":"text","position":{"start":{"line":0}},"value":"\nbut a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"qty"}]},{"type":"text","position":{"start":{"line":0}},"value":" of more than "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"30"}]},{"type":"text","position":{"start":{"line":0}},"value":", which is acceptable according to\nthe "},{"type":"role","position":{"start":{"line":0}},"name":"query","target":"$or","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" criteria."}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/results_read6.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]}]},"source":"title: Write an implied AND query.\nref: process-mongodb\nlevel: 4\nstepnum: 1\ncontent: |\n  \n  To write a compound query in MongoDB that matches all of the query\n  predicates (i.e. a logical AND), specify all of the fields that you\n  wish to match in your find document. By default, MongoDB matches all\n  of the fields.\n    \n  The following example retrieves all documents in the ``inventory``\n  collection where the ``status`` equals ``\"A\"`` **and** ``qty`` is less\n  than (:query:`$lt`) ``30``:\n\n  .. include:: /includes/driver-example-query-11.rst\n\n  MongoDB also provides a :query:`~op.$and` logical operator as part of\n  its logical query operators, but the \"implied AND\" described above is\n  a more common pattern.\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 2\ncontent: |\n  .. include:: /includes/iterate_all_noshellcursor.rst\n\n---\ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 3\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Your results should look something like\n  the JSON below. Note that the record below has a ``status`` of ``\"A\"``\n  and a ``qty`` less than ``30`` per the criteria in the compound query.\n  \n  .. include:: /includes/results_read5a.rst\n  \n---\ntitle: Write an \"or\" query.\nref: query-or\nlevel: 4\nstepnum: 4\ncontent: |\n  \n  .. include:: /includes/driver-query-12-intro.rst\n  \n  The following example retrieves all documents in the collection where\n  the ``status`` equals ``\"A\"`` **or** ``qty`` is less than\n  ``30``:\n\n  .. include:: /includes/driver-example-query-12.rst\n\n---\ntitle: Iterate over rhe results.\nref: iterate-all-or\nlevel: 4\nstepnum: 5\ncontent: |\n  .. include:: /includes/iterate_all.rst\n\n---\ntitle: Check your results.\nref: check-query-one-or\nlevel: 4\nstepnum: 6\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned. Note that the record has a ``status`` of ``\"A\"``\n  but a ``qty`` of more than ``30``, which is acceptable according to\n  the :query:`$or` criteria.\n  \n  .. include:: /includes/results_read6.rst\n...\n","static_assets":[]},"myCursor = db.inventory.find( {\n     status: \"A\",\n     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]\n} )":{},"{ status: \"A\", $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ] }":{},"includes/driver-example-query-13":{"_id":"guides/andrew/master/includes/driver-example-query-13","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"myCursor = db.inventory.find( {\n     status: \"A\",\n     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]\n} )"}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"compass"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":115}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ status: \"A\", $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ] }"}]},{"type":"directive","position":{"start":{"line":21}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":21}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\n    \"status\": \"A\",\n    \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"}]},{"type":"directive","position":{"start":{"line":29}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":29}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\ncursor, err := coll.Find(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"status\", \"A\"},\n\t\t{\"$or\", bson.A{\n\t\t\tbson.D{{\"qty\", bson.D{{\"$lt\", 30}}}},\n\t\t\tbson.D{{\"item\", primitive.Regex{Pattern: \"^p\", Options: \"\"}}},\n\t\t}},\n\t})\n"}]},{"type":"directive","position":{"start":{"line":37}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":37}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"cursor = db.inventory.find({\n    \"status\": \"A\",\n    \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, this is how you might wrap this call and run\nit with the asyncio event loop."}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_retrieve_regex():\n    cursor = db.inventory.find({\n           \"status\": \"A\",\n           \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})\n    async for doc in cursor:\n        pprint.pprint(doc)\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_retrieve_regex())"}]},{"type":"directive","position":{"start":{"line":59}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":59}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"findIterable = collection.find(\n        and(eq(\"status\", \"A\"),\n                or(lt(\"qty\", 30), regex(\"item\", \"^p\")))\n);"}]},{"type":"directive","position":{"start":{"line":67}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":67}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"var cursor = db.collection('inventory').find({ \n  status: \"A\",\n  $or: [ { qty: { $lt: 30 } }, { item: { $regex: \"^p\" } } ]\n});"}]},{"type":"directive","position":{"start":{"line":107}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":107}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var builder = Builders<BsonDocument>.Filter;\nvar filter = builder.And(\n    builder.Eq(\"status\", \"A\"),\n    builder.Or(builder.Lt(\"qty\", 30), builder.Regex(\"item\", new BsonRegularExpression(\"^p\"))));\nvar result = collection.Find(filter).ToList();"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         .. code-block:: javascript\n\n            myCursor = db.inventory.find( {\n                 status: \"A\",\n                 $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]\n            } )\n\n     - id: compass\n       content: |\n         Copy the following filter into the Compass query bar and click\n         :guilabel:`Find`:\n\n         .. code-block:: javascript\n\n            { status: \"A\", $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ] }\n\n\n     - id: python\n       content: |\n         .. literalinclude:: /driver-examples/test_examples.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 13\n            :end-before: End Example 13\n\n     - id: go\n       content: |\n         .. literalinclude:: /driver-examples/examples.go\n            :language: go\n            :dedent: 2\n            :start-after: Start Example 13\n            :end-before: End Example 13\n\n     - id: motor\n       content: |\n         .. literalinclude:: /driver-examples/test_examples_motor.py\n            :language: python\n            :dedent: 8\n            :start-after: Start Example 13\n            :end-before: End Example 13\n\n         For completeness, this is how you might wrap this call and run\n         it with the asyncio event loop.\n\n         .. code-block:: python\n\n            async def do_retrieve_regex():\n                cursor = db.inventory.find({\n                       \"status\": \"A\",\n                       \"$or\": [{\"qty\": {\"$lt\": 30}}, {\"item\": {\"$regex\": \"^p\"}}]})\n                async for doc in cursor:\n                    pprint.pprint(doc)\n            loop = asyncio.get_event_loop()\n            loop.run_until_complete(do_retrieve_regex())\n\n     - id: java-sync\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationSamples.java\n            :language: java\n            :dedent: 8\n            :start-after: Start Example 13\n            :end-before: End Example 13\n\n     - id: nodejs\n       content: |\n         .. literalinclude:: /driver-examples/examples_tests.js\n            :language: javascript\n            :dedent: 8\n            :start-after: Start Example 13\n            :end-before: End Example 13\n\n     #- id: php\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n     #       :language: php\n     #       :dedent: 8\n     #       :start-after: Start Example 13\n     #       :end-before: End Example 13\n\n     #- id: perl\n     #  content: |\n     #    .. literalinclude:: /driver-examples/driver-examples.t\n     #       :language: perl\n     #       :dedent: 4\n     #       :start-after: Start Example 13\n     #       :end-before: End Example 13\n\n     #- id: ruby\n     #  content: |\n     #    .. literalinclude:: /driver-examples/shell_examples_spec.rb\n     #       :language: ruby\n     #       :dedent: 8\n     #       :start-after: Start Example 13\n     #       :end-before: End Example 13\n\n     #- id: scala\n     #  content: |\n     #    .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n     #       :language: scala\n     #       :dedent: 4\n     #       :start-after: Start Example 13\n     #       :end-before: End Example 13\n\n     - id: csharp\n       content: |\n         .. literalinclude:: /driver-examples/DocumentationExamples.cs\n            :language: c#\n            :dedent: 12\n            :start-after: Start Example 13\n            :end-before: End Example 13\n","static_assets":[]},"images/compass-find-filter-and-or.png#20ff344fa80a7608db0b6af8544178b9bfe7adbb753dae03d09b1a40536d3d12":{},"includes/results_read7":{"_id":"guides/andrew/master/includes/results_read7","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":10}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":10}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/images/compass-find-filter-and-or.png"}],"options":{"checksum":"20ff344fa80a7608db0b6af8544178b9bfe7adbb753dae03d09b1a40536d3d12"},"children":[]}]},{"type":"directive","position":{"start":{"line":15}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":15}},"value":"python"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{u'_id': ObjectId('5ada8c109b267e9d1ade9038'),\n u'item': u'journal',\n u'qty': 25,\n u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n u'status': u'A'}\n{u'_id': ObjectId('5ada8c109b267e9d1ade903c'),\n u'item': u'postcard',\n u'qty': 45,\n u'size': {u'h': 10, u'uom': u'cm', u'w': 15.25},\n u'status': u'A'}"}]},{"type":"directive","position":{"start":{"line":31}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":31}},"value":"go"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"go","copyable":true,"value":"&[{_id ObjectID(\"5c3d03fdd183362f86fdd0d6\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]\n&[{_id ObjectID(\"5c3d03fdd183362f86fdd0da\")} {item postcard} {qty 45} {size [{h 10} {w 15.25} {uom cm}]} {status A}]"}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"motor"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"python","copyable":true,"value":"{'_id': ObjectId('5ade276281031b2005294976'),\n 'item': 'postcard',\n 'qty': 45,\n 'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n 'status': 'A'}\n{'_id': ObjectId('5ade261a9270d01f8c3d2750'),\n 'item': 'journal',\n 'qty': 25,\n 'size': {'h': 14, 'uom': 'cm', 'w': 21},\n 'status': 'A'}"}]},{"type":"directive","position":{"start":{"line":54}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":54}},"value":"java-sync"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"java","copyable":true,"value":"{ \"_id\" : { \"$oid\" : \"5ada8c109b267e9d1ade9038\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : { \"$oid\" : \"5ada8c109b267e9d1ade903c\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]},{"type":"directive","position":{"start":{"line":61}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":61}},"value":"nodejs"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"[ { _id: 5adedb5ffa97c643763556e8,\n    item: 'journal',\n    qty: 25,\n    size: { h: 14, w: 21, uom: 'cm' },\n    status: 'A' },\n  { _id: 5adedb5ffa97c643763556ec,\n    item: 'postcard',\n    qty: 45,\n    size: { h: 10, w: 15.25, uom: 'cm' },\n    status: 'A' } ]"}]},{"type":"directive","position":{"start":{"line":77}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":77}},"value":"csharp"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"c#","copyable":true,"value":"{ \"_id\" : ObjectId(\"5ade276281031b2005294972\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n{ \"_id\" : ObjectId(\"5ade276281031b2005294976\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         \n         .. code-block:: javascript\n\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff939\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ae14d2e124da839884ff93d\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n     \n     - id: compass\n       content: |\n\n         .. figure:: /images/compass-find-filter-and-or.png\n     \n     - id: python\n       content: |\n         \n         .. code-block:: python\n            \n            {u'_id': ObjectId('5ada8c109b267e9d1ade9038'),\n             u'item': u'journal',\n             u'qty': 25,\n             u'size': {u'h': 14, u'uom': u'cm', u'w': 21},\n             u'status': u'A'}\n            {u'_id': ObjectId('5ada8c109b267e9d1ade903c'),\n             u'item': u'postcard',\n             u'qty': 45,\n             u'size': {u'h': 10, u'uom': u'cm', u'w': 15.25},\n             u'status': u'A'}\n\n     - id: go\n       content: |\n         .. code-block:: go\n\n            &[{_id ObjectID(\"5c3d03fdd183362f86fdd0d6\")} {item journal} {qty 25} {size [{h 14} {w 21} {uom cm}]} {status A}]\n            &[{_id ObjectID(\"5c3d03fdd183362f86fdd0da\")} {item postcard} {qty 45} {size [{h 10} {w 15.25} {uom cm}]} {status A}]\n\n     - id: motor\n       content: |\n         \n         .. code-block:: python\n\n            {'_id': ObjectId('5ade276281031b2005294976'),\n             'item': 'postcard',\n             'qty': 45,\n             'size': {'h': 10, 'uom': 'cm', 'w': 15.25},\n             'status': 'A'}\n            {'_id': ObjectId('5ade261a9270d01f8c3d2750'),\n             'item': 'journal',\n             'qty': 25,\n             'size': {'h': 14, 'uom': 'cm', 'w': 21},\n             'status': 'A'}\n\n     - id: java-sync\n       content: |\n         .. code-block:: java\n         \n            { \"_id\" : { \"$oid\" : \"5ada8c109b267e9d1ade9038\" }, \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : { \"$oid\" : \"5ada8c109b267e9d1ade903c\" }, \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n\n     - id: nodejs\n       content: |\n         .. code-block:: javascript\n            \n            [ { _id: 5adedb5ffa97c643763556e8,\n                item: 'journal',\n                qty: 25,\n                size: { h: 14, w: 21, uom: 'cm' },\n                status: 'A' },\n              { _id: 5adedb5ffa97c643763556ec,\n                item: 'postcard',\n                qty: 45,\n                size: { h: 10, w: 15.25, uom: 'cm' },\n                status: 'A' } ]\n           \n\n     - id: csharp\n       content: |\n         .. code-block:: c#\n           \n            { \"_id\" : ObjectId(\"5ade276281031b2005294972\"), \"item\" : \"journal\", \"qty\" : 25, \"size\" : { \"h\" : 14, \"w\" : 21, \"uom\" : \"cm\" }, \"status\" : \"A\" }\n            { \"_id\" : ObjectId(\"5ade276281031b2005294976\"), \"item\" : \"postcard\", \"qty\" : 45, \"size\" : { \"h\" : 10, \"w\" : 15.25, \"uom\" : \"cm\" }, \"status\" : \"A\" }","static_assets":["20ff344fa80a7608db0b6af8544178b9bfe7adbb753dae03d09b1a40536d3d12"]},"includes/steps/read_compound2":{"_id":"guides/andrew/master/includes/steps/read_compound2","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Write an implied AND query with an \"or\" clause."}],"id":"write-an-implied-and-query-with-an-or-clause"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In the following example, the compound query document selects all\ndocuments in the collection where the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" equals "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"\"A\""}]},{"type":"text","position":{"start":{"line":0}},"value":"\n"},{"type":"strong","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"and"}]},{"type":"text","position":{"start":{"line":0}},"value":" "},{"type":"emphasis","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"either"}]},{"type":"text","position":{"start":{"line":0}},"value":" "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"qty"}]},{"type":"text","position":{"start":{"line":0}},"value":" is less than 30 "},{"type":"emphasis","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"or"}]},{"type":"text","position":{"start":{"line":0}},"value":"\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"item"}]},{"type":"text","position":{"start":{"line":0}},"value":" starts with the character "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"p"}]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/driver-example-query-13.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]},{"type":"directive","position":{"start":{"line":7}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":9}},"children":[{"type":"text","position":{"start":{"line":9}},"value":"MongoDB supports regular expressions to\nperform string pattern matches."}]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Iterate over the results."}],"id":"iterate-over-the-results"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/iterate_all_noshellcursor.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results."}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"If you have loaded data into your test database, you will see one or\nmore JSON documents returned."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/results_read7.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]}]},"source":"title: Write an implied AND query with an \"or\" clause.\nref: process-mongodb\nlevel: 4\nstepnum: 1\ncontent: |\n  In the following example, the compound query document selects all\n  documents in the collection where the ``status`` equals ``\"A\"``\n  **and** *either* ``qty`` is less than 30 *or*\n  ``item`` starts with the character ``p``:\n\n  .. include:: /includes/driver-example-query-13.rst\n\n  .. note::\n\n     MongoDB supports regular expressions to\n     perform string pattern matches.\n\n---\ntitle: Iterate over the results.\nref: iterate-all\nlevel: 4\nstepnum: 2\ncontent: |\n  .. include:: /includes/iterate_all_noshellcursor.rst\n\n---\ntitle: Check your results.\nref: check-query-one\nlevel: 4\nstepnum: 3\ncontent: |\n  \n  If you have loaded data into your test database, you will see one or\n  more JSON documents returned.\n  \n  .. include:: /includes/results_read7.rst\n\n  .. include:: /includes/drivers_close_connection.rst\n...","static_assets":[]},"server/read_operators":{"_id":"guides/andrew/master/server/read_operators","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"read-data-using-operators-and-compound-queries","children":[{"type":"text","position":{"start":{"line":5}},"value":"Read Data using Operators and Compound Queries"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"go"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"level","argument":[{"type":"text","position":{"start":{"line":23}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":25}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"In the previous read guide, "},{"type":"role","position":{"start":{"line":29}},"name":"doc","target":"/server/read_queries","children":[]},{"type":"text","position":{"start":{"line":29}},"value":",\nyou read data using embedded fields and "},{"type":"literal","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"dot notation"}]},{"type":"text","position":{"start":{"line":29}},"value":". In\nthis guide, you will:"}]},{"type":"list","position":{"start":{"line":33}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"read data from the "},{"type":"literal","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":33}},"value":" collection with MongoDB's comparison operators."}]}]},{"type":"listItem","position":{"start":{"line":33}},"children":[{"type":"paragraph","position":{"start":{"line":34}},"children":[{"type":"text","position":{"start":{"line":34}},"value":"combine query criteria to make compound queries"}]}]}]}]},{"type":"directive","position":{"start":{"line":36}},"name":"time","argument":[{"type":"text","position":{"start":{"line":36}},"value":"30"}],"children":[]},{"type":"directive","position":{"start":{"line":38}},"name":"prerequisites","argument":[],"children":[{"type":"directive","position":{"start":{"line":40}},"name":"include","argument":[{"type":"text","position":{"start":{"line":40}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":40}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":42}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":44}},"name":"include","argument":[{"type":"text","position":{"start":{"line":44}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":44}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":46}},"name":"procedure","argument":[],"children":[{"type":"section","position":{"start":{"line":49}},"children":[{"type":"heading","position":{"start":{"line":49}},"id":"read-data-with-embedded-fields-and-comparison-operators","children":[{"type":"text","position":{"start":{"line":49}},"value":"Read Data with Embedded Fields and Comparison Operators"}]},{"type":"paragraph","position":{"start":{"line":50}},"children":[{"type":"text","position":{"start":{"line":50}},"value":"In this exercise, you will read data using comparison operators."}]},{"type":"directive","position":{"start":{"line":52}},"name":"include","argument":[{"type":"text","position":{"start":{"line":52}},"value":"/includes/steps/read_operators.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":52}},"children":[]}]}]},{"type":"section","position":{"start":{"line":55}},"children":[{"type":"heading","position":{"start":{"line":55}},"id":"read-data-with-compound-queries","children":[{"type":"text","position":{"start":{"line":55}},"value":"Read Data with Compound Queries"}]},{"type":"paragraph","position":{"start":{"line":56}},"children":[{"type":"text","position":{"start":{"line":56}},"value":"Now you will read data from MongoDB using AND and OR logic to form compound queries."}]},{"type":"directive","position":{"start":{"line":58}},"name":"include","argument":[{"type":"text","position":{"start":{"line":58}},"value":"/includes/steps/read_compound.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":58}},"children":[]}]}]},{"type":"section","position":{"start":{"line":61}},"children":[{"type":"heading","position":{"start":{"line":61}},"id":"retrieving-data-with-more-than-one-compounding-clause","children":[{"type":"text","position":{"start":{"line":61}},"value":"Retrieving Data with More Than One Compounding Clause"}]},{"type":"paragraph","position":{"start":{"line":63}},"children":[{"type":"text","position":{"start":{"line":63}},"value":"Now you will retrieve data from MongoDB using AND and OR logic together to form compound queries."}]},{"type":"directive","position":{"start":{"line":65}},"name":"include","argument":[{"type":"text","position":{"start":{"line":65}},"value":"/includes/steps/read_compound2.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":65}},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":67}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"Congratulations! If you have successfully completed this guide, you have read data from MongoDB\nusing MongoDB query operators and compound queries."}]}]},{"type":"directive","position":{"start":{"line":72}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":74}},"children":[{"type":"text","position":{"start":{"line":74}},"value":"In the next guide, you'll learn how to update data in MongoDB."}]},{"type":"list","position":{"start":{"line":76}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":76}},"children":[{"type":"paragraph","position":{"start":{"line":76}},"children":[{"type":"role","position":{"start":{"line":76}},"name":"doc","label":{"type":"text","value":"Update Data in MongoDB","position":{"start":{"line":71}}},"target":"/server/update","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":78}},"name":"seealso","argument":[],"children":[{"type":"list","position":{"start":{"line":80}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":80}},"children":[{"type":"paragraph","position":{"start":{"line":80}},"children":[{"type":"role","position":{"start":{"line":80}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":80}},"children":[{"type":"paragraph","position":{"start":{"line":81}},"children":[{"type":"role","position":{"start":{"line":81}},"name":"doc","target":"/server/update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":80}},"children":[{"type":"paragraph","position":{"start":{"line":82}},"children":[{"type":"role","position":{"start":{"line":82}},"name":"doc","target":"/server/delete","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Read Data using Operators and Compound Queries\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   languages:\n     go\n     shell\n     compass\n     python\n     java-sync\n     nodejs\n     motor\n     csharp\n   result_description:\n\n      In the previous read guide, :doc:`/server/read_queries`,\n      you read data using embedded fields and ``dot notation``. In\n      this guide, you will:\n\n      - read data from the ``inventory`` collection with MongoDB's comparison operators.\n      - combine query criteria to make compound queries\n\n   time: 30\n   prerequisites:\n\n     .. include:: /includes/prereqs_read_CRUD.rst\n\n   check_your_environment:\n\n     .. include:: /includes/check_for_drivers_install.rst\n\n   procedure:\n\n     Read Data with Embedded Fields and Comparison Operators\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     In this exercise, you will read data using comparison operators.\n\n     .. include:: /includes/steps/read_operators.rst\n\n     Read Data with Compound Queries\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     Now you will read data from MongoDB using AND and OR logic to form compound queries.\n\n     .. include:: /includes/steps/read_compound.rst\n\n     Retrieving Data with More Than One Compounding Clause\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n     Now you will retrieve data from MongoDB using AND and OR logic together to form compound queries.\n\n     .. include:: /includes/steps/read_compound2.rst\n\n   summary:\n\n     Congratulations! If you have successfully completed this guide, you have read data from MongoDB\n     using MongoDB query operators and compound queries.\n\n   whats_next:\n     In the next guide, you'll learn how to update data in MongoDB.\n\n     * :doc:`Update Data in MongoDB </server/update>`\n   seealso:\n     - :doc:`/server/insert`\n     - :doc:`/server/update`\n     - :doc:`/server/delete`\n","static_assets":[]},"db.inventory.updateOne(\n    { \"item\" : \"paper\" }, // specifies the document to update\n    {\n      $set: {  \"size.uom\" : \"cm\",  \"status\" : \"P\" },\n      $currentDate: { \"lastModified\": true }\n    }\n)":{},"images/compass-example-update-52-find.png#c2e1cff80deecc54bcf419e80daf67d724f4e6adcde226c2d924bd1afea68640":{},"images/compass-example-update-52-set-and-currentDate.png#d076125d2bb3dd47866b834204ccf8e7c478ffd56e7197f55d7c27ff83ea0aaa":{},"images/compass-example-update-52-finalize.png#21a4bb878f9ea850390c797e00dc1ef3bed4342afda6723bd628d9155d384de2":{},"db.collection('inventory').updateOne(\n  { item: \"paper\" },\n  { $set: { \"size.uom\": \"cm\", status: \"P\" },\n    $currentDate: { lastModified: true } })\n.then(function(result) {\n  // process result\n})            ":{},"includes/driver-example-update-52":{"_id":"guides/andrew/master/includes/driver-example-update-52","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following operation updates the "},{"type":"strong","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"first"}]},{"type":"text","position":{"start":{"line":0}},"value":" document with "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"item"}]},{"type":"text","position":{"start":{"line":0}},"value":" equal\nto "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"paper"}]},{"type":"text","position":{"start":{"line":0}},"value":". The operation uses:"}]},{"type":"directive","position":{"start":{"line":3}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":5}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":5}},"value":"shell"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"role","position":{"start":{"line":0}},"name":"update","target":"~up.$set","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" to update the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" field and the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":220}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"role","position":{"start":{"line":5}},"name":"update","target":"~up.$currentDate","children":[]},{"type":"text","position":{"start":{"line":5}},"value":" to set the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":5}},"value":" field to the\ncurrent date."}]}]}]},{"type":"code","position":{"start":{"line":8}},"lang":"javascript","copyable":true,"value":"db.inventory.updateOne(\n    { \"item\" : \"paper\" }, // specifies the document to update\n    {\n      $set: {  \"size.uom\" : \"cm\",  \"status\" : \"P\" },\n      $currentDate: { \"lastModified\": true }\n    }\n)"}]},{"type":"directive","position":{"start":{"line":25}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":25}},"value":"compass"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":220}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ \"item\" : \"paper\" }"}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Click the edit icon on the first document returned:"}]},{"type":"directive","position":{"start":{"line":10}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":10}},"value":"/images/compass-example-update-52-find.png"}],"options":{"alt":"Screenshot of the MongoDB Compass interface searching for documents in the inventory collection in the test database where the \"item\" field value is \"paper\". One document is displayed.","width":"100%","checksum":"c2e1cff80deecc54bcf419e80daf67d724f4e6adcde226c2d924bd1afea68640"},"children":[]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"Expand the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"size"}]},{"type":"text","position":{"start":{"line":15}},"value":" field and update the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"uom"}]},{"type":"text","position":{"start":{"line":15}},"value":" value to "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"cm"}]},{"type":"text","position":{"start":{"line":15}},"value":".\nClick inside the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"status"}]},{"type":"text","position":{"start":{"line":15}},"value":" field and click the plus button,\nthen click "},{"type":"role","position":{"start":{"line":15}},"name":"guilabel","label":{"type":"text","value":"Add field after status","position":{"start":{"line":235}}},"children":[]},{"type":"text","position":{"start":{"line":15}},"value":".\nAdd a "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":15}},"value":" field, select "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"Date"}]},{"type":"text","position":{"start":{"line":15}},"value":" as its type\nusing the drop-down menu on the right, and input today's date:"}]},{"type":"directive","position":{"start":{"line":21}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":21}},"value":"/images/compass-example-update-52-set-and-currentDate.png"}],"options":{"alt":"Screenshot of the MongoDB Compass interface where the first returned document has been edited to change the size.uom field value to \"cm\" and add a lastModified date field with value 2018-04-17.","width":"100%","checksum":"d076125d2bb3dd47866b834204ccf8e7c478ffd56e7197f55d7c27ff83ea0aaa"},"children":[]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"Click "},{"type":"role","position":{"start":{"line":26}},"name":"guilabel","label":{"type":"text","value":"Update","position":{"start":{"line":246}}},"children":[]},{"type":"text","position":{"start":{"line":26}},"value":"."}]},{"type":"directive","position":{"start":{"line":28}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":28}},"value":"/images/compass-example-update-52-finalize.png"}],"options":{"alt":"Screenshot of the MongoDB Compass interface where the \"Update\" button is selected to finalize the changes made to a document.","width":"100%","checksum":"21a4bb878f9ea850390c797e00dc1ef3bed4342afda6723bd628d9155d384de2"},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":58}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":58}},"value":"go"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"$set"}]},{"type":"text","position":{"start":{"line":0}},"value":" to update the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" field and the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":220}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"$currentDate"}]},{"type":"text","position":{"start":{"line":5}},"value":" to set the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":5}},"value":" field to the\ncurrent date."}]}]}]},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"Before updating the data, you'll need to assign the "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":8}},"value":" collection in the "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"test"}]},{"type":"text","position":{"start":{"line":8}},"value":" database to a variable:"}]},{"type":"code","lang":"go","copyable":false,"value":"coll := db.Collection(\"inventory\")\n"},{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"Followed by the call to update:"}]},{"type":"code","lang":"go","copyable":false,"value":"\nresult, err := coll.UpdateOne(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"item\", \"paper\"},\n\t},\n\tbson.D{\n\t\t{\"$set\", bson.D{\n\t\t\t{\"size.uom\", \"cm\"},\n\t\t\t{\"status\", \"P\"},\n\t\t}},\n\t\t{\"$currentDate\", bson.D{\n\t\t\t{\"lastModified\", true},\n\t\t}},\n\t},\n)\n"}]},{"type":"directive","position":{"start":{"line":87}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":87}},"value":"python"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"$set"}]},{"type":"text","position":{"start":{"line":0}},"value":" to update the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" field and the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":220}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"$currentDate"}]},{"type":"text","position":{"start":{"line":5}},"value":" to set the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":5}},"value":" field to the\ncurrent date."}]}]}]},{"type":"code","lang":"python","copyable":false,"value":"db.inventory.update_one(\n    {\"item\": \"paper\"},\n    {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"},\n     \"$currentDate\": {\"lastModified\": True}})"},{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"Run the loop:"}]},{"type":"code","position":{"start":{"line":16}},"lang":"python","copyable":true,"value":"loop = asyncio.get_event_loop()\nloop.run_until_complete(do_update_one())"}]},{"type":"directive","position":{"start":{"line":110}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":110}},"value":"motor"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"$set"}]},{"type":"text","position":{"start":{"line":0}},"value":" to update the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" field and the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":220}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"$currentDate"}]},{"type":"text","position":{"start":{"line":5}},"value":" to set the "},{"type":"literal","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":5}},"value":" field to the\ncurrent date."}]}]}]},{"type":"code","lang":"python","copyable":false,"value":"await db.inventory.update_one(\n    {\"item\": \"paper\"},\n    {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"},\n     \"$currentDate\": {\"lastModified\": True}})"},{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"For completeness, the following example shows how you might wrap\nthe update one operation with the asyncio event loop:"}]},{"type":"code","position":{"start":{"line":17}},"lang":"python","copyable":true,"value":"async def do_update_one():\n    document = await db.inventory.update_one(\n                   {\"item\": \"paper\"},\n                   {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"},\n                    \"$currentDate\": {\"lastModified\": True}})\n    pprint.pprint(document.raw_result)"}]},{"type":"directive","position":{"start":{"line":138}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":138}},"value":"java-sync"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"reference","position":{"start":{"line":0}},"refuri":"http://mongodb.github.io/mongo-java-driver/3.7/javadoc/com/mongodb/client/model/Updates.html#set-java.lang.String-TItem-","children":[{"type":"text","position":{"start":{"line":0}},"value":"set"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nto update the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" field and the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"uom"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"size"}]},{"type":"text","position":{"start":{"line":0}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":0}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":220}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":0}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"reference","position":{"start":{"line":6}},"refuri":"http://mongodb.github.io/mongo-java-driver/3.7/javadoc/com/mongodb/client/model/Updates.html#currentDate-java.lang.String-","children":[{"type":"text","position":{"start":{"line":6}},"value":"currentDate"}]},{"type":"text","position":{"start":{"line":6}},"value":"\nto set the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":6}},"value":" field to the\ncurrent date."}]}]}]},{"type":"code","lang":"java","copyable":false,"value":"collection.updateOne(eq(\"item\", \"paper\"),\n        combine(set(\"size.uom\", \"cm\"), set(\"status\", \"P\"), currentDate(\"lastModified\")));"}]},{"type":"directive","position":{"start":{"line":156}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":156}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').updateOne(\n  { item: \"paper\" },\n  { $set: { \"size.uom\": \"cm\", status: \"P\" },\n    $currentDate: { lastModified: true } })\n.then(function(result) {\n  // process result\n})            "},{"type":"list","position":{"start":{"line":6}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":6}},"children":[{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"$set"}]},{"type":"text","position":{"start":{"line":6}},"value":" to update the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"status"}]},{"type":"text","position":{"start":{"line":6}},"value":" field and the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"uom"}]},{"type":"text","position":{"start":{"line":6}},"value":"\nfield embedded in the "},{"type":"literal","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"size"}]},{"type":"text","position":{"start":{"line":6}},"value":" document. To access the fields within\nembedded documents, the operation uses "},{"type":"role","position":{"start":{"line":6}},"name":"ref","label":{"type":"text","value":"dot notation","position":{"start":{"line":226}}},"target":"document-dot-notation","children":[]},{"type":"text","position":{"start":{"line":6}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":6}},"children":[{"type":"paragraph","position":{"start":{"line":11}},"children":[{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"$currentDate"}]},{"type":"text","position":{"start":{"line":11}},"value":" to set the "},{"type":"literal","position":{"start":{"line":11}},"children":[{"type":"text","position":{"start":{"line":11}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":11}},"value":" field to the\ncurrent date."}]}]}]}]},{"type":"directive","position":{"start":{"line":212}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":212}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"item\", \"paper\");\nvar update = Builders<BsonDocument>.Update.Set(\"size.uom\", \"cm\").Set(\"status\", \"P\").CurrentDate(\"lastModified\");\nvar result = collection.UpdateOne(filter, update);"}]}]}],"position":{"start":{"line":0}}},"source":"The following operation updates the **first** document with ``item`` equal\nto ``paper``. The operation uses:\n\n.. tabs-drivers::\n\n   tabs:\n   - id: shell\n     content: |\n       - :update:`~up.$set` to update the ``status`` field and the ``uom``\n         field embedded in the ``size`` document. To access the fields within\n         embedded documents, the operation uses :ref:`dot notation\n         <document-dot-notation>`.\n\n       - :update:`~up.$currentDate` to set the ``lastModified`` field to the\n         current date.\n\n       .. code-block:: javascript\n       \n          db.inventory.updateOne(\n              { \"item\" : \"paper\" }, // specifies the document to update\n              {\n                $set: {  \"size.uom\" : \"cm\",  \"status\" : \"P\" },\n                $currentDate: { \"lastModified\": true }\n              }\n          )\n\n   - id: compass\n     content: |\n         1. Copy the following filter into the Compass query bar and click\n            :guilabel:`Find`:\n            \n            .. code-block:: javascript\n            \n               { \"item\" : \"paper\" }\n         \n         2. Click the edit icon on the first document returned:\n\n\n            .. figure:: /images/compass-example-update-52-find.png\n               :alt: Screenshot of the MongoDB Compass interface searching for documents in the inventory collection in the test database where the \"item\" field value is \"paper\". One document is displayed.\n               :width: 100%\n\n            \n         3. Expand the ``size`` field and update the ``uom`` value to ``cm``.\n            Click inside the ``status`` field and click the plus button,\n            then click :guilabel:`Add field after status`.\n            Add a ``lastModified`` field, select ``Date`` as its type\n            using the drop-down menu on the right, and input today's date:\n            \n            .. figure:: /images/compass-example-update-52-set-and-currentDate.png\n               :alt: Screenshot of the MongoDB Compass interface where the first returned document has been edited to change the size.uom field value to \"cm\" and add a lastModified date field with value 2018-04-17.\n               :width: 100%\n\n\n         4. Click :guilabel:`Update`.\n         \n            .. figure:: /images/compass-example-update-52-finalize.png\n               :alt: Screenshot of the MongoDB Compass interface where the \"Update\" button is selected to finalize the changes made to a document.\n               :width: 100%\n   - id: go\n     content: |\n        \n      - ``$set`` to update the ``status`` field and the ``uom``\n        field embedded in the ``size`` document. To access the fields within\n        embedded documents, the operation uses :ref:`dot notation\n        <document-dot-notation>`.\n\n      - ``$currentDate`` to set the ``lastModified`` field to the\n        current date.\n\n      Before updating the data, you'll need to assign the ``inventory`` collection in the ``test`` database to a variable:\n\n      .. literalinclude:: /driver-examples/assign.go\n         :language: go\n         :dedent: 1\n         :start-after: Start Collection\n         :end-before: End Collection\n      \n      Followed by the call to update:\n\n      .. literalinclude:: /driver-examples/examples.go\n         :language: go\n         :dedent: 1\n         :start-after: Start Example 52\n         :end-before: End Example 52\n\n\n\n   - id: python\n     content: |\n       - ``$set`` to update the ``status`` field and the ``uom``\n         field embedded in the ``size`` document. To access the fields within\n         embedded documents, the operation uses :ref:`dot notation\n         <document-dot-notation>`.\n\n       - ``$currentDate`` to set the ``lastModified`` field to the\n         current date.\n       \n       .. literalinclude:: /driver-examples/test_examples.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 52\n          :end-before: End Example 52\n       \n       Run the loop:\n       \n       .. code-block:: python\n       \n          loop = asyncio.get_event_loop()\n          loop.run_until_complete(do_update_one())\n\n   - id: motor\n     content: |\n       - ``$set`` to update the ``status`` field and the ``uom``\n         field embedded in the ``size`` document. To access the fields within\n         embedded documents, the operation uses :ref:`dot notation\n         <document-dot-notation>`.\n\n       - ``$currentDate`` to set the ``lastModified`` field to the\n         current date.\n\n       .. literalinclude:: /driver-examples/test_examples_motor.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 52\n          :end-before: End Example 52\n       \n       For completeness, the following example shows how you might wrap\n       the update one operation with the asyncio event loop:\n       \n       .. code-block:: python\n       \n          async def do_update_one():\n              document = await db.inventory.update_one(\n                             {\"item\": \"paper\"},\n                             {\"$set\": {\"size.uom\": \"cm\", \"status\": \"P\"},\n                              \"$currentDate\": {\"lastModified\": True}})\n              pprint.pprint(document.raw_result)\n\n   - id: java-sync\n     content: |\n       - :java-sync-api:`set <com/mongodb/client/model/Updates.html#set-java.lang.String-TItem->` \n         to update the ``status`` field and the ``uom``\n         field embedded in the ``size`` document. To access the fields within\n         embedded documents, the operation uses :ref:`dot notation\n         <document-dot-notation>`.\n\n       - :java-sync-api:`currentDate <com/mongodb/client/model/Updates.html#currentDate-java.lang.String->` \n         to set the ``lastModified`` field to the\n         current date.\n       \n       .. literalinclude:: /driver-examples/DocumentationSamples.java\n          :language: java\n          :dedent: 8\n          :start-after: Start Example 52\n          :end-before: End Example 52\n\n   - id: nodejs\n     content: |\n       .. literalinclude:: /driver-examples/examples_tests.js\n          :language: javascript\n          :dedent: 8\n          :start-after: Start Example 52\n          :end-before: End Example 52\n\n       - ``$set`` to update the ``status`` field and the ``uom``\n         field embedded in the ``size`` document. To access the fields within\n         embedded documents, the operation uses :ref:`dot notation\n         <document-dot-notation>`.\n\n       - ``$currentDate`` to set the ``lastModified`` field to the\n         current date.\n\n   # - id: java-async\n   #   content: |\n   #     .. literalinclude:: /driver-examples/AsyncDocumentationSamples.java\n   #        :language: java\n   #        :dedent: 8\n   #        :start-after: Start Example 52\n   #        :end-before: End Example 52\n   # \n   # - id: php\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n   #        :language: php\n   #        :dedent: 8\n   #        :start-after: Start Example 52\n   #        :end-before: End Example 52\n   #\n   # - id: perl\n   #   content: |\n   #     .. literalinclude:: /driver-examples/driver-examples.t\n   #        :language: perl\n   #        :dedent: 4\n   #        :start-after: Start Example 52\n   #        :end-before: End Example 52\n   #\n   # - id: ruby\n   #   content: |\n   #     .. literalinclude:: /driver-examples/shell_examples_spec.rb\n   #        :language: ruby\n   #        :dedent: 8\n   #        :start-after: Start Example 52\n   #        :end-before: End Example 52\n   #\n   # - id: scala\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n   #        :language: scala\n   #        :dedent: 4\n   #        :start-after: Start Example 52\n   #        :end-before: End Example 52\n\n   - id: csharp\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationExamples.cs\n          :language: c#\n          :dedent: 12\n          :start-after: Start Example 52\n          :end-before: End Example 52\n","static_assets":["21a4bb878f9ea850390c797e00dc1ef3bed4342afda6723bd628d9155d384de2","d076125d2bb3dd47866b834204ccf8e7c478ffd56e7197f55d7c27ff83ea0aaa","c2e1cff80deecc54bcf419e80daf67d724f4e6adcde226c2d924bd1afea68640"]},"db.inventory.updateMany(\n    { \"qty\" : { $lt: 50 } }, // specifies the documents to update\n    {\n       $set: { \"size.uom\" : \"cm\", \"status\": \"P\" },\n       $currentDate : { \"lastModified\": true }\n    }\n)":{},"images/compass-example-update-53-edit.png#7ad829427ceab643a10689289c47288cf0a813209f67c85e3151399239eef720":{},"images/compass-example-update-53-set-and-currentDate.png#07857503b5823ef46d2d8bf94504c9819e70b4259e1f4f0c5a2fb10ac3a8715b":{},"db.collection('inventory').updateMany(\n  { qty: { $lt: 50 } },\n  { $set: { \"size.uom\": \"in\", status: \"P\" },\n    $currentDate: { lastModified: true } })\n.then(function(result) {\n  // process result\n})            ":{},"includes/driver-example-update-53":{"_id":"guides/andrew/master/includes/driver-example-update-53","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"db.inventory.updateMany(\n    { \"qty\" : { $lt: 50 } }, // specifies the documents to update\n    {\n       $set: { \"size.uom\" : \"cm\", \"status\": \"P\" },\n       $currentDate : { \"lastModified\": true }\n    }\n)"}]},{"type":"directive","position":{"start":{"line":14}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":14}},"value":"compass"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":158}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ \"qty\" : { $lt: 50 } }"}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"For each document, click the edit icon:"}]},{"type":"directive","position":{"start":{"line":9}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":9}},"value":"/images/compass-example-update-53-edit.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI with a filter for all documents where the qty field values is less than 50. The edit button is moused over for the first returned document.","width":"100%","checksum":"7ad829427ceab643a10689289c47288cf0a813209f67c85e3151399239eef720"},"children":[]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":13}},"children":[{"type":"text","position":{"start":{"line":13}},"value":"Make the following changes:"}]},{"type":"list","position":{"start":{"line":15}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"Expand the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"size"}]},{"type":"text","position":{"start":{"line":15}},"value":" field and update the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"uom"}]},{"type":"text","position":{"start":{"line":15}},"value":" value to "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"cm"}]},{"type":"text","position":{"start":{"line":15}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"Change the value of the "},{"type":"literal","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"status"}]},{"type":"text","position":{"start":{"line":16}},"value":" field to "},{"type":"literal","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"P"}]},{"type":"text","position":{"start":{"line":16}},"value":"."}]}]},{"type":"listItem","position":{"start":{"line":15}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"Click inside the "},{"type":"literal","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"status"}]},{"type":"text","position":{"start":{"line":17}},"value":" field and click the plus button,\nthen click "},{"type":"role","position":{"start":{"line":17}},"name":"guilabel","label":{"type":"text","value":"Add field after status","position":{"start":{"line":175}}},"children":[]},{"type":"text","position":{"start":{"line":17}},"value":".\nAdd a "},{"type":"literal","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"lastModified"}]},{"type":"text","position":{"start":{"line":17}},"value":" field, select "},{"type":"literal","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"Date"}]},{"type":"text","position":{"start":{"line":17}},"value":" as its type\nusing the drop-down menu on the right, and input today's date:"}]}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":22}},"value":"/images/compass-example-update-53-set-and-currentDate.png"}],"options":{"alt":"Screenshot of the MongoDB Compass interface where the first returned document has been edited to change the status field value to P and add a lastModified date field with value 2018-04-17.","width":"100%","checksum":"07857503b5823ef46d2d8bf94504c9819e70b4259e1f4f0c5a2fb10ac3a8715b"},"children":[]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"Click "},{"type":"role","position":{"start":{"line":26}},"name":"guilabel","label":{"type":"text","value":"Update","position":{"start":{"line":184}}},"children":[]},{"type":"text","position":{"start":{"line":26}},"value":"."}]}]}]}]},{"type":"directive","position":{"start":{"line":44}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":44}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"db.inventory.update_many(\n    {\"qty\": {\"$lt\": 50}},\n    {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"},\n     \"$currentDate\": {\"lastModified\": True}})"}]},{"type":"directive","position":{"start":{"line":52}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":52}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"await db.inventory.update_many(\n    {\"qty\": {\"$lt\": 50}},\n    {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"},\n     \"$currentDate\": {\"lastModified\": True}})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, the following example shows how you might wrap\nthe update many operation with the asyncio event loop:"}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_update_many():\n    document = await db.inventory.update_many(\n                   {\"qty\": {\"$lt\": 50}},\n                   {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"},\n                    \"$currentDate\": {\"lastModified\": True}})\n    pprint.pprint(document.raw_result)"},{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"Run the asyncio loop to execute both the "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"update_one"}]},{"type":"text","position":{"start":{"line":18}},"value":" and "},{"type":"literal","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"update_many"}]},{"type":"text","position":{"start":{"line":18}},"value":"\noperations:"}]},{"type":"code","position":{"start":{"line":21}},"lang":"python","copyable":true,"value":"loop = asyncio.get_event_loop()\n\ntasks = [\n    asyncio.ensure_future(do_update_one()),\n    asyncio.ensure_future(do_update_many()),\n]\n\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()"}]},{"type":"directive","position":{"start":{"line":87}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":87}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"collection.updateMany(lt(\"qty\", 50),\n        combine(set(\"size.uom\", \"in\"), set(\"status\", \"P\"), currentDate(\"lastModified\")));"}]},{"type":"directive","position":{"start":{"line":95}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":95}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\nresult, err := coll.UpdateMany(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"qty\", bson.D{\n\t\t\t{\"$lt\", 50},\n\t\t}},\n\t},\n\tbson.D{\n\t\t{\"$set\", bson.D{\n\t\t\t{\"size.uom\", \"cm\"},\n\t\t\t{\"status\", \"P\"},\n\t\t}},\n\t\t{\"$currentDate\", bson.D{\n\t\t\t{\"lastModified\", true},\n\t\t}},\n\t},\n)\n"}]},{"type":"directive","position":{"start":{"line":103}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":103}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').updateMany(\n  { qty: { $lt: 50 } },\n  { $set: { \"size.uom\": \"in\", status: \"P\" },\n    $currentDate: { lastModified: true } })\n.then(function(result) {\n  // process result\n})            "}]},{"type":"directive","position":{"start":{"line":150}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":150}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Lt(\"qty\", 50);\nvar update = Builders<BsonDocument>.Update.Set(\"size.uom\", \"in\").Set(\"status\", \"P\").CurrentDate(\"lastModified\");\nvar result = collection.UpdateMany(filter, update);"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n   - id: shell\n     content: |\n       .. code-block:: javascript\n       \n          db.inventory.updateMany(\n              { \"qty\" : { $lt: 50 } }, // specifies the documents to update\n              {\n                 $set: { \"size.uom\" : \"cm\", \"status\": \"P\" },\n                 $currentDate : { \"lastModified\": true }\n              }\n          )\n\n   - id: compass\n     content: |\n       1. Copy the following filter into the Compass query bar and click\n          :guilabel:`Find`:\n          \n          .. code-block:: javascript\n          \n             { \"qty\" : { $lt: 50 } }\n       \n       2. For each document, click the edit icon:\n\n          .. figure:: /images/compass-example-update-53-edit.png\n             :alt: Screenshot of the MongoDB Compass UI with a filter for all documents where the qty field values is less than 50. The edit button is moused over for the first returned document.\n             :width: 100%\n\n       3. Make the following changes:\n       \n          - Expand the ``size`` field and update the ``uom`` value to ``cm``.\n          - Change the value of the ``status`` field to ``P``.\n          - Click inside the ``status`` field and click the plus button,\n            then click :guilabel:`Add field after status`.\n            Add a ``lastModified`` field, select ``Date`` as its type\n            using the drop-down menu on the right, and input today's date:\n          \n          .. figure:: /images/compass-example-update-53-set-and-currentDate.png\n             :alt: Screenshot of the MongoDB Compass interface where the first returned document has been edited to change the status field value to P and add a lastModified date field with value 2018-04-17.\n             :width: 100%\n\n       4. Click :guilabel:`Update`.\n\n   - id: python\n     content: |\n       .. literalinclude:: /driver-examples/test_examples.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 53\n          :end-before: End Example 53\n\n   - id: motor\n     content: |\n       .. literalinclude:: /driver-examples/test_examples_motor.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 53\n          :end-before: End Example 53\n\n       For completeness, the following example shows how you might wrap\n       the update many operation with the asyncio event loop:\n\n       .. code-block:: python\n       \n          async def do_update_many():\n              document = await db.inventory.update_many(\n                             {\"qty\": {\"$lt\": 50}},\n                             {\"$set\": {\"size.uom\": \"in\", \"status\": \"P\"},\n                              \"$currentDate\": {\"lastModified\": True}})\n              pprint.pprint(document.raw_result)\n\n       Run the asyncio loop to execute both the ``update_one`` and ``update_many``\n       operations:\n       \n       .. code-block:: python\n       \n          loop = asyncio.get_event_loop()\n\n          tasks = [ \n              asyncio.ensure_future(do_update_one()),\n              asyncio.ensure_future(do_update_many()), \n          ]\n\n          loop.run_until_complete(asyncio.wait(tasks))\n          loop.close()\n\n   - id: java-sync\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationSamples.java\n          :language: java\n          :dedent: 8\n          :start-after: Start Example 53\n          :end-before: End Example 53\n\n   - id: go\n     content: |\n       .. literalinclude:: /driver-examples/examples.go\n          :language: go\n          :dedent: 1\n          :start-after: Start Example 53\n          :end-before: End Example 53\n\n   - id: nodejs\n     content: |\n       .. literalinclude:: /driver-examples/examples_tests.js\n          :language: javascript\n          :dedent: 8\n          :start-after: Start Example 53\n          :end-before: End Example 53\n   #  - id: java-async\n   #    content: |\n   #      .. literalinclude:: /driver-examples/AsyncDocumentationSamples.java\n   #         :language: java\n   #         :dedent: 8\n   #         :start-after: Start Example 53\n   #         :end-before: End Example 53\n   #  \n   # - id: php\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n   #        :language: php\n   #        :dedent: 8\n   #        :start-after: Start Example 53\n   #        :end-before: End Example 53\n   #\n   # - id: perl\n   #   content: |\n   #     .. literalinclude:: /driver-examples/driver-examples.t\n   #        :language: perl\n   #        :dedent: 4\n   #        :start-after: Start Example 53\n   #        :end-before: End Example 53\n   #\n   # - id: ruby\n   #   content: |\n   #     .. literalinclude:: /driver-examples/shell_examples_spec.rb\n   #        :language: ruby\n   #        :dedent: 8\n   #        :start-after: Start Example 53\n   #        :end-before: End Example 53\n   #\n   # - id: scala\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n   #        :language: scala\n   #        :dedent: 4\n   #        :start-after: Start Example 53\n   #        :end-before: End Example 53\n\n   - id: csharp\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationExamples.cs\n          :language: c#\n          :dedent: 12\n          :start-after: Start Example 53\n          :end-before: End Example 53","static_assets":["7ad829427ceab643a10689289c47288cf0a813209f67c85e3151399239eef720","07857503b5823ef46d2d8bf94504c9819e70b4259e1f4f0c5a2fb10ac3a8715b"]},"includes/driver-example-update-result":{"_id":"guides/andrew/master/includes/driver-example-update-result","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"WriteResult"}]},{"type":"text","position":{"start":{"line":0}},"value":" document that contains the status\nof the operation:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })"}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns an instance of\n"},{"type":"role","position":{"start":{"line":0}},"name":"py:class","target":"pymongo.results.UpdateResult","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" that contains the\nstatus of the operation."}]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operations asynchronously return instances of\n"},{"type":"role","position":{"start":{"line":0}},"name":"py:class","target":"pymongo.results.UpdateResult","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" that contains the\nstatus of the operation."}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":23}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns an instance of\n"},{"type":"reference","position":{"start":{"line":0}},"refname":"com.mongodb.client.result.updateresult","children":[{"type":"text","position":{"start":{"line":0}},"value":"com.mongodb.client.result.UpdateResult"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nwith the status of the\noperation."}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":30}},"value":"nodejs"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns a promise that provides a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"result"}]},{"type":"text","position":{"start":{"line":0}},"value":"\ncontaining the status of the operation."}]}]},{"type":"directive","position":{"start":{"line":66}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":66}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Upon successful execution, the operation returns an instance of\n"},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://mongodb.github.io/mongo-csharp-driver/2.5/apidocs/html/T_MongoDB_Driver_UpdateResult.htm","children":[{"type":"text","position":{"start":{"line":0}},"value":"UpdateResult"}]},{"type":"text","position":{"start":{"line":0}},"value":" that\ncontains the status of the operation."}]}]}]},{"type":"target","position":{"start":{"line":73}},"ids":["com-mongodb-client-result-updateresult"],"refuri":"https://mongodb.github.io/mongo-java-driver/3.4/javadoc/com/mongodb/client/result/UpdateResult","children":[]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n   - id: shell\n     content: |\n       The operation returns a ``WriteResult`` document that contains the status\n       of the operation:\n\n       .. code-block:: sh\n\n          WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n\n   - id: python\n     content: |\n       The operation returns an instance of\n       :py:class:`pymongo.results.UpdateResult` that contains the\n       status of the operation.\n \n   - id: motor\n     content: |\n       The operations asynchronously return instances of\n       :py:class:`pymongo.results.UpdateResult` that contains the\n       status of the operation.\n \n   - id: java-sync\n     content: |\n       The operation returns an instance of \n       com.mongodb.client.result.UpdateResult_\n       with the status of the\n       operation.\n\n   - id: nodejs\n     content: |\n       The operation returns a promise that provides a ``result``\n       containing the status of the operation.\n\n   # - id: java-async\n   #   content: |\n   #     The operation returns an instance of \n   #     com.mongodb.client.result.UpdateResult_\n   #     with the status of the\n   #     operation.\n   # \n   # - id: php\n   #   content: |\n   #     The operation returns an instance of\n   #     :phpclass:`MongoDB\\\\UpdateResult <phpclass.MongoDB\\\\UpdateResult>`\n   #     that contains the status of the operation.\n   #\n   # - id: perl\n   #   content: |\n   #     Upon successful execution, the operation returns an instance of\n   #     :perl-api:`MongoDB::UpdateResult<UpdateResult>` that contains the\n   #     status of the operation.\n   #\n   # - id: ruby\n   #   content: |\n   #     Upon successful execution, the operation returns an instance of\n   #     :ruby-api:`Mongo::Operation::Result<Operation/Result.html>`\n   #     that contains the status of the operation.\n   #\n   # - id: scala\n   #   content: |\n   #     Upon successful execution, the operation returns an\n   #     `Observable <http://mongodb.github.io/mongo-scala-driver/2.1/reference/observables/>`_\n   #     contains the status of the operation.\n\n   - id: csharp\n     content: |\n       Upon successful execution, the operation returns an instance of\n       :csharp-api:`UpdateResult <T_MongoDB_Driver_UpdateResult>` that\n       contains the status of the operation.\n\n.. _com.mongodb.client.result.UpdateResult: https://mongodb.github.io/mongo-java-driver/3.4/javadoc/com/mongodb/client/result/UpdateResult\n","static_assets":[]},"includes/steps/update_server":{"_id":"guides/andrew/master/includes/steps/update_server","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance."}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}],"id":"switch-to-the-test-database"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In this guide, you will update documents in a collection in the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Update a single document in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection."}],"id":"update-a-single-document-in-the-inventory-collection"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"To change a field value, MongoDB provides update operators\nto modify values. Some update operators, including\nwill create the specified field if the field does not exist\nin the document."}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/driver-example-update-52.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Update multiple documents."}],"id":"update-multiple-documents"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following operation updates all of the documents with\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"quantity"}]},{"type":"text","position":{"start":{"line":0}},"value":" value less than 50."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/driver-example-update-53.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/driver-example-update-result.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]},{"type":"directive","position":{"start":{"line":7}},"name":"include","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":7}},"children":[]}]}]}]}]},"source":"stepnum: 1\ntitle: Connect to your MongoDB instance.\nref: connect\nlevel: 4\ncontent: |\n  .. include:: /includes/drivers_connect.rst\n---\ntitle: Switch to the ``test`` database.\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n  In this guide, you will update documents in a collection in the\n  ``test`` database.\n  \n  .. include:: /includes/bind_db.rst\n---\nstepnum: 3\ntitle: Update a single document in the ``inventory`` collection.\nref: update_one_with_set\nlevel: 4\n# Example: 52\ncontent: |\n  To change a field value, MongoDB provides update operators\n  to modify values. Some update operators, including\n  will create the specified field if the field does not exist\n  in the document.\n\n  .. include:: /includes/driver-example-update-52.rst\n\n---\nstepnum: 4\ntitle: Update multiple documents.\nref: update_many\nlevel: 4\n# Example: 53\ncontent: |\n  The following operation updates all of the documents with\n  ``quantity`` value less than 50.\n\n  .. include:: /includes/driver-example-update-53.rst\n\n  .. include:: /includes/driver-example-update-result.rst\n\n  .. include:: /includes/drivers_close_connection.rst\n\n...\n","static_assets":[]},"server/update":{"_id":"guides/andrew/master/server/update","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"update-data-in-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Update Data in MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":22}},"name":"level","argument":[{"type":"text","position":{"start":{"line":22}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":24}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":24}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":26}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":28}},"children":[{"type":"text","position":{"start":{"line":28}},"value":"In this guide, you will update documents in a MongoDB database."}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"time","argument":[{"type":"text","position":{"start":{"line":30}},"value":"10"}],"children":[]},{"type":"directive","position":{"start":{"line":32}},"name":"prerequisites","argument":[],"children":[{"type":"list","position":{"start":{"line":34}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":34}},"children":[{"type":"directive","position":{"start":{"line":34}},"name":"include","argument":[{"type":"text","position":{"start":{"line":34}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":34}},"children":[]}]}]},{"type":"listItem","position":{"start":{"line":34}},"children":[{"type":"paragraph","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"Complete the "},{"type":"role","position":{"start":{"line":36}},"name":"doc","target":"/server/import","children":[]},{"type":"text","position":{"start":{"line":36}},"value":" guide so that there\nis data in your database to update."}]}]}]}]},{"type":"directive","position":{"start":{"line":40}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":42}},"name":"include","argument":[{"type":"text","position":{"start":{"line":42}},"value":"/includes/steps/update_server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":42}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":44}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":46}},"children":[{"type":"text","position":{"start":{"line":46}},"value":"If you have successfully completed this guide, you have updated\ndocuments in MongoDB. In the next guide, you'll see how to delete a\ndocument from a MongoDB collection."}]}]},{"type":"directive","position":{"start":{"line":50}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":52}},"children":[{"type":"text","position":{"start":{"line":52}},"value":"In this guide, you will delete documents from a MongoDB database."}]},{"type":"list","position":{"start":{"line":54}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":54}},"children":[{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"role","position":{"start":{"line":54}},"name":"doc","label":{"type":"text","value":"Delete Data from MongoDB","position":{"start":{"line":49}}},"target":"/server/delete","children":[]}]}]}]}]},{"type":"directive","position":{"start":{"line":56}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":58}},"children":[{"type":"text","position":{"start":{"line":58}},"value":"For other CRUD guides:"}]},{"type":"list","position":{"start":{"line":60}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":60}},"children":[{"type":"role","position":{"start":{"line":60}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":62}},"children":[{"type":"role","position":{"start":{"line":62}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":64}},"children":[{"type":"role","position":{"start":{"line":64}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":60}},"children":[{"type":"paragraph","position":{"start":{"line":66}},"children":[{"type":"role","position":{"start":{"line":66}},"name":"doc","target":"/server/delete","children":[]}]}]}]},{"type":"paragraph","position":{"start":{"line":68}},"children":[{"type":"text","position":{"start":{"line":68}},"value":"For method reference:"}]},{"type":"list","position":{"start":{"line":70}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":70}},"children":[{"type":"paragraph","position":{"start":{"line":70}},"children":[{"type":"role","position":{"start":{"line":70}},"name":"method","target":"db.collection.update","children":[]}]}]},{"type":"listItem","position":{"start":{"line":70}},"children":[{"type":"paragraph","position":{"start":{"line":72}},"children":[{"type":"role","position":{"start":{"line":72}},"name":"method","target":"db.collection.updateOne","children":[]}]}]},{"type":"listItem","position":{"start":{"line":70}},"children":[{"type":"paragraph","position":{"start":{"line":74}},"children":[{"type":"role","position":{"start":{"line":74}},"name":"method","target":"db.collection.updateMany","children":[]}]}]},{"type":"listItem","position":{"start":{"line":70}},"children":[{"type":"paragraph","position":{"start":{"line":76}},"children":[{"type":"role","position":{"start":{"line":76}},"name":"method","target":"db.collection.findAndModify","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n\n   title: Update Data in MongoDB\n   type: Getting Started\n   level: beginner\n   author: MongoDB Documentation Team\n   product_version: 4.0\n   languages:\n     shell\n     compass\n     python\n     motor\n     nodejs\n     java-sync\n     csharp\n   result_description:\n     In this guide, you will update documents in a MongoDB database.\n   time: 10\n   prerequisites:\n     - .. include:: /includes/prereqs_read_CRUD.rst\n     \n     - Complete the :doc:`/server/import` guide so that there\n       is data in your database to update.\n   check_you_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n     .. include:: /includes/steps/update_server.rst\n   summary:\n     If you have successfully completed this guide, you have updated\n     documents in MongoDB. In the next guide, you'll see how to delete a\n     document from a MongoDB collection.\n   whats_next:\n     In this guide, you will delete documents from a MongoDB database.\n\n     * :doc:`Delete Data from MongoDB </server/delete>`\n   seealso:\n     For other CRUD guides:\n\n     - :doc:`/server/insert`\n\n     - :doc:`/server/read_operators`\n\n     - :doc:`/server/read_queries`\n\n     - :doc:`/server/delete`\n\n     For method reference:\n\n     - :method:`db.collection.update`\n\n     - :method:`db.collection.updateOne`\n\n     - :method:`db.collection.updateMany`\n\n     - :method:`db.collection.findAndModify`\n","static_assets":[]},"db.inventory.deleteOne(\n    { \"status\": \"D\" } // specifies the document to delete\n)":{},"images/compass-example-delete-58-delete-icon.png#2ad7876019fb8f49e5b69dde2fac6f68352be6070302bc5affce4c81f6d6fca0":{},"images/compass-example-delete-58-finalize.png#f7e1dedb2ee84b0a9bbb8b82ee665274a23a2ba9b11da7b8e72edd7332d501ca":{},"db.collection('inventory').deleteOne({ \n  status: \"D\" \n})\n.then(function(result) {\n  // process result\n})":{},"includes/driver-example-delete-58":{"_id":"guides/andrew/master/includes/driver-example-delete-58","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"db.inventory.deleteOne(\n    { \"status\": \"D\" } // specifies the document to delete\n)"}]},{"type":"directive","position":{"start":{"line":10}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":10}},"value":"compass"}],"children":[{"type":"list","position":{"start":{"line":0}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":0}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":144}}},"children":[]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"code","position":{"start":{"line":3}},"lang":"javascript","copyable":true,"value":"{ \"status\" : \"D\" }"}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":7}},"children":[{"type":"text","position":{"start":{"line":7}},"value":"Click the delete icon on the first document:"}]},{"type":"directive","position":{"start":{"line":9}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":9}},"value":"/images/compass-example-delete-58-delete-icon.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The Delete icon is moused over for the first returned document.","width":"100%","checksum":"2ad7876019fb8f49e5b69dde2fac6f68352be6070302bc5affce4c81f6d6fca0"},"children":[]}]},{"type":"listItem","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"The document will be \"Flagged for Deletion\", click\n"},{"type":"role","position":{"start":{"line":14}},"name":"guilabel","label":{"type":"text","value":"Delete","position":{"start":{"line":158}}},"children":[]},{"type":"text","position":{"start":{"line":14}},"value":" to confirm."}]},{"type":"directive","position":{"start":{"line":17}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":17}},"value":"/images/compass-example-delete-58-finalize.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The first document is flagged for deletion with a red bar and a button to cancel or confirm the deletion.","width":"100%","checksum":"f7e1dedb2ee84b0a9bbb8b82ee665274a23a2ba9b11da7b8e72edd7332d501ca"},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":33}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":33}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"db.inventory.delete_one({\"status\": \"D\"})"}]},{"type":"directive","position":{"start":{"line":41}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":41}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"await db.inventory.delete_one({\"status\": \"D\"})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, the following example shows how you might wrap\nthe delete one operation with the asyncio event loop:"}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_delete_one():\n    document = await db.inventory.delete_one({\"status\": \"D\"})\n    pprint.pprint(document.raw_result)"}]},{"type":"directive","position":{"start":{"line":58}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":58}},"value":"go"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Before deleting the data, you'll need to assign the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database to a variable:"}]},{"type":"code","lang":"go","copyable":false,"value":"coll := db.Collection(\"inventory\")\n"},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"Followed by:"}]},{"type":"code","lang":"go","copyable":false,"value":"\nresult, err := coll.DeleteOne(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"status\", \"D\"},\n\t},\n)\n"}]},{"type":"directive","position":{"start":{"line":79}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":79}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"collection.deleteOne(eq(\"status\", \"D\"));"}]},{"type":"directive","position":{"start":{"line":87}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":87}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').deleteOne({ \n  status: \"D\" \n})\n.then(function(result) {\n  // process result\n})"}]},{"type":"directive","position":{"start":{"line":136}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":136}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"status\", \"D\");\nvar result = collection.DeleteOne(filter);"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n   - id: shell\n     content: |\n       .. code-block:: javascript\n\n          db.inventory.deleteOne(\n              { \"status\": \"D\" } // specifies the document to delete\n          )\n\n   - id: compass\n     content: |\n       1. Copy the following filter into the Compass query bar and click\n          :guilabel:`Find`:\n          \n          .. code-block:: javascript\n          \n             { \"status\" : \"D\" }\n       \n       2. Click the delete icon on the first document:\n\n          .. figure:: /images/compass-example-delete-58-delete-icon.png\n             :alt: Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The Delete icon is moused over for the first returned document.\n             :width: 100%\n\n             \n       3. The document will be \"Flagged for Deletion\", click\n          :guilabel:`Delete` to confirm.\n          \n          .. figure:: /images/compass-example-delete-58-finalize.png\n             :alt: Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The first document is flagged for deletion with a red bar and a button to cancel or confirm the deletion.\n             :width: 100%\n\n   - id: python\n     content: |\n       .. literalinclude:: /driver-examples/test_examples.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 58\n          :end-before: End Example 58\n\n   - id: motor\n     content: |\n       .. literalinclude:: /driver-examples/test_examples_motor.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 58\n          :end-before: End Example 58\n       \n       For completeness, the following example shows how you might wrap\n       the delete one operation with the asyncio event loop:\n\n       .. code-block:: python\n\n          async def do_delete_one():\n              document = await db.inventory.delete_one({\"status\": \"D\"})\n              pprint.pprint(document.raw_result)\n\n   - id: go\n     content: |\n\n       \n      Before deleting the data, you'll need to assign the ``inventory`` collection in the ``test`` database to a variable:\n\n      .. literalinclude:: /driver-examples/assign.go\n         :language: go\n         :dedent: 1\n         :start-after: Start Collection\n         :end-before: End Collection\n\n      Followed by:\n\n      .. literalinclude:: /driver-examples/examples.go\n          :language: go\n          :dedent: 1\n          :start-after: Start Example 58\n          :end-before: End Example 58\n           \n\n   - id: java-sync\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationSamples.java\n          :language: java\n          :dedent: 8\n          :start-after: Start Example 58\n          :end-before: End Example 58\n\n   - id: nodejs\n     content: |\n       .. literalinclude:: /driver-examples/examples_tests.js\n          :language: javascript\n          :dedent: 8\n          :start-after: Start Example 58\n          :end-before: End Example 58\n\n\n   # - id: java-async\n   #   content: |\n   #     .. literalinclude:: /driver-examples/AsyncDocumentationSamples.java\n   #        :language: java\n   #        :dedent: 8\n   #        :start-after: Start Example 58\n   #        :end-before: End Example 58\n   # \n   # - id: php\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n   #        :language: php\n   #        :dedent: 8\n   #        :start-after: Start Example 58\n   #        :end-before: End Example 58\n   #\n   # - id: perl\n   #   content: |\n   #     .. literalinclude:: /driver-examples/driver-examples.t\n   #        :language: perl\n   #        :dedent: 4\n   #        :start-after: Start Example 58\n   #        :end-before: End Example 58\n   #\n   # - id: ruby\n   #   content: |\n   #     .. literalinclude:: /driver-examples/shell_examples_spec.rb\n   #        :language: ruby\n   #        :dedent: 8\n   #        :start-after: Start Example 58\n   #        :end-before: End Example 58\n   #\n   # - id: scala\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n   #        :language: scala\n   #        :dedent: 4\n   #        :start-after: Start Example 58\n   #        :end-before: End Example 58\n\n   - id: csharp\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationExamples.cs\n          :language: c#\n          :dedent: 12\n          :start-after: Start Example 58\n          :end-before: End Example 58\n","static_assets":["2ad7876019fb8f49e5b69dde2fac6f68352be6070302bc5affce4c81f6d6fca0","f7e1dedb2ee84b0a9bbb8b82ee665274a23a2ba9b11da7b8e72edd7332d501ca"]},"includes/driver-example-delete-result":{"_id":"guides/andrew/master/includes/driver-example-delete-result","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns a document that contains\nthe status of the operation:"}]},{"type":"code","position":{"start":{"line":3}},"lang":"sh","copyable":true,"value":"{ \"acknowledged\" : true, \"deletedCount\" : 1 }"}]},{"type":"directive","position":{"start":{"line":11}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":11}},"value":"python"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns an instance of\n"},{"type":"role","position":{"start":{"line":0}},"name":"py:class","target":"pymongo.results.DeleteResult","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" with the status of the\noperation."}]}]},{"type":"directive","position":{"start":{"line":17}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":17}},"value":"motor"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operations asynchronously return instances of\n"},{"type":"role","position":{"start":{"line":0}},"name":"py:class","target":"pymongo.results.DeleteResult","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" with the status of the\noperation."}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":23}},"value":"java-sync"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns an instance of\n"},{"type":"reference","position":{"start":{"line":0}},"refname":"com.mongodb.client.result.deleteresult","children":[{"type":"text","position":{"start":{"line":0}},"value":"com.mongodb.client.result.DeleteResult"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nwith the status of the\noperation."}]}]},{"type":"directive","position":{"start":{"line":30}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":30}},"value":"nodejs"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns a\npromise that provides a "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"result"}]},{"type":"text","position":{"start":{"line":0}},"value":". The "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"result.deletedCount"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nproperty contains the number of documents that matched the\nfilter."}]}]},{"type":"directive","position":{"start":{"line":73}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":73}},"value":"csharp"}],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The operation returns an instance of\n"},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://mongodb.github.io/mongo-csharp-driver/2.5/apidocs/html/T_MongoDB_Driver_DeleteResult.htm","children":[{"type":"text","position":{"start":{"line":0}},"value":"DeleteResult"}]},{"type":"text","position":{"start":{"line":0}},"value":" whose\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"DeletedCount"}]},{"type":"text","position":{"start":{"line":0}},"value":" property contains the number of documents\nthat matched the filter."}]}]}]},{"type":"target","position":{"start":{"line":82}},"ids":["com-mongodb-client-result-deleteresult"],"refuri":"https://mongodb.github.io/mongo-java-driver/3.4/javadoc/com/mongodb/client/result/DeleteResult","children":[]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n     - id: shell\n       content: |\n         The operation returns a document that contains\n         the status of the operation:\n         \n         .. code-block:: sh\n         \n            { \"acknowledged\" : true, \"deletedCount\" : 1 }\n\n     - id: python\n       content: |\n         The operation returns an instance of\n         :py:class:`pymongo.results.DeleteResult` with the status of the\n         operation.\n\n     - id: motor\n       content: |\n         The operations asynchronously return instances of\n         :py:class:`pymongo.results.DeleteResult` with the status of the\n         operation.\n\n     - id: java-sync\n       content: |\n         The operation returns an instance of\n         com.mongodb.client.result.DeleteResult_\n         with the status of the\n         operation.\n\n     - id: nodejs\n       content: |\n         The operation returns a\n         promise that provides a ``result``. The ``result.deletedCount``\n         property contains the number of documents that matched the\n         filter.\n\n     # - id: java-async\n     #   content: |\n     #     The operation returns a `Publisher <http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html>`_\n     #     object of type com.mongodb.client.result.DeleteResult_ if\n     #     successful. Returns an instance of ``com.mongodb.MongoException`` if unsuccessful.\n     #     \n     # - id: php\n     #   content: |\n     #     The\n     #     operation returns an instance of\n     #     :phpclass:`MongoDB\\\\DeleteResult <phpclass.MongoDB\\\\DeleteResult>`\n     #     whose :phpmethod:`getDeletedCount()<phpmethod.MongoDB\\\\DeleteResult::getDeletedCount>`\n     #     method returns the number of documents that matched the filter.\n     #\n     # - id: perl\n     #   content: |\n     #     The operation\n     #     returns an instance of\n     #     :perl-api:`MongoDB::DeleteResult<DeleteResult>` whose\n     #     ``deleted_count`` attribute contains the number of documents\n     #     that matched the filter.\n     #\n     # - id: ruby\n     #   content: |\n     #     The operation returns an instance of\n     #     :ruby-api:`Mongo::Operation::Result<Operation/Result.html>`, whose\n     #     ``deleted_count`` attribute contains the number of documents\n     #     that matched the filter.\n     #\n     # - id: scala\n     #   content: |\n     #     The operation returns an\n     #     `Observable <http://mongodb.github.io/mongo-scala-driver/2.1/reference/observables/>`_\n     #     with a single element with a ``DeleteResult`` type parameter or with\n     #     an ``com.mongodb.MongoException``.\n\n     - id: csharp\n       content: |\n         The operation returns an instance of\n         :csharp-api:`DeleteResult <T_MongoDB_Driver_DeleteResult>` whose\n         ``DeletedCount`` property contains the number of documents\n         that matched the filter.\n\n\n.. _com.mongodb.client.result.DeleteResult: https://mongodb.github.io/mongo-java-driver/3.4/javadoc/com/mongodb/client/result/DeleteResult\n","static_assets":[]},"db.inventory.deleteMany(\n    { \"status\" : \"A\" } // specifies the documents to delete\n)":{},"images/compass-example-delete-57-delete-icon.png#401af2b1aede8688ff3e3c5b08a62670371e828d9e31f36069117842897dec1a":{},"images/compass-example-delete-57-finalize.png#0761fdb36771090205f40648c18e799345a504469354b2612d2a03cf16d3b629":{},"db.collection('inventory').deleteMany({ \n  status: \"A\" \n})\n.then(function(result) {\n  // process result\n})":{},"includes/driver-example-delete-57":{"_id":"guides/andrew/master/includes/driver-example-delete-57","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"directive","position":{"start":{"line":0}},"name":"tabs","argument":[],"options":{"tabset":"drivers"},"children":[{"type":"directive","position":{"start":{"line":2}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":2}},"value":"shell"}],"children":[{"type":"code","position":{"start":{"line":0}},"lang":"javascript","copyable":true,"value":"db.inventory.deleteMany(\n    { \"status\" : \"A\" } // specifies the documents to delete\n)"}]},{"type":"directive","position":{"start":{"line":10}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":10}},"value":"compass"}],"children":[{"type":"directive","position":{"start":{"line":0}},"name":"note","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Deleting multiple documents in Compass is a manual\nprocess. If you need to delete many documents, consider using\nthe "},{"type":"role","position":{"start":{"line":0}},"name":"binary","target":"~bin.mongo","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" shell or a driver."}]}]},{"type":"list","position":{"start":{"line":5}},"ordered":true,"children":[{"type":"listItem","position":{"start":{"line":5}},"children":[{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"Copy the following filter into the Compass query bar and click\n"},{"type":"role","position":{"start":{"line":5}},"name":"guilabel","label":{"type":"text","value":"Find","position":{"start":{"line":157}}},"children":[]},{"type":"text","position":{"start":{"line":5}},"value":":"}]},{"type":"code","position":{"start":{"line":8}},"lang":"javascript","copyable":true,"value":"{ \"status\" : \"A\" }"}]},{"type":"listItem","position":{"start":{"line":5}},"children":[{"type":"paragraph","position":{"start":{"line":12}},"children":[{"type":"text","position":{"start":{"line":12}},"value":"For each document, click the delete icon:"}]},{"type":"directive","position":{"start":{"line":14}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":14}},"value":"/images/compass-example-delete-57-delete-icon.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"A\". The Delete icon is moused over for the first returned document.","width":"100%","checksum":"401af2b1aede8688ff3e3c5b08a62670371e828d9e31f36069117842897dec1a"},"children":[]}]},{"type":"listItem","position":{"start":{"line":5}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"The document will be \"Flagged for Deletion\", click\n"},{"type":"role","position":{"start":{"line":18}},"name":"guilabel","label":{"type":"text","value":"Delete","position":{"start":{"line":170}}},"children":[]},{"type":"text","position":{"start":{"line":18}},"value":" to confirm."}]},{"type":"directive","position":{"start":{"line":21}},"name":"figure","argument":[{"type":"text","position":{"start":{"line":21}},"value":"/images/compass-example-delete-57-finalize.png"}],"options":{"alt":"Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The first document is flagged for deletion with a red bar and a button to cancel or confirm the deletion.","width":"100%","checksum":"0761fdb36771090205f40648c18e799345a504469354b2612d2a03cf16d3b629"},"children":[]}]}]}]},{"type":"directive","position":{"start":{"line":38}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":38}},"value":"python"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"db.inventory.delete_many({\"status\": \"A\"})"}]},{"type":"directive","position":{"start":{"line":46}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":46}},"value":"motor"}],"children":[{"type":"code","lang":"python","copyable":false,"value":"await db.inventory.delete_many({\"status\": \"A\"})"},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"For completeness, the following example shows how you might wrap\nthe delete many operation with the asyncio event loop:"}]},{"type":"code","position":{"start":{"line":9}},"lang":"python","copyable":true,"value":"async def do_delete_many():\n    document = await db.inventory.delete_many({\"status\": \"A\"})\n    pprint.pprint(document.raw_result)"},{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"Run the loop to execute both the "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"delete_one"}]},{"type":"text","position":{"start":{"line":15}},"value":" and "},{"type":"literal","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"delete_many"}]},{"type":"text","position":{"start":{"line":15}},"value":"\noperations:"}]},{"type":"code","position":{"start":{"line":18}},"lang":"python","copyable":true,"value":"loop = asyncio.get_event_loop()\n\ntasks = [\n    asyncio.ensure_future(do_delete_one()),\n    asyncio.ensure_future(do_delete_many()),\n]\n\nloop.run_until_complete(asyncio.wait(tasks))\nloop.close()"}]},{"type":"directive","position":{"start":{"line":78}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":78}},"value":"java-sync"}],"children":[{"type":"code","lang":"java","copyable":false,"value":"collection.deleteMany(eq(\"status\", \"A\"));"}]},{"type":"directive","position":{"start":{"line":86}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":86}},"value":"go"}],"children":[{"type":"code","lang":"go","copyable":false,"value":"\nresult, err := coll.DeleteMany(\n\tcontext.Background(),\n\tbson.D{\n\t\t{\"status\", \"A\"},\n\t},\n)\n"}]},{"type":"directive","position":{"start":{"line":95}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":95}},"value":"nodejs"}],"children":[{"type":"code","lang":"javascript","copyable":false,"value":"db.collection('inventory').deleteMany({ \n  status: \"A\" \n})\n.then(function(result) {\n  // process result\n})"}]},{"type":"directive","position":{"start":{"line":144}},"name":"tab","argument":[{"type":"text","position":{"start":{"line":144}},"value":"csharp"}],"children":[{"type":"code","lang":"c#","copyable":false,"value":"var filter = Builders<BsonDocument>.Filter.Eq(\"status\", \"A\");\nvar result = collection.DeleteMany(filter);"}]}]}],"position":{"start":{"line":0}}},"source":".. tabs-drivers::\n\n   tabs:\n   - id: shell\n     content: |\n       .. code-block:: javascript\n       \n          db.inventory.deleteMany(\n              { \"status\" : \"A\" } // specifies the documents to delete\n          )\n\n   - id: compass\n     content: |\n\n       .. note:: \n          Deleting multiple documents in Compass is a manual\n          process. If you need to delete many documents, consider using\n          the :binary:`~bin.mongo` shell or a driver.\n\n       1. Copy the following filter into the Compass query bar and click\n          :guilabel:`Find`:\n          \n          .. code-block:: javascript\n          \n             { \"status\" : \"A\" }\n       \n       2. For each document, click the delete icon:\n\n          .. figure:: /images/compass-example-delete-57-delete-icon.png\n             :alt: Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"A\". The Delete icon is moused over for the first returned document.\n             :width: 100%\n             \n       3. The document will be \"Flagged for Deletion\", click\n          :guilabel:`Delete` to confirm.\n          \n          .. figure:: /images/compass-example-delete-57-finalize.png\n             :alt: Screenshot of the MongoDB Compass UI with a filter for all documents where the \"status\" field value is \"D\". The first document is flagged for deletion with a red bar and a button to cancel or confirm the deletion.\n             :width: 100%\n\n   - id: python\n     content: |\n       .. literalinclude:: /driver-examples/test_examples.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 57\n          :end-before: End Example 57\n\n   - id: motor\n     content: |\n       .. literalinclude:: /driver-examples/test_examples_motor.py\n          :language: python\n          :dedent: 8\n          :start-after: Start Example 57\n          :end-before: End Example 57\n       \n       For completeness, the following example shows how you might wrap\n       the delete many operation with the asyncio event loop:\n\n       .. code-block:: python\n\n          async def do_delete_many():\n              document = await db.inventory.delete_many({\"status\": \"A\"})\n              pprint.pprint(document.raw_result)\n\n       Run the loop to execute both the ``delete_one`` and ``delete_many``\n       operations:\n       \n       .. code-block:: python\n       \n          loop = asyncio.get_event_loop()\n\n          tasks = [ \n              asyncio.ensure_future(do_delete_one()),\n              asyncio.ensure_future(do_delete_many()), \n          ]\n\n          loop.run_until_complete(asyncio.wait(tasks))\n          loop.close()\n\n   - id: java-sync\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationSamples.java\n          :language: java\n          :dedent: 8\n          :start-after: Start Example 57\n          :end-before: End Example 57\n\n   - id: go\n     content: |\n       .. literalinclude:: /driver-examples/examples.go\n          :language: go\n          :dedent: 1\n          :start-after: Start Example 57\n          :end-before: End Example 57       \n\n\n   - id: nodejs\n     content: |\n       .. literalinclude:: /driver-examples/examples_tests.js\n          :language: javascript\n          :dedent: 8\n          :start-after: Start Example 57\n          :end-before: End Example 57\n\n\n   # - id: java-async\n   #   content: |\n   #     .. literalinclude:: /driver-examples/AsyncDocumentationSamples.java\n   #        :language: java\n   #        :dedent: 8\n   #        :start-after: Start Example 57\n   #        :end-before: End Example 57\n   # \n   # - id: php\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExamplesTest.php\n   #        :language: php\n   #        :dedent: 8\n   #        :start-after: Start Example 57\n   #        :end-before: End Example 57\n   #\n   # - id: perl\n   #   content: |\n   #     .. literalinclude:: /driver-examples/driver-examples.t\n   #        :language: perl\n   #        :dedent: 4\n   #        :start-after: Start Example 57\n   #        :end-before: End Example 57\n   #\n   # - id: ruby\n   #   content: |\n   #     .. literalinclude:: /driver-examples/shell_examples_spec.rb\n   #        :language: ruby\n   #        :dedent: 8\n   #        :start-after: Start Example 57\n   #        :end-before: End Example 57\n   #\n   # - id: scala\n   #   content: |\n   #     .. literalinclude:: /driver-examples/DocumentationExampleSpec.scala\n   #        :language: scala\n   #        :dedent: 4\n   #        :start-after: Start Example 57\n   #        :end-before: End Example 57\n\n   - id: csharp\n     content: |\n       .. literalinclude:: /driver-examples/DocumentationExamples.cs\n          :language: c#\n          :dedent: 12\n          :start-after: Start Example 57\n          :end-before: End Example 57\n","static_assets":["0761fdb36771090205f40648c18e799345a504469354b2612d2a03cf16d3b629","401af2b1aede8688ff3e3c5b08a62670371e828d9e31f36069117842897dec1a"]},"includes/steps/delete_server":{"_id":"guides/andrew/master/includes/steps/delete_server","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Connect to your MongoDB instance."}],"id":"connect-to-your-mongodb-instance"},{"type":"directive","position":{"start":{"line":0}},"name":"include","argument":[{"type":"text","position":{"start":{"line":0}},"value":"/includes/drivers_connect.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":0}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Switch to the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}],"id":"switch-to-the-test-database"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"In this guide, you will delete documents in a collection in the\n"},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"test"}]},{"type":"text","position":{"start":{"line":0}},"value":" database."}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/bind_db.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Delete a single document."}],"id":"delete-a-single-document"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following operation deletes the "},{"type":"strong","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"first"}]},{"type":"text","position":{"start":{"line":0}},"value":" document with "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":"\nequal to "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"D"}]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/driver-example-delete-58.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/driver-example-delete-result.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Delete multiple documents."}],"id":"delete-multiple-documents"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"The following operation deletes "},{"type":"emphasis","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"all"}]},{"type":"text","position":{"start":{"line":0}},"value":" of the documents in the\nspecified "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"inventory"}]},{"type":"text","position":{"start":{"line":0}},"value":" collection with "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"status"}]},{"type":"text","position":{"start":{"line":0}},"value":" equal to "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"A"}]},{"type":"text","position":{"start":{"line":0}},"value":":"}]},{"type":"directive","position":{"start":{"line":3}},"name":"include","argument":[{"type":"text","position":{"start":{"line":3}},"value":"/includes/driver-example-delete-57.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":3}},"children":[]}]},{"type":"directive","position":{"start":{"line":5}},"name":"include","argument":[{"type":"text","position":{"start":{"line":5}},"value":"/includes/driver-example-delete-result.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":5}},"children":[]}]},{"type":"directive","position":{"start":{"line":7}},"name":"include","argument":[{"type":"text","position":{"start":{"line":7}},"value":"/includes/drivers_close_connection.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":7}},"children":[]}]}]}]}]},"source":"stepnum: 1\n# inherit:\n#   file: steps-read_server_query.yaml\n#   ref: connect\ntitle: Connect to your MongoDB instance.\nref: connect\nlevel: 4\ncontent: |\n  .. include:: /includes/drivers_connect.rst\n---\ntitle: Switch to the ``test`` database.\nref: bind_db\nlevel: 4\nstepnum: 2\ncontent: |\n  In this guide, you will delete documents in a collection in the\n  ``test`` database.\n  \n  .. include:: /includes/bind_db.rst\n---\nstepnum: 3\ntitle: Delete a single document.\nref: delete_one\nlevel: 4\n# Example: 58\ncontent: |\n  The following operation deletes the **first** document with ``status``\n  equal to ``D``:\n\n  .. include:: /includes/driver-example-delete-58.rst\n\n  .. include:: /includes/driver-example-delete-result.rst\n\n---\nstepnum: 4\ntitle: Delete multiple documents.\nref: delete_many\nlevel: 4\n# Example: 57\ncontent: |\n  The following operation deletes *all* of the documents in the\n  specified ``inventory`` collection with ``status`` equal to ``A``:\n    \n  .. include:: /includes/driver-example-delete-57.rst\n\n  .. include:: /includes/driver-example-delete-result.rst\n\n  .. include:: /includes/drivers_close_connection.rst\n\n...\n","static_assets":[]},"server/delete":{"_id":"guides/andrew/master/server/delete","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"delete-data-from-mongodb","children":[{"type":"text","position":{"start":{"line":5}},"value":"Delete Data from MongoDB"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"languages","argument":[],"children":[{"type":"list","position":{"start":{"line":14}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":14}},"children":[{"type":"text","position":{"start":{"line":14}},"value":"shell"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":15}},"children":[{"type":"text","position":{"start":{"line":15}},"value":"compass"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":16}},"children":[{"type":"text","position":{"start":{"line":16}},"value":"python"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"motor"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"nodejs"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":19}},"children":[{"type":"text","position":{"start":{"line":19}},"value":"java-sync"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":20}},"children":[{"type":"text","position":{"start":{"line":20}},"value":"java-async"}]}]},{"type":"listItem","position":{"start":{"line":14}},"children":[{"type":"paragraph","position":{"start":{"line":21}},"children":[{"type":"text","position":{"start":{"line":21}},"value":"csharp"}]}]}]}]},{"type":"directive","position":{"start":{"line":23}},"name":"level","argument":[{"type":"text","position":{"start":{"line":23}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":25}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":25}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":27}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":29}},"children":[{"type":"text","position":{"start":{"line":29}},"value":"In this guide, you will delete documents from a MongoDB database."}]}]},{"type":"directive","position":{"start":{"line":31}},"name":"time","argument":[{"type":"text","position":{"start":{"line":31}},"value":"10"}],"children":[]},{"type":"directive","position":{"start":{"line":33}},"name":"prerequisites","argument":[],"children":[{"type":"list","position":{"start":{"line":35}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"directive","position":{"start":{"line":35}},"name":"include","argument":[{"type":"text","position":{"start":{"line":35}},"value":"/includes/prereqs_read_CRUD.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":35}},"children":[]}]}]},{"type":"listItem","position":{"start":{"line":35}},"children":[{"type":"paragraph","position":{"start":{"line":37}},"children":[{"type":"text","position":{"start":{"line":37}},"value":"Complete the "},{"type":"role","position":{"start":{"line":37}},"name":"doc","target":"/server/import","children":[]},{"type":"text","position":{"start":{"line":37}},"value":" guide so that there\nis data in your database to delete."}]}]}]}]},{"type":"directive","position":{"start":{"line":40}},"name":"check_your_environment","argument":[],"children":[{"type":"directive","position":{"start":{"line":42}},"name":"include","argument":[{"type":"text","position":{"start":{"line":42}},"value":"/includes/check_for_drivers_install.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":42}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":44}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":46}},"name":"include","argument":[{"type":"text","position":{"start":{"line":46}},"value":"/includes/steps/delete_server.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":46}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":48}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":50}},"children":[{"type":"text","position":{"start":{"line":50}},"value":"If you have successfully completed this guide, you have deleted\ndocuments from MongoDB. That completes this introduction to CRUD\noperations in MongoDB."}]}]},{"type":"directive","position":{"start":{"line":55}},"name":"seealso","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":57}},"children":[{"type":"text","position":{"start":{"line":57}},"value":"For other CRUD guides:"}]},{"type":"list","position":{"start":{"line":59}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":59}},"children":[{"type":"paragraph","position":{"start":{"line":59}},"children":[{"type":"role","position":{"start":{"line":59}},"name":"doc","target":"/server/insert","children":[]}]}]},{"type":"listItem","position":{"start":{"line":59}},"children":[{"type":"paragraph","position":{"start":{"line":61}},"children":[{"type":"role","position":{"start":{"line":61}},"name":"doc","target":"/server/read","children":[]}]}]},{"type":"listItem","position":{"start":{"line":59}},"children":[{"type":"paragraph","position":{"start":{"line":63}},"children":[{"type":"role","position":{"start":{"line":63}},"name":"doc","target":"/server/read_queries","children":[]}]}]},{"type":"listItem","position":{"start":{"line":59}},"children":[{"type":"paragraph","position":{"start":{"line":65}},"children":[{"type":"role","position":{"start":{"line":65}},"name":"doc","target":"/server/read_operators","children":[]}]}]},{"type":"listItem","position":{"start":{"line":59}},"children":[{"type":"paragraph","position":{"start":{"line":67}},"children":[{"type":"role","position":{"start":{"line":67}},"name":"doc","target":"/server/update","children":[]}]}]}]},{"type":"paragraph","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"For method reference:"}]},{"type":"list","position":{"start":{"line":71}},"ordered":false,"children":[{"type":"listItem","position":{"start":{"line":71}},"children":[{"type":"paragraph","position":{"start":{"line":71}},"children":[{"type":"role","position":{"start":{"line":71}},"name":"method","target":"db.collection.remove","children":[]}]}]},{"type":"listItem","position":{"start":{"line":71}},"children":[{"type":"paragraph","position":{"start":{"line":73}},"children":[{"type":"role","position":{"start":{"line":73}},"name":"method","target":"db.collection.deleteOne","children":[]}]}]},{"type":"listItem","position":{"start":{"line":71}},"children":[{"type":"paragraph","position":{"start":{"line":75}},"children":[{"type":"role","position":{"start":{"line":75}},"name":"method","target":"db.collection.deleteMany","children":[]}]}]}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   \n   title: Delete Data from MongoDB\n   type: Getting Started\n   level: beginner\n   author: MongoDB Documentation Team\n   product_version: 4.0\n   languages:\n     shell\n     compass\n     python\n     motor\n     nodejs\n     java-sync\n     java-async\n     csharp\n   result_description:\n     In this guide, you will delete documents from a MongoDB database.\n   time: 10\n   prerequisites:\n     - .. include:: /includes/prereqs_read_CRUD.rst\n     \n     - Complete the :doc:`/server/import` guide so that there\n       is data in your database to delete.\n   check_your_environment:\n     .. include:: /includes/check_for_drivers_install.rst\n   procedure:\n     .. include:: /includes/steps/delete_server.rst\n   summary:\n     If you have successfully completed this guide, you have deleted\n     documents from MongoDB. That completes this introduction to CRUD\n     operations in MongoDB.\n   whats_next:\n\n\n   seealso:\n     For other CRUD guides:\n     \n     - :doc:`/server/insert`\n\n     - :doc:`/server/read`\n\n     - :doc:`/server/read_queries`\n\n     - :doc:`/server/read_operators`\n\n     - :doc:`/server/update`\n\n     For method reference:\n\n     - :method:`db.collection.remove`\n\n     - :method:`db.collection.deleteOne`\n\n     - :method:`db.collection.deleteMany`\n\n","static_assets":[]},"git clone git@github.com:skerschb/testauth.git":{},"async setupStitch() {\n  //copy the name of your google-auth enabled stitch application here\n  //the name of the app will typically be the stitch application name\n  //with a \"-\"\" + random string appended\n  const appId = 'authentication_test-htbrq';\n\n  // Get a client for your Stitch app, or instantiate a new one\n  const client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeAppClient(appId);\n\n  //manage user authentication state\n  \n  // Check if this user has already authenticated and we're here\n  // from the redirect. If so, process the redirect to finish login.\n  if (client.auth.hasRedirectResult()) {\n    await client.auth.handleRedirectResult().catch(console.error);\n    console.log(\"Processed redirect result.\")\n  }\n\n  if (client.auth.isLoggedIn) {\n    // The user is logged in. Add their user object to component state.\n    currentUser = client.auth.user;\n    this.setState({ currentUser });\n  } else {\n    // The user has not yet authenticated. Begin the Google login flow.\n    const credential = new GoogleRedirectCredential();\n    client.auth.loginWithRedirect(credential);\n  }\n}":{},"includes/steps/react_googleauth":{"_id":"guides/andrew/master/includes/steps/react_googleauth","prefix":["guides","andrew","master"],"ast":{"type":"directive","name":"steps","position":{"start":{"line":0}},"children":[{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the React sample app."}],"id":"download-the-react-sample-app"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Download the sample app from "},{"type":"reference","position":{"start":{"line":0}},"refuri":"https://github.com/skerschb/testauth","children":[{"type":"text","position":{"start":{"line":0}},"value":"github"}]},{"type":"target","position":{"start":{"line":0}},"ids":["github"],"refuri":"https://github.com/skerschb/testauth","children":[]},{"type":"text","position":{"start":{"line":0}},"value":" or clone the repo."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"To clone the repo:"}]},{"type":"code","position":{"start":{"line":4}},"lang":"sh","copyable":true,"value":"git clone git@github.com:skerschb/testauth.git"},{"type":"paragraph","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"Look in the "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"src"}]},{"type":"text","position":{"start":{"line":8}},"value":" folder. In the "},{"type":"literal","position":{"start":{"line":8}},"children":[{"type":"text","position":{"start":{"line":8}},"value":"index.js"}]},{"type":"text","position":{"start":{"line":8}},"value":" toward the top of the file you will see an import\nstatement that shows the Stitch package you will need to install to run this application."}]},{"type":"code","lang":"javascript","copyable":false,"value":"import { Stitch, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\";"},{"type":"paragraph","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"Run "},{"type":"literal","position":{"start":{"line":17}},"children":[{"type":"text","position":{"start":{"line":17}},"value":"npm install"}]},{"type":"text","position":{"start":{"line":17}},"value":" to install the module required."}]},{"type":"code","position":{"start":{"line":19}},"lang":"sh","copyable":true,"value":"npm install mongodb-stitch-browser-sdk"},{"type":"paragraph","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"In "},{"type":"literal","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"index.js"}]},{"type":"text","position":{"start":{"line":23}},"value":" you will also see a method called "},{"type":"literal","position":{"start":{"line":23}},"children":[{"type":"text","position":{"start":{"line":23}},"value":"setupStitch()"}]},{"type":"text","position":{"start":{"line":23}},"value":".\nThis method is where the stitch client is initialized or assigned,\nand then checked for auth."}]},{"type":"code","lang":"javascript","copyable":false,"value":"async setupStitch() {\n  //copy the name of your google-auth enabled stitch application here\n  //the name of the app will typically be the stitch application name\n  //with a \"-\"\" + random string appended\n  const appId = 'authentication_test-htbrq';\n\n  // Get a client for your Stitch app, or instantiate a new one\n  const client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeAppClient(appId);\n\n  //manage user authentication state\n  \n  // Check if this user has already authenticated and we're here\n  // from the redirect. If so, process the redirect to finish login.\n  if (client.auth.hasRedirectResult()) {\n    await client.auth.handleRedirectResult().catch(console.error);\n    console.log(\"Processed redirect result.\")\n  }\n\n  if (client.auth.isLoggedIn) {\n    // The user is logged in. Add their user object to component state.\n    currentUser = client.auth.user;\n    this.setState({ currentUser });\n  } else {\n    // The user has not yet authenticated. Begin the Google login flow.\n    const credential = new GoogleRedirectCredential();\n    client.auth.loginWithRedirect(credential);\n  }\n}"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Build the sample app."}],"id":"build-the-sample-app"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Once you have downloaded or cloned the app, use "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"npm"}]},{"type":"text","position":{"start":{"line":0}},"value":" to install\nany remaining dependencies (the Stitch dependency has already been\ninstalled as part of Step 1)."}]},{"type":"code","position":{"start":{"line":4}},"lang":"sh","copyable":true,"value":"npm install"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Modify the package.json."}],"id":"modify-the-package-json"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"npm"}]},{"type":"text","position":{"start":{"line":0}},"value":" will install dependencies in the "},{"type":"literal","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"node_modules"}]},{"type":"text","position":{"start":{"line":0}},"value":" directory."}]},{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"After the packages are installed, there are a few parameters in the\npackage.json you will need to modify in order to deploy the application,\nin particular the "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"deploy"}]},{"type":"text","position":{"start":{"line":2}},"value":" and "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"homepage"}]},{"type":"text","position":{"start":{"line":2}},"value":" attributes."}]},{"type":"paragraph","position":{"start":{"line":6}},"children":[{"type":"text","position":{"start":{"line":6}},"value":"Consult the instructions for your deployment environment for the correct\nparameters to add to your package.json. The package.json that is included\nin the sample app uses "},{"type":"reference","position":{"start":{"line":6}},"refuri":"https://pages.github.com/","children":[{"type":"text","position":{"start":{"line":6}},"value":"Github Pages"}]},{"type":"target","position":{"start":{"line":6}},"ids":["github-pages"],"refuri":"https://pages.github.com/","children":[]},{"type":"text","position":{"start":{"line":6}},"value":" ."}]},{"type":"paragraph","position":{"start":{"line":10}},"children":[{"type":"text","position":{"start":{"line":10}},"value":"Once you have modified your parameters, it's time to deploy your application."}]},{"type":"code","position":{"start":{"line":12}},"lang":"sh","copyable":true,"value":"npm run deploy"}]}]},{"type":"directive","name":"step","position":{"start":{"line":0}},"children":[{"type":"section","position":{"start":{"line":0}},"children":[{"type":"heading","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Check your results"}],"id":"check-your-results"},{"type":"paragraph","position":{"start":{"line":0}},"children":[{"type":"text","position":{"start":{"line":0}},"value":"Once you have deployed your application, check the url for which you have set up\nGoogle OAuth. You should be directed to a google login page. Once you authenticate,\nthe application will render your username on the page."}]}]}]}]},"source":"title: Download the React sample app.\nref: download_react_google\nlevel: 4\nstepnum: 1\ncontent: |\n  Download the sample app from `github <https://github.com/skerschb/testauth>`_ or clone the repo.\n\n  To clone the repo:\n\n  .. code-block:: sh\n     \n     git clone git@github.com:skerschb/testauth.git\n\n  Look in the ``src`` folder. In the ``index.js`` toward the top of the file you will see an import\n  statement that shows the Stitch package you will need to install to run this application.\n\n  .. literalinclude:: /driver-examples/react_stitch_google.js\n     :language: javascript\n     :dedent: 2\n     :start-after: start stitch import\n     :end-before: end stitch import\n\n  Run ``npm install`` to install the module required.\n\n  .. code-block:: sh\n     \n     npm install mongodb-stitch-browser-sdk\n\n  In ``index.js`` you will also see a method called ``setupStitch()``.\n  This method is where the stitch client is initialized or assigned,\n  and then checked for auth.\n\n  .. literalinclude:: /driver-examples/react_stitch_google.js\n     :language: javascript\n     :dedent: 4\n     :start-after: start stitch setup\n     :end-before: end stitch setup\n \n---\ntitle: Build the sample app.\nref: auth\nlevel: 4\nstepnum: 2\ncontent: |\n  Once you have downloaded or cloned the app, use ``npm`` to install\n  any remaining dependencies (the Stitch dependency has already been\n  installed as part of Step 1).\n\n  .. code-block:: sh\n     \n     npm install\n---\ntitle: Modify the package.json.\nref: modify-package_json\nlevel: 4\nstepnum: 3\ncontent: |\n  ``npm`` will install dependencies in the ``node_modules`` directory.\n\n  After the packages are installed, there are a few parameters in the\n  package.json you will need to modify in order to deploy the application,\n  in particular the ``deploy`` and ``homepage`` attributes.\n\n  Consult the instructions for your deployment environment for the correct\n  parameters to add to your package.json. The package.json that is included\n  in the sample app uses `Github Pages <https://pages.github.com/>`_ .\n\n  Once you have modified your parameters, it's time to deploy your application.\n\n  .. code-block:: sh\n     \n     npm run deploy\n---\ntitle: Check your results\nref: check_googleauth\nlevel: 4\nstepnum: 4\ncontent: |\n  Once you have deployed your application, check the url for which you have set up\n  Google OAuth. You should be directed to a google login page. Once you authenticate,\n  the application will render your username on the page.\n\n...\n","static_assets":[]},"stitch/react_googleauth":{"_id":"guides/andrew/master/stitch/react_googleauth","prefix":["guides","andrew","master"],"ast":{"type":"root","children":[{"type":"section","position":{"start":{"line":5}},"children":[{"type":"heading","position":{"start":{"line":5}},"id":"sample-app-react-stitch-google-authentication","children":[{"type":"text","position":{"start":{"line":5}},"value":"Sample App: React + Stitch + Google Authentication"}]},{"type":"directive","position":{"start":{"line":7}},"name":"author","argument":[{"type":"text","position":{"start":{"line":7}},"value":"MongoDB Documentation Team"}],"children":[]},{"type":"directive","position":{"start":{"line":9}},"name":"category","argument":[{"type":"text","position":{"start":{"line":9}},"value":"Getting Started"}],"children":[]},{"type":"directive","position":{"start":{"line":12}},"name":"level","argument":[{"type":"text","position":{"start":{"line":12}},"value":"beginner"}],"children":[]},{"type":"directive","position":{"start":{"line":14}},"name":"product_version","argument":[{"type":"text","position":{"start":{"line":14}},"value":"4.0"}],"children":[]},{"type":"directive","position":{"start":{"line":16}},"name":"result_description","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":18}},"children":[{"type":"text","position":{"start":{"line":18}},"value":"In this guide, you will set up Google Authentication in your React+Stitch application."}]}]},{"type":"directive","position":{"start":{"line":20}},"name":"time","argument":[{"type":"text","position":{"start":{"line":20}},"value":"15"}],"children":[]},{"type":"directive","position":{"start":{"line":22}},"name":"prerequisites","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":24}},"children":[{"type":"text","position":{"start":{"line":24}},"value":"Before you start this Guide, see the instructions on how to enable "},{"type":"reference","position":{"start":{"line":24}},"refuri":"https://docs.mongodb.com/stitch/authentication/google/","children":[{"type":"text","position":{"start":{"line":24}},"value":"Google Authentication"}]},{"type":"target","position":{"start":{"line":24}},"ids":["google-authentication"],"refuri":"https://docs.mongodb.com/stitch/authentication/google/","children":[]},{"type":"text","position":{"start":{"line":24}},"value":" in your Stitch app. You will need an account on Google Cloud Services, an OAuth token generated by Google, and to enable and configure your Stitch application to use Google Authentication."}]},{"type":"paragraph","position":{"start":{"line":26}},"children":[{"type":"text","position":{"start":{"line":26}},"value":"The "},{"type":"reference","position":{"start":{"line":26}},"refuri":"https://docs.mongodb.com/stitch/authentication/google/","children":[{"type":"text","position":{"start":{"line":26}},"value":"Google Authentication Page"}]},{"type":"target","position":{"start":{"line":26}},"ids":["google-authentication-page"],"refuri":"https://docs.mongodb.com/stitch/authentication/google/","children":[]},{"type":"text","position":{"start":{"line":26}},"value":" will take you through these steps."}]}]},{"type":"directive","position":{"start":{"line":28}},"name":"check_your_environment","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"To deploy this sample application you will need "},{"type":"reference","position":{"start":{"line":30}},"refuri":"https://www.npmjs.com/","children":[{"type":"text","position":{"start":{"line":30}},"value":"npm"}]},{"type":"target","position":{"start":{"line":30}},"ids":["npm"],"refuri":"https://www.npmjs.com/","children":[]},{"type":"text","position":{"start":{"line":30}},"value":" and access to github.com in order to download the sample application.\nIf you would like to clone the github repository, you will need access to the "},{"type":"literal","position":{"start":{"line":30}},"children":[{"type":"text","position":{"start":{"line":30}},"value":"git"}]},{"type":"text","position":{"start":{"line":30}},"value":" CLI (command line interface)."}]},{"type":"paragraph","position":{"start":{"line":33}},"children":[{"type":"text","position":{"start":{"line":33}},"value":"To deploy your application, you will need a server to deploy your code. While Stitch allows for development in serverless environments, Google authentication will not work unless you deploy to a server."}]}]},{"type":"directive","position":{"start":{"line":35}},"name":"procedure","argument":[],"children":[{"type":"directive","position":{"start":{"line":37}},"name":"include","argument":[{"type":"text","position":{"start":{"line":37}},"value":"/includes/steps/react_googleauth.rst"}],"children":[{"type":"FixedTextElement","position":{"start":{"line":37}},"children":[]}]}]},{"type":"directive","position":{"start":{"line":39}},"name":"summary","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":41}},"children":[{"type":"text","position":{"start":{"line":41}},"value":"If you have successfully completed this guide, you have deployed a Stitch and React application with Google authentication enabled."}]}]},{"type":"directive","position":{"start":{"line":43}},"name":"whats_next","argument":[],"children":[{"type":"paragraph","position":{"start":{"line":45}},"children":[{"type":"text","position":{"start":{"line":45}},"value":"Want to build more with Stitch? See the "},{"type":"reference","position":{"start":{"line":45}},"refuri":"https://docs.mongodb.com/stitch/tutorials/","children":[{"type":"text","position":{"start":{"line":45}},"value":"Stitch tutorials"}]},{"type":"target","position":{"start":{"line":45}},"ids":["stitch-tutorials"],"refuri":"https://docs.mongodb.com/stitch/tutorials/","children":[]},{"type":"text","position":{"start":{"line":45}},"value":" for more ideas."}]}]}]}],"position":{"start":{"line":0}},"options":{"guide":""}},"source":".. guide::\n   title: Sample App: React + Stitch + Google Authentication\n   author: MongoDB Documentation Team\n   type: Getting Started\n   level: beginner\n   product_version: 4.0\n   result_description:\n     In this guide, you will set up Google Authentication in your React+Stitch application.\n   time: 15\n   prerequisites:\n     Before you start this Guide, see the instructions on how to enable `Google Authentication <https://docs.mongodb.com/stitch/authentication/google/>`_ in your Stitch app. You will need an account on Google Cloud Services, an OAuth token generated by Google, and to enable and configure your Stitch application to use Google Authentication.\n\n     The `Google Authentication Page <https://docs.mongodb.com/stitch/authentication/google/>`_ will take you through these steps.\n\n   check_your_environment:\n     To deploy this sample application you will need `npm <https://www.npmjs.com/>`_ and access to github.com in order to download the sample application.\n     If you would like to clone the github repository, you will need access to the ``git`` CLI (command line interface).\n\n     To deploy your application, you will need a server to deploy your code. While Stitch allows for development in serverless environments, Google authentication will not work unless you deploy to a server.\n   procedure:\n     .. include:: /includes/steps/react_googleauth.rst\n   summary:\n     If you have successfully completed this guide, you have deployed a Stitch and React application with Google authentication enabled.\n   whats_next:\n      Want to build more with Stitch? See the `Stitch tutorials <https://docs.mongodb.com/stitch/tutorials/>`_ for more ideas.","static_assets":[]}}